{"ast":null,"code":"/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\n\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) define(function () {\n    return factory(global, global.document, undefined);\n  });else if (typeof module === 'object' && typeof module.exports === 'object') module.exports = factory(global, global.document, undefined);else factory(global, global.document, undefined);\n})(typeof window !== 'undefined' ? window : this, function (window, document, undefined) {\n  'use strict';\n\n  var PLUGINNAME = 'OverlayScrollbars';\n  var TYPES = {\n    o: 'object',\n    f: 'function',\n    a: 'array',\n    s: 'string',\n    b: 'boolean',\n    n: 'number',\n    u: 'undefined',\n    z: 'null'\n    //d : 'date',\n    //e : 'error',\n    //r : 'regexp',\n    //y : 'symbol'\n  };\n\n  var LEXICON = {\n    c: 'class',\n    s: 'style',\n    i: 'id',\n    l: 'length',\n    p: 'prototype',\n    ti: 'tabindex',\n    oH: 'offsetHeight',\n    cH: 'clientHeight',\n    sH: 'scrollHeight',\n    oW: 'offsetWidth',\n    cW: 'clientWidth',\n    sW: 'scrollWidth',\n    hOP: 'hasOwnProperty',\n    bCR: 'getBoundingClientRect'\n  };\n  var VENDORS = function () {\n    //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n    var jsCache = {};\n    var cssCache = {};\n    var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n    var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n    function firstLetterToUpper(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    return {\n      _cssPrefixes: cssPrefixes,\n      _jsPrefixes: jsPrefixes,\n      _cssProperty: function _cssProperty(name) {\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var uppercasedName = firstLetterToUpper(name);\n        var elmStyle = document.createElement('div')[LEXICON.s];\n        var resultPossibilities;\n        var i = 0;\n        var v;\n        var currVendorWithoutDashes;\n        for (; i < cssPrefixes.length; i++) {\n          currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n          resultPossibilities = [name,\n          //transition\n          cssPrefixes[i] + name,\n          //-webkit-transition\n          currVendorWithoutDashes + uppercasedName,\n          //webkitTransition\n          firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n          ];\n\n          for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n            if (elmStyle[resultPossibilities[v]] !== undefined) {\n              result = resultPossibilities[v];\n              break;\n            }\n          }\n        }\n        cssCache[name] = result;\n        return result;\n      },\n      _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n        var name = property + ' ' + values;\n        var result = cssCache[name];\n        if (cssCache[LEXICON.hOP](name)) return result;\n        var dummyStyle = document.createElement('div')[LEXICON.s];\n        var possbleValues = values.split(' ');\n        var preparedSuffix = suffix || '';\n        var i = 0;\n        var v = -1;\n        var prop;\n        for (; i < possbleValues[LEXICON.l]; i++) {\n          for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n            if (dummyStyle[LEXICON.l]) {\n              result = prop;\n              break;\n            }\n          }\n        }\n        cssCache[name] = result;\n        return result;\n      },\n      _jsAPI: function _jsAPI(name, isInterface, fallback) {\n        var i = 0;\n        var result = jsCache[name];\n        if (!jsCache[LEXICON.hOP](name)) {\n          result = window[name];\n          for (; i < jsPrefixes[LEXICON.l]; i++) {\n            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n          }\n          jsCache[name] = result;\n        }\n        return result || fallback;\n      }\n    };\n  }();\n  var COMPATIBILITY = function () {\n    function windowSize(x) {\n      return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n    }\n    function bind(func, thisObj) {\n      if (typeof func != TYPES.f) {\n        throw \"Can't bind function!\";\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var proto = LEXICON.p;\n      var aArgs = Array[proto].slice.call(arguments, 2);\n      var fNOP = function fNOP() {};\n      var fBound = function fBound() {\n        return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n      };\n      if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n      fBound[proto] = new fNOP();\n      return fBound;\n    }\n    return {\n      /**\r\n       * Gets the current window width.\r\n       * @returns {Number|number} The current window width in pixel.\r\n       */\n      wW: bind(windowSize, 0, true),\n      /**\r\n       * Gets the current window height.\r\n       * @returns {Number|number} The current window height in pixel.\r\n       */\n      wH: bind(windowSize, 0),\n      /**\r\n       * Gets the MutationObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n       */\n      mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n      /**\r\n       * Gets the ResizeObserver Object or undefined if not supported.\r\n       * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n       */\n      rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n      /**\r\n       * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n       */\n      rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n        return window.setTimeout(func, 1000 / 60);\n      }),\n      /**\r\n       * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n       * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n       */\n      cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n        return window.clearTimeout(id);\n      }),\n      /**\r\n       * Gets the current time.\r\n       * @returns {number} The current time.\r\n       */\n      now: function now() {\n        return Date.now && Date.now() || new Date().getTime();\n      },\n      /**\r\n       * Stops the propagation of the given event.\r\n       * @param event The event of which the propagation shall be stoped.\r\n       */\n      stpP: function stpP(event) {\n        if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n      },\n      /**\r\n       * Prevents the default action of the given event.\r\n       * @param event The event of which the default action shall be prevented.\r\n       */\n      prvD: function prvD(event) {\n        if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n      },\n      /**\r\n       * Gets the pageX and pageY values of the given mouse event.\r\n       * @param event The mouse event of which the pageX and pageX shall be got.\r\n       * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n       */\n      page: function page(event) {\n        event = event.originalEvent || event;\n        var strPage = 'page';\n        var strClient = 'client';\n        var strX = 'X';\n        var strY = 'Y';\n        var target = event.target || event.srcElement || document;\n        var eventDoc = target.ownerDocument || document;\n        var doc = eventDoc.documentElement;\n        var body = eventDoc.body;\n\n        //if touch event return return pageX/Y of it\n        if (event.touches !== undefined) {\n          var touch = event.touches[0];\n          return {\n            x: touch[strPage + strX],\n            y: touch[strPage + strY]\n          };\n        }\n\n        // Calculate pageX/Y if not native supported\n        if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n          return {\n            x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n            y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n          };\n        }\n        return {\n          x: event[strPage + strX],\n          y: event[strPage + strY]\n        };\n      },\n      /**\r\n       * Gets the clicked mouse button of the given mouse event.\r\n       * @param event The mouse event of which the clicked button shal be got.\r\n       * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n       */\n      mBtn: function mBtn(event) {\n        var button = event.button;\n        if (!event.which && button !== undefined) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n      },\n      /**\r\n       * Checks whether a item is in the given array and returns its index.\r\n       * @param item The item of which the position in the array shall be determined.\r\n       * @param arr The array.\r\n       * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n       */\n      inA: function inA(item, arr) {\n        for (var i = 0; i < arr[LEXICON.l]; i++) {\n          //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n          try {\n            if (arr[i] === item) return i;\n          } catch (e) {}\n        }\n        return -1;\n      },\n      /**\r\n       * Returns true if the given value is a array.\r\n       * @param arr The potential array.\r\n       * @returns {boolean} True if the given value is a array, false otherwise.\r\n       */\n      isA: function isA(arr) {\n        var def = Array.isArray;\n        return def ? def(arr) : this.type(arr) == TYPES.a;\n      },\n      /**\r\n       * Determine the internal JavaScript [[Class]] of the given object.\r\n       * @param obj The object of which the type shall be determined.\r\n       * @returns {string} The type of the given object.\r\n       */\n      type: function type(obj) {\n        if (obj === undefined) return obj + '';\n        if (obj === null) return obj + '';\n        return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n      },\n      bind: bind\n\n      /**\r\n       * Gets the vendor-prefixed CSS property by the given name.\r\n       * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n       * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n       * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n       * @param propName The unprefixed CSS property name.\r\n       * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n        cssProp: function(propName) {\r\n          return VENDORS._cssProperty(propName);\r\n      }\r\n      */\n    };\n  }();\n\n  var MATH = Math;\n  var JQUERY = window.jQuery;\n  var EASING = function () {\n    var _easingsMath = {\n      p: MATH.PI,\n      c: MATH.cos,\n      s: MATH.sin,\n      w: MATH.pow,\n      t: MATH.sqrt,\n      n: MATH.asin,\n      a: MATH.abs,\n      o: 1.70158\n    };\n\n    /*\r\n     x : current percent (0 - 1),\r\n     t : current time (duration * percent),\r\n     b : start value (from),\r\n     c : end value (to),\r\n     d : duration\r\n       easingName : function(x, t, b, c, d) { return easedValue; }\r\n     */\n\n    return {\n      swing: function swing(x, t, b, c, d) {\n        return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n      },\n      linear: function linear(x, t, b, c, d) {\n        return x;\n      },\n      easeInQuad: function easeInQuad(x, t, b, c, d) {\n        return c * (t /= d) * t + b;\n      },\n      easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n      },\n      easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n      },\n      easeInCubic: function easeInCubic(x, t, b, c, d) {\n        return c * (t /= d) * t * t + b;\n      },\n      easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n      },\n      easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n      },\n      easeInQuart: function easeInQuart(x, t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n      },\n      easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n      },\n      easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n      },\n      easeInQuint: function easeInQuint(x, t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n      },\n      easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n      },\n      easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n      },\n      easeInSine: function easeInSine(x, t, b, c, d) {\n        return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n      },\n      easeOutSine: function easeOutSine(x, t, b, c, d) {\n        return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n      },\n      easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n        return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n      },\n      easeInExpo: function easeInExpo(x, t, b, c, d) {\n        return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n      },\n      easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n        return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n      },\n      easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n        if (t == 0) return b;\n        if (t == d) return b + c;\n        if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n        return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n      },\n      easeInCirc: function easeInCirc(x, t, b, c, d) {\n        return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n      },\n      easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n        return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n      },\n      easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n        return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n      },\n      easeInElastic: function easeInElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n        return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n      },\n      easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d) == 1) return b + c;\n        if (!p) p = d * .3;\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n        return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n      },\n      easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n        var s = _easingsMath.o;\n        var p = 0;\n        var a = c;\n        if (t == 0) return b;\n        if ((t /= d / 2) == 2) return b + c;\n        if (!p) p = d * (.3 * 1.5);\n        if (a < _easingsMath.a(c)) {\n          a = c;\n          s = p / 4;\n        } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n        if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n      },\n      easeInBack: function easeInBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n      },\n      easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n      },\n      easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n        s = s || _easingsMath.o;\n        return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n      },\n      easeInBounce: function easeInBounce(x, t, b, c, d) {\n        return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n      },\n      easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n        var o = 7.5625;\n        if ((t /= d) < 1 / 2.75) {\n          return c * (o * t * t) + b;\n        } else if (t < 2 / 2.75) {\n          return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n        } else if (t < 2.5 / 2.75) {\n          return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n        } else {\n          return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n        }\n      },\n      easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n        return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n      }\n    };\n    /*\r\n     *\r\n     * TERMS OF USE - EASING EQUATIONS\r\n     * \r\n     * Open source under the BSD License. \r\n     * \r\n     * Copyright Â© 2001 Robert Penner\r\n     * All rights reserved.\r\n     * \r\n     * Redistribution and use in source and binary forms, with or without modification, \r\n     * are permitted provided that the following conditions are met:\r\n     * \r\n     * Redistributions of source code must retain the above copyright notice, this list of \r\n     * conditions and the following disclaimer.\r\n     * Redistributions in binary form must reproduce the above copyright notice, this list \r\n     * of conditions and the following disclaimer in the documentation and/or other materials \r\n     * provided with the distribution.\r\n     * \r\n     * Neither the name of the author nor the names of contributors may be used to endorse \r\n     * or promote products derived from this software without specific prior written permission.\r\n     * \r\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n     * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n     * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n     *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n     *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n     *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n     * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n     *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n     * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n     *\r\n     */\n  }();\n\n  var FRAMEWORK = function () {\n    var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    var _strSpace = ' ';\n    var _strEmpty = '';\n    var _strScrollLeft = 'scrollLeft';\n    var _strScrollTop = 'scrollTop';\n    var _animations = [];\n    var _type = COMPATIBILITY.type;\n    var _cssNumber = {\n      animationIterationCount: true,\n      columnCount: true,\n      fillOpacity: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      widows: true,\n      zIndex: true,\n      zoom: true\n    };\n    function extend() {\n      var src,\n        copyIsArray,\n        copy,\n        name,\n        options,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments[LEXICON.l],\n        deep = false;\n\n      // Handle a deep copy situation\n      if (_type(target) == TYPES.b) {\n        deep = target;\n        target = arguments[1] || {};\n        // skip the boolean and the target\n        i = 2;\n      }\n\n      // Handle case when target is a string or something (possible in deep copy)\n      if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n        target = {};\n      }\n\n      // extend jQuery itself if only one argument is passed\n      if (length === i) {\n        target = FakejQuery;\n        --i;\n      }\n      for (; i < length; i++) {\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) != null) {\n          // Extend the base object\n          for (name in options) {\n            src = target[name];\n            copy = options[name];\n\n            // Prevent never-ending loop\n            if (target === copy) {\n              continue;\n            }\n\n            // Recurse if we're merging plain objects or arrays\n            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n              if (copyIsArray) {\n                copyIsArray = false;\n                clone = src && COMPATIBILITY.isA(src) ? src : [];\n              } else {\n                clone = src && isPlainObject(src) ? src : {};\n              }\n\n              // Never move original objects, clone them\n              target[name] = extend(deep, clone, copy);\n\n              // Don't bring in undefined values\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      }\n\n      // Return the modified object\n      return target;\n    }\n    ;\n    function inArray(item, arr, fromIndex) {\n      for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n        if (arr[i] === item) return i;\n      }\n      return -1;\n    }\n    function isFunction(obj) {\n      return _type(obj) == TYPES.f;\n    }\n    ;\n    function isEmptyObject(obj) {\n      for (var name in obj) {\n        return false;\n      }\n      return true;\n    }\n    ;\n    function isPlainObject(obj) {\n      if (!obj || _type(obj) != TYPES.o) return false;\n      var key;\n      var proto = LEXICON.p;\n      var hasOwnProperty = Object[proto].hasOwnProperty;\n      var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n      var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n      if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n        return false;\n      }\n      for (key in obj) {/**/}\n      return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n    }\n    ;\n    function _each(obj, callback) {\n      var i = 0;\n      if (isArrayLike(obj)) {\n        for (; i < obj[LEXICON.l]; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) break;\n        }\n      }\n      return obj;\n    }\n    ;\n    function isArrayLike(obj) {\n      var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n      var t = _type(obj);\n      return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n    }\n    function stripAndCollapse(value) {\n      var tokens = value.match(_rnothtmlwhite) || [];\n      return tokens.join(_strSpace);\n    }\n    function matches(elem, selector) {\n      var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n      var i = nodeList[LEXICON.l];\n      while (i--) {\n        if (nodeList[i] == elem) return true;\n      }\n      return false;\n    }\n    function insertAdjacentElement(el, strategy, child) {\n      if (COMPATIBILITY.isA(child)) {\n        for (var i = 0; i < child[LEXICON.l]; i++) {\n          insertAdjacentElement(el, strategy, child[i]);\n        }\n      } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n    }\n    function setCSSVal(el, prop, val) {\n      try {\n        if (el[LEXICON.s][prop] !== undefined) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n      } catch (e) {}\n    }\n    function parseCSSVal(prop, val) {\n      if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n      return val;\n    }\n    function startNextAnimationInQ(animObj, removeFromQ) {\n      var index;\n      var nextAnim;\n      if (removeFromQ !== false) animObj.q.splice(0, 1);\n      if (animObj.q[LEXICON.l] > 0) {\n        nextAnim = animObj.q[0];\n        _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n      } else {\n        index = inArray(animObj, _animations);\n        if (index > -1) _animations.splice(index, 1);\n      }\n    }\n    function setAnimationValue(el, prop, value) {\n      if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n    }\n    function _animate(el, props, options, easing, complete, guaranteedNext) {\n      var hasOptions = isPlainObject(options);\n      var from = {};\n      var to = {};\n      var i = 0;\n      var key;\n      var animObj;\n      var start;\n      var progress;\n      var step;\n      var specialEasing;\n      var duration;\n      if (hasOptions) {\n        easing = options.easing;\n        start = options.start;\n        progress = options.progress;\n        step = options.step;\n        specialEasing = options.specialEasing;\n        complete = options.complete;\n        duration = options.duration;\n      } else duration = options;\n      specialEasing = specialEasing || {};\n      duration = duration || 400;\n      easing = easing || 'swing';\n      guaranteedNext = guaranteedNext || false;\n      for (; i < _animations[LEXICON.l]; i++) {\n        if (_animations[i].el === el) {\n          animObj = _animations[i];\n          break;\n        }\n      }\n      if (!animObj) {\n        animObj = {\n          el: el,\n          q: []\n        };\n        _animations.push(animObj);\n      }\n      for (key in props) {\n        if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n      }\n      for (key in from) {\n        if (from[key] !== props[key] && props[key] !== undefined) to[key] = props[key];\n      }\n      if (!isEmptyObject(to)) {\n        var timeNow;\n        var end;\n        var percent;\n        var fromVal;\n        var toVal;\n        var easedVal;\n        var timeStart;\n        var _frame;\n        var elapsed;\n        var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n        var qObj = {\n          props: to,\n          duration: hasOptions ? options : duration,\n          easing: easing,\n          complete: complete\n        };\n        if (qPos === -1) {\n          qPos = animObj.q[LEXICON.l];\n          animObj.q.push(qObj);\n        }\n        if (qPos === 0) {\n          if (duration > 0) {\n            timeStart = COMPATIBILITY.now();\n            _frame = function frame() {\n              timeNow = COMPATIBILITY.now();\n              elapsed = timeNow - timeStart;\n              end = qObj.stop || elapsed >= duration;\n              percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n              for (key in to) {\n                fromVal = parseFloat(from[key]);\n                toVal = parseFloat(to[key]);\n                easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                setAnimationValue(el, key, easedVal);\n                if (isFunction(step)) {\n                  step(easedVal, {\n                    elem: el,\n                    prop: key,\n                    start: fromVal,\n                    now: easedVal,\n                    end: toVal,\n                    pos: percent,\n                    options: {\n                      easing: easing,\n                      speacialEasing: specialEasing,\n                      duration: duration,\n                      complete: complete,\n                      step: step\n                    },\n                    startTime: timeStart\n                  });\n                }\n              }\n              if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n              if (end) {\n                startNextAnimationInQ(animObj);\n                if (isFunction(complete)) complete();\n              } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n            };\n            qObj.frame = COMPATIBILITY.rAF()(_frame);\n          } else {\n            for (key in to) {\n              setAnimationValue(el, key, to[key]);\n            }\n            startNextAnimationInQ(animObj);\n          }\n        }\n      } else if (guaranteedNext) startNextAnimationInQ(animObj);\n    }\n    function _stop(el, clearQ, jumpToEnd) {\n      var animObj;\n      var qObj;\n      var key;\n      var i = 0;\n      for (; i < _animations[LEXICON.l]; i++) {\n        animObj = _animations[i];\n        if (animObj.el === el) {\n          if (animObj.q[LEXICON.l] > 0) {\n            qObj = animObj.q[0];\n            qObj.stop = true;\n            COMPATIBILITY.cAF()(qObj.frame);\n            animObj.q.splice(0, 1);\n            if (jumpToEnd) for (key in qObj.props) {\n              setAnimationValue(el, key, qObj.props[key]);\n            }\n            if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n          }\n          break;\n        }\n      }\n    }\n    function elementIsVisible(el) {\n      return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n    }\n    function FakejQuery(selector) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var base = new FakejQuery();\n      var elements = selector;\n      var i = 0;\n      var elms;\n      var el;\n      if (_type(selector) == TYPES.s) {\n        elements = [];\n        if (selector.charAt(0) === '<') {\n          el = document.createElement('div');\n          el.innerHTML = selector;\n          elms = el.children;\n        } else {\n          elms = document.querySelectorAll(selector);\n        }\n        for (; i < elms[LEXICON.l]; i++) {\n          elements.push(elms[i]);\n        }\n      }\n      if (elements) {\n        if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n        for (i = 0; i < elements[LEXICON.l]; i++) {\n          base[i] = elements[i];\n        }\n        base[LEXICON.l] = elements[LEXICON.l];\n      }\n      return base;\n    }\n    ;\n    FakejQuery[LEXICON.p] = {\n      //EVENTS:\n\n      on: function on(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n          try {\n            if (el.addEventListener) {\n              for (; i < eventNameLength; i++) {\n                el.addEventListener(eventName[i], handler);\n              }\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) {\n                el.attachEvent('on' + eventName[i], handler);\n              }\n            }\n          } catch (e) {}\n        });\n      },\n      off: function off(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        var eventNameLength = eventName[LEXICON.l];\n        var i = 0;\n        var el;\n        return this.each(function () {\n          el = this;\n          try {\n            if (el.removeEventListener) {\n              for (; i < eventNameLength; i++) {\n                el.removeEventListener(eventName[i], handler);\n              }\n            } else if (el.detachEvent) {\n              for (; i < eventNameLength; i++) {\n                el.detachEvent('on' + eventName[i], handler);\n              }\n            }\n          } catch (e) {}\n        });\n      },\n      one: function one(eventName, handler) {\n        eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n        return this.each(function () {\n          var el = FakejQuery(this);\n          FakejQuery.each(eventName, function (i, oneEventName) {\n            var oneHandler = function oneHandler(e) {\n              handler.call(this, e);\n              el.off(oneEventName, oneHandler);\n            };\n            el.on(oneEventName, oneHandler);\n          });\n        });\n      },\n      trigger: function trigger(eventName) {\n        var el;\n        var event;\n        return this.each(function () {\n          el = this;\n          if (document.createEvent) {\n            event = document.createEvent('HTMLEvents');\n            event.initEvent(eventName, true, false);\n            el.dispatchEvent(event);\n          } else {\n            el.fireEvent('on' + eventName);\n          }\n        });\n      },\n      //DOM NODE INSERTING / REMOVING:\n\n      append: function append(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforeend', child);\n        });\n      },\n      prepend: function prepend(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterbegin', child);\n        });\n      },\n      before: function before(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'beforebegin', child);\n        });\n      },\n      after: function after(child) {\n        return this.each(function () {\n          insertAdjacentElement(this, 'afterend', child);\n        });\n      },\n      remove: function remove() {\n        return this.each(function () {\n          var el = this;\n          var parentNode = el.parentNode;\n          if (parentNode != null) parentNode.removeChild(el);\n        });\n      },\n      unwrap: function unwrap() {\n        var parents = [];\n        var i;\n        var el;\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (inArray(parent, parents) === -1) parents.push(parent);\n        });\n        for (i = 0; i < parents[LEXICON.l]; i++) {\n          el = parents[i];\n          parent = el.parentNode;\n          while (el.firstChild) {\n            parent.insertBefore(el.firstChild, el);\n          }\n          parent.removeChild(el);\n        }\n        return this;\n      },\n      wrapAll: function wrapAll(wrapperHTML) {\n        var i;\n        var nodes = this;\n        var wrapper = FakejQuery(wrapperHTML)[0];\n        var deepest = wrapper;\n        var parent = nodes[0].parentNode;\n        var previousSibling = nodes[0].previousSibling;\n        while (deepest.childNodes[LEXICON.l] > 0) {\n          deepest = deepest.childNodes[0];\n        }\n        for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n          deepest.appendChild(nodes[i]);\n        }\n        var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n        parent.insertBefore(wrapper, nextSibling);\n        return this;\n      },\n      wrapInner: function wrapInner(wrapperHTML) {\n        return this.each(function () {\n          var el = FakejQuery(this);\n          var contents = el.contents();\n          if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n        });\n      },\n      wrap: function wrap(wrapperHTML) {\n        return this.each(function () {\n          FakejQuery(this).wrapAll(wrapperHTML);\n        });\n      },\n      //DOM NODE MANIPULATION / INFORMATION:\n\n      css: function css(styles, val) {\n        var el;\n        var key;\n        var cptStyle;\n        var getCptStyle = window.getComputedStyle;\n        if (_type(styles) == TYPES.s) {\n          if (val === undefined) {\n            el = this[0];\n            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\n\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n          } else {\n            return this.each(function () {\n              setCSSVal(this, styles, val);\n            });\n          }\n        } else {\n          return this.each(function () {\n            for (key in styles) {\n              setCSSVal(this, key, styles[key]);\n            }\n          });\n        }\n      },\n      hasClass: function hasClass(className) {\n        var elem,\n          i = 0;\n        var classNamePrepared = _strSpace + className + _strSpace;\n        var classList;\n        while (elem = this[i++]) {\n          classList = elem.classList;\n          if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n        }\n        return false;\n      },\n      addClass: function addClass(className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n            if (supportClassList) {\n              while (clazz = classes[v++]) {\n                elmClassList.add(clazz);\n              }\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n              if (cur) {\n                while (clazz = classes[v++]) {\n                  if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                }\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n        return this;\n      },\n      removeClass: function removeClass(className) {\n        var classes;\n        var elem;\n        var cur;\n        var curValue;\n        var clazz;\n        var finalValue;\n        var supportClassList;\n        var elmClassList;\n        var i = 0;\n        var v = 0;\n        if (className) {\n          classes = className.match(_rnothtmlwhite) || [];\n          while (elem = this[i++]) {\n            elmClassList = elem.classList;\n            if (supportClassList === undefined) supportClassList = elmClassList !== undefined;\n            if (supportClassList) {\n              while (clazz = classes[v++]) {\n                elmClassList.remove(clazz);\n              }\n            } else {\n              curValue = elem.className + _strEmpty;\n              cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n              if (cur) {\n                while (clazz = classes[v++]) {\n                  while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                    cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                  }\n                }\n                finalValue = stripAndCollapse(cur);\n                if (curValue !== finalValue) elem.className = finalValue;\n              }\n            }\n          }\n        }\n        return this;\n      },\n      hide: function hide() {\n        return this.each(function () {\n          this[LEXICON.s].display = 'none';\n        });\n      },\n      show: function show() {\n        return this.each(function () {\n          this[LEXICON.s].display = 'block';\n        });\n      },\n      attr: function attr(attrName, value) {\n        var i = 0;\n        var el;\n        while (el = this[i++]) {\n          if (value === undefined) return el.getAttribute(attrName);\n          el.setAttribute(attrName, value);\n        }\n        return this;\n      },\n      removeAttr: function removeAttr(attrName) {\n        return this.each(function () {\n          this.removeAttribute(attrName);\n        });\n      },\n      offset: function offset() {\n        var el = this[0];\n        var rect = el[LEXICON.bCR]();\n        var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n        var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n        return {\n          top: rect.top + scrollTop,\n          left: rect.left + scrollLeft\n        };\n      },\n      position: function position() {\n        var el = this[0];\n        return {\n          top: el.offsetTop,\n          left: el.offsetLeft\n        };\n      },\n      scrollLeft: function scrollLeft(value) {\n        var i = 0;\n        var el;\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollLeft];\n          el[_strScrollLeft] = value;\n        }\n        return this;\n      },\n      scrollTop: function scrollTop(value) {\n        var i = 0;\n        var el;\n        while (el = this[i++]) {\n          if (value === undefined) return el[_strScrollTop];\n          el[_strScrollTop] = value;\n        }\n        return this;\n      },\n      val: function val(value) {\n        var el = this[0];\n        if (!value) return el.value;\n        el.value = value;\n        return this;\n      },\n      //DOM TRAVERSAL / FILTERING:\n\n      first: function first() {\n        return this.eq(0);\n      },\n      last: function last() {\n        return this.eq(-1);\n      },\n      eq: function eq(index) {\n        return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n      },\n      find: function find(selector) {\n        var children = [];\n        var i;\n        this.each(function () {\n          var el = this;\n          var ch = el.querySelectorAll(selector);\n          for (i = 0; i < ch[LEXICON.l]; i++) {\n            children.push(ch[i]);\n          }\n        });\n        return FakejQuery(children);\n      },\n      children: function children(selector) {\n        var children = [];\n        var el;\n        var ch;\n        var i;\n        this.each(function () {\n          ch = this.children;\n          for (i = 0; i < ch[LEXICON.l]; i++) {\n            el = ch[i];\n            if (selector) {\n              if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n            } else children.push(el);\n          }\n        });\n        return FakejQuery(children);\n      },\n      parent: function parent(selector) {\n        var parents = [];\n        var parent;\n        this.each(function () {\n          parent = this.parentNode;\n          if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n        });\n        return FakejQuery(parents);\n      },\n      is: function is(selector) {\n        var el;\n        var i;\n        for (i = 0; i < this[LEXICON.l]; i++) {\n          el = this[i];\n          if (selector === ':visible') return elementIsVisible(el);\n          if (selector === ':hidden') return !elementIsVisible(el);\n          if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n        }\n        return false;\n      },\n      contents: function contents() {\n        var contents = [];\n        var childs;\n        var i;\n        this.each(function () {\n          childs = this.childNodes;\n          for (i = 0; i < childs[LEXICON.l]; i++) {\n            contents.push(childs[i]);\n          }\n        });\n        return FakejQuery(contents);\n      },\n      each: function each(callback) {\n        return _each(this, callback);\n      },\n      //ANIMATION:\n\n      animate: function animate(props, duration, easing, complete) {\n        return this.each(function () {\n          _animate(this, props, duration, easing, complete);\n        });\n      },\n      stop: function stop(clearQ, jump) {\n        return this.each(function () {\n          _stop(this, clearQ, jump);\n        });\n      }\n    };\n    extend(FakejQuery, {\n      extend: extend,\n      inArray: inArray,\n      isEmptyObject: isEmptyObject,\n      isPlainObject: isPlainObject,\n      each: _each\n    });\n    return FakejQuery;\n  }();\n  var INSTANCES = function () {\n    var _targets = [];\n    var _instancePropertyString = '__overlayScrollbars__';\n\n    /**\r\n     * Register, unregister or get a certain (or all) instances.\r\n     * Register: Pass the target and the instance.\r\n     * Unregister: Pass the target and null.\r\n     * Get Instance: Pass the target from which the instance shall be got.\r\n     * Get Targets: Pass no arguments.\r\n     * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n     * @param instance The instance.\r\n     * @returns {*|void} Returns the instance from the given target.\r\n     */\n    return function (target, instance) {\n      var argLen = arguments[LEXICON.l];\n      if (argLen < 1) {\n        //return all targets\n        return _targets;\n      } else {\n        if (instance) {\n          //register instance\n          target[_instancePropertyString] = instance;\n          _targets.push(target);\n        } else {\n          var index = COMPATIBILITY.inA(target, _targets);\n          if (index > -1) {\n            if (argLen > 1) {\n              //unregister instance\n              delete target[_instancePropertyString];\n              _targets.splice(index, 1);\n            } else {\n              //get instance from target\n              return _targets[index][_instancePropertyString];\n            }\n          }\n        }\n      }\n    };\n  }();\n  var PLUGIN = function () {\n    var _plugin;\n    var _pluginsGlobals;\n    var _pluginsAutoUpdateLoop;\n    var _pluginsExtensions = [];\n    var _pluginsOptions = function () {\n      var type = COMPATIBILITY.type;\n      var possibleTemplateTypes = [TYPES.b,\n      //boolean\n      TYPES.n,\n      //number\n      TYPES.s,\n      //string\n      TYPES.a,\n      //array\n      TYPES.o,\n      //object\n      TYPES.f,\n      //function\n      TYPES.z //null\n      ];\n\n      var restrictedStringsSplit = ' ';\n      var restrictedStringsPossibilitiesSplit = ':';\n      var classNameAllowedValues = [TYPES.z, TYPES.s];\n      var numberAllowedValues = TYPES.n;\n      var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n      var booleanTrueTemplate = [true, TYPES.b];\n      var booleanFalseTemplate = [false, TYPES.b];\n      var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n      var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n      var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n      var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n      var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n      var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n      var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n      var optionsDefaultsAndTemplate = {\n        className: ['os-theme-dark', classNameAllowedValues],\n        //null || string\n        resize: ['none', resizeAllowedValues],\n        //none || both  || horizontal || vertical || n || b || h || v\n        sizeAutoCapable: booleanTrueTemplate,\n        //true || false\n        clipAlways: booleanTrueTemplate,\n        //true || false\n        normalizeRTL: booleanTrueTemplate,\n        //true || false\n        paddingAbsolute: booleanFalseTemplate,\n        //true || false\n        autoUpdate: [null, booleanNullAllowedValues],\n        //true || false || null\n        autoUpdateInterval: [33, numberAllowedValues],\n        //number\n        updateOnLoad: updateOnLoadTemplate,\n        //string || array || null\n        nativeScrollbarsOverlaid: {\n          showNativeScrollbars: booleanFalseTemplate,\n          //true || false\n          initialize: booleanTrueTemplate //true || false\n        },\n\n        overflowBehavior: {\n          x: ['scroll', overflowBehaviorAllowedValues],\n          //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n          y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n        },\n\n        scrollbars: {\n          visibility: ['auto', scrollbarsVisibilityAllowedValues],\n          //visible || hidden || auto || v || h || a\n          autoHide: ['never', scrollbarsAutoHideAllowedValues],\n          //never || scroll || leave || move || n || s || l || m\n          autoHideDelay: [800, numberAllowedValues],\n          //number\n          dragScrolling: booleanTrueTemplate,\n          //true || false\n          clickScrolling: booleanFalseTemplate,\n          //true || false\n          touchSupport: booleanTrueTemplate,\n          //true || false\n          snapHandle: booleanFalseTemplate //true || false\n        },\n\n        textarea: {\n          dynWidth: booleanFalseTemplate,\n          //true || false\n          dynHeight: booleanFalseTemplate,\n          //true || false\n          inheritedAttrs: inheritedAttrsTemplate //string || array || null\n        },\n\n        callbacks: {\n          onInitialized: callbackTemplate,\n          //null || function\n          onInitializationWithdrawn: callbackTemplate,\n          //null || function\n          onDestroyed: callbackTemplate,\n          //null || function\n          onScrollStart: callbackTemplate,\n          //null || function\n          onScroll: callbackTemplate,\n          //null || function\n          onScrollStop: callbackTemplate,\n          //null || function\n          onOverflowChanged: callbackTemplate,\n          //null || function\n          onOverflowAmountChanged: callbackTemplate,\n          //null || function\n          onDirectionChanged: callbackTemplate,\n          //null || function\n          onContentSizeChanged: callbackTemplate,\n          //null || function\n          onHostSizeChanged: callbackTemplate,\n          //null || function\n          onUpdated: callbackTemplate //null || function\n        }\n      };\n\n      var convert = function convert(template) {\n        var recursive = function recursive(obj) {\n          var key;\n          var val;\n          var valType;\n          for (key in obj) {\n            if (!obj[LEXICON.hOP](key)) continue;\n            val = obj[key];\n            valType = type(val);\n            if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n          }\n          return obj;\n        };\n        return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n      };\n      return {\n        _defaults: convert(),\n        _template: convert(true),\n        /**\r\n         * Validates the passed object by the passed template.\r\n         * @param obj The object which shall be validated.\r\n         * @param template The template which defines the allowed values and types.\r\n         * @param writeErrors True if errors shall be logged to the console.\r\n         * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n         * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n         */\n        _validate: function _validate(obj, template, writeErrors, diffObj) {\n          var validatedOptions = {};\n          var validatedOptionsPrepared = {};\n          var objectCopy = FRAMEWORK.extend(true, {}, obj);\n          var inArray = FRAMEWORK.inArray;\n          var isEmptyObj = FRAMEWORK.isEmptyObject;\n          var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n            for (var prop in template) {\n              if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                var isValid = false;\n                var isDiff = false;\n                var templateValue = template[prop];\n                var templateValueType = type(templateValue);\n                var templateIsComplex = templateValueType == TYPES.o;\n                var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                var dataDiffValue = diffData[prop];\n                var dataValue = data[prop];\n                var dataValueType = type(dataValue);\n                var propPrefix = prevPropName ? prevPropName + '.' : '';\n                var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                var errorPossibleTypes = [];\n                var errorRestrictedStrings = [];\n                var restrictedStringValuesSplit;\n                var restrictedStringValuesPossibilitiesSplit;\n                var isRestrictedValue;\n                var mainPossibility;\n                var currType;\n                var i;\n                var v;\n                var j;\n                dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\n\n                //if the template has a object as value, it means that the options are complex (verschachtelt)\n                if (templateIsComplex && dataValueType == TYPES.o) {\n                  validatedOptions[prop] = {};\n                  validatedOptionsPrepared[prop] = {};\n                  checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                  FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                    if (isEmptyObj(value[prop])) {\n                      delete value[prop];\n                    }\n                  });\n                } else if (!templateIsComplex) {\n                  for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                    currType = templateTypes[i];\n                    templateValueType = type(currType);\n                    //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n                    isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n                    if (isRestrictedValue) {\n                      errorPossibleTypes.push(TYPES.s);\n\n                      //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n                      restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                      errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n                      for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                        //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                        restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                        mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n                        for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                          //if any possibility matches with the dataValue, its valid\n                          if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                            isValid = true;\n                            break;\n                          }\n                        }\n                        if (isValid) break;\n                      }\n                    } else {\n                      errorPossibleTypes.push(currType);\n                      if (dataValueType === currType) {\n                        isValid = true;\n                        break;\n                      }\n                    }\n                  }\n                  if (isValid) {\n                    isDiff = dataValue !== dataDiffValue;\n                    if (isDiff) validatedOptions[prop] = dataValue;\n                    if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                  } else if (writeErrors) {\n                    console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                  }\n                  delete data[prop];\n                }\n              }\n            }\n          };\n          checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\n\n          //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n          /*\r\n          if(keepForeignProps) {\r\n              FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n              FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n          }\r\n          */\n\n          if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n          return {\n            _default: validatedOptions,\n            _prepared: validatedOptionsPrepared\n          };\n        }\n      };\n    }();\n\n    /**\r\n     * Initializes the object which contains global information about the plugin and each instance of it.\r\n     */\n    function initOverlayScrollbarsStatics() {\n      if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n      if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n    }\n\n    /**\r\n     * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @param defaultOptions\r\n     * @constructor\r\n     */\n    function OverlayScrollbarsGlobals(defaultOptions) {\n      var _base = this;\n      var strOverflow = 'overflow';\n      var strHidden = 'hidden';\n      var strScroll = 'scroll';\n      var bodyElement = FRAMEWORK('body');\n      var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n      var scrollbarDummyElement0 = scrollbarDummyElement[0];\n      var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n      bodyElement.append(scrollbarDummyElement);\n      scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n      var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n      var nativeScrollbarIsOverlaid = {\n        x: nativeScrollbarSize.x === 0,\n        y: nativeScrollbarSize.y === 0\n      };\n      var msie = function () {\n        var ua = window.navigator.userAgent;\n        var strIndexOf = 'indexOf';\n        var strSubString = 'substring';\n        var msie = ua[strIndexOf]('MSIE ');\n        var trident = ua[strIndexOf]('Trident/');\n        var edge = ua[strIndexOf]('Edge/');\n        var rv = ua[strIndexOf]('rv:');\n        var result;\n        var parseIntFunc = parseInt;\n\n        // IE 10 or older => return version number\n        if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\n\n        // IE 11 => return version number\n        else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\n\n        // Edge (IE 12+) => return version number\n        else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\n\n        // other browser\n        return result;\n      }();\n      FRAMEWORK.extend(_base, {\n        defaultOptions: defaultOptions,\n        msie: msie,\n        autoUpdateLoop: false,\n        autoUpdateRecommended: !COMPATIBILITY.mO(),\n        nativeScrollbarSize: nativeScrollbarSize,\n        nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n        nativeScrollbarStyling: function () {\n          var result = false;\n          scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n          try {\n            result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n          } catch (ex) {}\n\n          //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n          //and set overflow to scroll\n          //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n          //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n          return result;\n        }(),\n        overlayScrollbarDummySize: {\n          x: 30,\n          y: 30\n        },\n        cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n        restrictedMeasuring: function () {\n          //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n          //since 1.11.0 always false -> fixed via CSS (hopefully)\n          scrollbarDummyElement.css(strOverflow, strHidden);\n          var scrollSize = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          scrollbarDummyElement.css(strOverflow, 'visible');\n          var scrollSize2 = {\n            w: scrollbarDummyElement0[LEXICON.sW],\n            h: scrollbarDummyElement0[LEXICON.sH]\n          };\n          return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n        }(),\n        rtlScrollBehavior: function () {\n          scrollbarDummyElement.css({\n            'overflow-y': strHidden,\n            'overflow-x': strScroll,\n            'direction': 'rtl'\n          }).scrollLeft(0);\n          var dummyContainerOffset = scrollbarDummyElement.offset();\n          var dummyContainerChildOffset = dummyContainerChild.offset();\n          //https://github.com/KingSora/OverlayScrollbars/issues/187\n          scrollbarDummyElement.scrollLeft(-999);\n          var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n          return {\n            //origin direction = determines if the zero scroll position is on the left or right side\n            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n            //true = on the left side\n            //false = on the right side\n            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n            //negative = determines if the maximum scroll is positive or negative\n            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n            //true = negative\n            //false = positive\n            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n          };\n        }(),\n        supportTransform: !!VENDORS._cssProperty('transform'),\n        supportTransition: !!VENDORS._cssProperty('transition'),\n        supportPassiveEvents: function () {\n          var supportsPassive = false;\n          try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n              get: function get() {\n                supportsPassive = true;\n              }\n            }));\n          } catch (e) {}\n          return supportsPassive;\n        }(),\n        supportResizeObserver: !!COMPATIBILITY.rO(),\n        supportMutationObserver: !!COMPATIBILITY.mO()\n      });\n      scrollbarDummyElement.removeAttr(LEXICON.s).remove();\n\n      //Catch zoom event:\n      (function () {\n        if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n        var abs = MATH.abs;\n        var windowWidth = COMPATIBILITY.wW();\n        var windowHeight = COMPATIBILITY.wH();\n        var windowDpr = getWindowDPR();\n        var onResize = function onResize() {\n          if (INSTANCES().length > 0) {\n            var newW = COMPATIBILITY.wW();\n            var newH = COMPATIBILITY.wH();\n            var deltaW = newW - windowWidth;\n            var deltaH = newH - windowHeight;\n            if (deltaW === 0 && deltaH === 0) return;\n            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n            var absDeltaW = abs(deltaW);\n            var absDeltaH = abs(deltaH);\n            var absDeltaWRatio = abs(deltaWRatio);\n            var absDeltaHRatio = abs(deltaHRatio);\n            var newDPR = getWindowDPR();\n            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n            var isZoom = deltaIsBigger && difference && dprChanged;\n            var oldScrollbarSize = _base.nativeScrollbarSize;\n            var newScrollbarSize;\n            if (isZoom) {\n              bodyElement.append(scrollbarDummyElement);\n              newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n              scrollbarDummyElement.remove();\n              if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                FRAMEWORK.each(INSTANCES(), function () {\n                  if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                });\n              }\n            }\n            windowWidth = newW;\n            windowHeight = newH;\n            windowDpr = newDPR;\n          }\n        };\n        function differenceIsBiggerThanOne(valOne, valTwo) {\n          var absValOne = abs(valOne);\n          var absValTwo = abs(valTwo);\n          return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n        }\n        function getWindowDPR() {\n          var dDPI = window.screen.deviceXDPI || 0;\n          var sDPI = window.screen.logicalXDPI || 1;\n          return window.devicePixelRatio || dDPI / sDPI;\n        }\n        FRAMEWORK(window).on('resize', onResize);\n      })();\n      function calcNativeScrollbarSize(measureElement) {\n        return {\n          x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n          y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n        };\n      }\n    }\n\n    /**\r\n     * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n     * @constructor\r\n     */\n    function OverlayScrollbarsAutoUpdateLoop(globals) {\n      var _base = this;\n      var _inArray = FRAMEWORK.inArray;\n      var _getNow = COMPATIBILITY.now;\n      var _strAutoUpdate = 'autoUpdate';\n      var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n      var _strLength = LEXICON.l;\n      var _loopingInstances = [];\n      var _loopingInstancesIntervalCache = [];\n      var _loopIsActive = false;\n      var _loopIntervalDefault = 33;\n      var _loopInterval = _loopIntervalDefault;\n      var _loopTimeOld = _getNow();\n      var _loopID;\n\n      /**\r\n       * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n       */\n      var loop = function loop() {\n        if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n          _loopID = COMPATIBILITY.rAF()(function () {\n            loop();\n          });\n          var timeNew = _getNow();\n          var timeDelta = timeNew - _loopTimeOld;\n          var lowestInterval;\n          var instance;\n          var instanceOptions;\n          var instanceAutoUpdateAllowed;\n          var instanceAutoUpdateInterval;\n          var now;\n          if (timeDelta > _loopInterval) {\n            _loopTimeOld = timeNew - timeDelta % _loopInterval;\n            lowestInterval = _loopIntervalDefault;\n            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n              instance = _loopingInstances[i];\n              if (instance !== undefined) {\n                instanceOptions = instance.options();\n                instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                now = _getNow();\n                if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                  instance.update('auto');\n                  _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                }\n                lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n              }\n            }\n            _loopInterval = lowestInterval;\n          }\n        } else {\n          _loopInterval = _loopIntervalDefault;\n        }\n      };\n\n      /**\r\n       * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n      _base.add = function (instance) {\n        if (_inArray(instance, _loopingInstances) === -1) {\n          _loopingInstances.push(instance);\n          _loopingInstancesIntervalCache.push(_getNow());\n          if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n            _loopIsActive = true;\n            globals.autoUpdateLoop = _loopIsActive;\n            loop();\n          }\n        }\n      };\n\n      /**\r\n       * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n       * @param instance The instance which shall be updated in a loop automatically.\r\n       */\n      _base.remove = function (instance) {\n        var index = _inArray(instance, _loopingInstances);\n        if (index > -1) {\n          //remove from loopingInstances list\n          _loopingInstancesIntervalCache.splice(index, 1);\n          _loopingInstances.splice(index, 1);\n\n          //correct update loop behavior\n          if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n            _loopIsActive = false;\n            globals.autoUpdateLoop = _loopIsActive;\n            if (_loopID !== undefined) {\n              COMPATIBILITY.cAF()(_loopID);\n              _loopID = -1;\n            }\n          }\n        }\n      };\n    }\n\n    /**\r\n     * A object which manages the scrollbars visibility of the target element.\r\n     * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n     * @param options The custom options.\r\n     * @param extensions The custom extensions.\r\n     * @param globals\r\n     * @param autoUpdateLoop\r\n     * @returns {*}\r\n     * @constructor\r\n     */\n    function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n      //shortcuts\n      var type = COMPATIBILITY.type;\n      var inArray = FRAMEWORK.inArray;\n      var each = FRAMEWORK.each;\n\n      //make correct instanceof\n      var _base = new _plugin();\n      var _frameworkProto = FRAMEWORK[LEXICON.p];\n\n      //if passed element is no HTML element: skip and return\n      if (!isHTMLElement(pluginTargetElement)) return;\n\n      //if passed element is already initialized: set passed options if there are any and return its instance\n      if (INSTANCES(pluginTargetElement)) {\n        var inst = INSTANCES(pluginTargetElement);\n        inst.options(options);\n        return inst;\n      }\n\n      //globals:\n      var _nativeScrollbarIsOverlaid;\n      var _overlayScrollbarDummySize;\n      var _rtlScrollBehavior;\n      var _autoUpdateRecommended;\n      var _msieVersion;\n      var _nativeScrollbarStyling;\n      var _cssCalc;\n      var _nativeScrollbarSize;\n      var _supportTransition;\n      var _supportTransform;\n      var _supportPassiveEvents;\n      var _supportResizeObserver;\n      var _supportMutationObserver;\n      var _restrictedMeasuring;\n\n      //general readonly:\n      var _initialized;\n      var _destroyed;\n      var _isTextarea;\n      var _isBody;\n      var _documentMixed;\n      var _domExists;\n\n      //general:\n      var _isBorderBox;\n      var _sizeAutoObserverAdded;\n      var _paddingX;\n      var _paddingY;\n      var _borderX;\n      var _borderY;\n      var _marginX;\n      var _marginY;\n      var _isRTL;\n      var _sleeping;\n      var _contentBorderSize = {};\n      var _scrollHorizontalInfo = {};\n      var _scrollVerticalInfo = {};\n      var _viewportSize = {};\n      var _nativeScrollbarMinSize = {};\n\n      //naming:\t\n      var _strMinusHidden = '-hidden';\n      var _strMarginMinus = 'margin-';\n      var _strPaddingMinus = 'padding-';\n      var _strBorderMinus = 'border-';\n      var _strTop = 'top';\n      var _strRight = 'right';\n      var _strBottom = 'bottom';\n      var _strLeft = 'left';\n      var _strMinMinus = 'min-';\n      var _strMaxMinus = 'max-';\n      var _strWidth = 'width';\n      var _strHeight = 'height';\n      var _strFloat = 'float';\n      var _strEmpty = '';\n      var _strAuto = 'auto';\n      var _strSync = 'sync';\n      var _strScroll = 'scroll';\n      var _strHundredPercent = '100%';\n      var _strX = 'x';\n      var _strY = 'y';\n      var _strDot = '.';\n      var _strSpace = ' ';\n      var _strScrollbar = 'scrollbar';\n      var _strMinusHorizontal = '-horizontal';\n      var _strMinusVertical = '-vertical';\n      var _strScrollLeft = _strScroll + 'Left';\n      var _strScrollTop = _strScroll + 'Top';\n      var _strMouseTouchDownEvent = 'mousedown touchstart';\n      var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n      var _strMouseTouchMoveEvent = 'mousemove touchmove';\n      var _strMouseEnter = 'mouseenter';\n      var _strMouseLeave = 'mouseleave';\n      var _strKeyDownEvent = 'keydown';\n      var _strKeyUpEvent = 'keyup';\n      var _strSelectStartEvent = 'selectstart';\n      var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n      var _strResizeObserverProperty = '__overlayScrollbarsRO__';\n\n      //class names:\t\n      var _cassNamesPrefix = 'os-';\n      var _classNameHTMLElement = _cassNamesPrefix + 'html';\n      var _classNameHostElement = _cassNamesPrefix + 'host';\n      var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n      var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n      var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n      var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n      var _classNameHostTransition = _classNameHostElement + '-transition';\n      var _classNameHostRTL = _classNameHostElement + '-rtl';\n      var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n      var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n      var _classNameHostOverflow = _classNameHostElement + '-overflow';\n      var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n      var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n      var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n      var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n      var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n      var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n      var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n      var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n      var _classNameContentElement = _cassNamesPrefix + 'content';\n      var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n      var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n      var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n      var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n      var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n      var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n      var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n      var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n      var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n      var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n      var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n      var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n      var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n      var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n      var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n      var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n      var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n      var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n      var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n      var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n      var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n      var _classNameDragging = _cassNamesPrefix + 'dragging';\n      var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n      var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace);\n\n      //callbacks:\t\n      var _callbacksInitQeueue = [];\n\n      //attrs viewport shall inherit from target\t\n      var _viewportAttrsFromTarget = [LEXICON.ti];\n\n      //options:\t\n      var _defaultOptions;\n      var _currentOptions;\n      var _currentPreparedOptions;\n\n      //extensions:\t\n      var _extensions = {};\n      var _extensionsPrivateMethods = 'added removed on contract';\n\n      //update\t\n      var _lastUpdateTime;\n      var _swallowedUpdateHints = {};\n      var _swallowedUpdateTimeout;\n      var _swallowUpdateLag = 42;\n      var _updateOnLoadEventName = 'load';\n      var _updateOnLoadElms = [];\n\n      //DOM elements:\t\n      var _windowElement;\n      var _documentElement;\n      var _htmlElement;\n      var _bodyElement;\n      var _targetElement; //the target element of this OverlayScrollbars object\t\n      var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n      var _sizeAutoObserverElement; //observes size auto changes\t\n      var _sizeObserverElement; //observes size and padding changes\t\n      var _paddingElement; //manages the padding\t\n      var _viewportElement; //is the viewport of our scrollbar model\t\n      var _contentElement; //the element which holds the content\t\n      var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n      var _contentGlueElement; //has always the size of the content element\t\n      var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n      var _scrollbarCornerElement;\n      var _scrollbarHorizontalElement;\n      var _scrollbarHorizontalTrackElement;\n      var _scrollbarHorizontalHandleElement;\n      var _scrollbarVerticalElement;\n      var _scrollbarVerticalTrackElement;\n      var _scrollbarVerticalHandleElement;\n      var _windowElementNative;\n      var _documentElementNative;\n      var _targetElementNative;\n      var _hostElementNative;\n      var _sizeAutoObserverElementNative;\n      var _sizeObserverElementNative;\n      var _paddingElementNative;\n      var _viewportElementNative;\n      var _contentElementNative;\n\n      //Cache:\t\n      var _hostSizeCache;\n      var _contentScrollSizeCache;\n      var _arrangeContentSizeCache;\n      var _hasOverflowCache;\n      var _hideOverflowCache;\n      var _widthAutoCache;\n      var _heightAutoCache;\n      var _cssBoxSizingCache;\n      var _cssPaddingCache;\n      var _cssBorderCache;\n      var _cssMarginCache;\n      var _cssDirectionCache;\n      var _cssDirectionDetectedCache;\n      var _paddingAbsoluteCache;\n      var _clipAlwaysCache;\n      var _contentGlueSizeCache;\n      var _overflowBehaviorCache;\n      var _overflowAmountCache;\n      var _ignoreOverlayScrollbarHidingCache;\n      var _autoUpdateCache;\n      var _sizeAutoCapableCache;\n      var _contentElementScrollSizeChangeDetectedCache;\n      var _hostElementSizeChangeDetectedCache;\n      var _scrollbarsVisibilityCache;\n      var _scrollbarsAutoHideCache;\n      var _scrollbarsClickScrollingCache;\n      var _scrollbarsDragScrollingCache;\n      var _resizeCache;\n      var _normalizeRTLCache;\n      var _classNameCache;\n      var _oldClassName;\n      var _textareaAutoWrappingCache;\n      var _textareaInfoCache;\n      var _textareaSizeCache;\n      var _textareaDynHeightCache;\n      var _textareaDynWidthCache;\n      var _bodyMinSizeCache;\n      var _updateAutoCache = {};\n\n      //MutationObserver:\t\n      var _mutationObserverHost;\n      var _mutationObserverContent;\n      var _mutationObserverHostCallback;\n      var _mutationObserverContentCallback;\n      var _mutationObserversConnected;\n      var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n      var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\n\n      //events:\t\n      var _destroyEvents = [];\n\n      //textarea:\t\n      var _textareaHasFocus;\n\n      //scrollbars:\t\n      var _scrollbarsAutoHideTimeoutId;\n      var _scrollbarsAutoHideMoveTimeoutId;\n      var _scrollbarsAutoHideDelay;\n      var _scrollbarsAutoHideNever;\n      var _scrollbarsAutoHideScroll;\n      var _scrollbarsAutoHideMove;\n      var _scrollbarsAutoHideLeave;\n      var _scrollbarsHandleHovered;\n      var _scrollbarsHandlesDefineScrollPos;\n\n      //resize\t\n      var _resizeNone;\n      var _resizeBoth;\n      var _resizeHorizontal;\n      var _resizeVertical;\n\n      //==== Event Listener ====//\t\n\n      /**\t\r\n       * Adds or removes a event listener from the given element. \t\r\n       * @param element The element to which the event listener shall be applied or removed.\t\r\n       * @param eventNames The name(s) of the events.\t\r\n       * @param listener The method which shall be called.\t\r\n       * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n       * @param passiveOrOptions The options for the event.\r\n       */\n      function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n        var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n        var method = remove ? 'removeEventListener' : 'addEventListener';\n        var onOff = remove ? 'off' : 'on';\n        var events = collected ? false : eventNames.split(_strSpace);\n        var i = 0;\n        var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n        var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n        var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n        var nativeParam = _supportPassiveEvents ? {\n          passive: passive,\n          capture: capture\n        } : capture;\n        if (collected) {\n          for (; i < eventNames[LEXICON.l]; i++) {\n            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n          }\n        } else {\n          for (; i < events[LEXICON.l]; i++) {\n            if (_supportPassiveEvents) {\n              element[0][method](events[i], listener, nativeParam);\n            } else {\n              element[onOff](events[i], listener);\n            }\n          }\n        }\n      }\n      function addDestroyEventListener(element, eventNames, listener, passive) {\n        setupResponsiveEventListener(element, eventNames, listener, false, passive);\n        _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n      }\n\n      //==== Resize Observer ====//\n\n      /**\r\n       * Adds or removes a resize observer from the given element.\r\n       * @param targetElement The element to which the resize observer shall be added or removed.\r\n       * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n       */\n      function setupResizeObserver(targetElement, onElementResizedCallback) {\n        if (targetElement) {\n          var resizeObserver = COMPATIBILITY.rO();\n          var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n          var strChildNodes = 'childNodes';\n          var constScroll = 3333333;\n          var callback = function callback() {\n            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n            onElementResizedCallback();\n          };\n          //add resize observer:\n          if (onElementResizedCallback) {\n            if (_supportResizeObserver) {\n              var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n              var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n              observer.observe(element);\n            } else {\n              if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                  c: _classNameResizeObserverItemElement,\n                  dir: 'ltr'\n                }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                  c: _classNameResizeObserverItemFinalElement,\n                  style: 'width: 200%; height: 200%'\n                })))));\n                var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                var widthCache = observerElement[LEXICON.oW];\n                var heightCache = observerElement[LEXICON.oH];\n                var isDirty;\n                var rAFId;\n                var currWidth;\n                var currHeight;\n                var factor = 2;\n                var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n                var reset = function reset() {\n                  /*\r\n                   var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                   var expandChildCSS = {};\r\n                   expandChildCSS[_strWidth] = sizeResetWidth;\r\n                   expandChildCSS[_strHeight] = sizeResetHeight;\r\n                   expandElementChild.css(expandChildCSS);\r\n                       expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                   */\n                  expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                };\n                var onResized = function onResized() {\n                  rAFId = 0;\n                  if (!isDirty) return;\n                  widthCache = currWidth;\n                  heightCache = currHeight;\n                  callback();\n                };\n                var onScroll = function onScroll(event) {\n                  currWidth = observerElement[LEXICON.oW];\n                  currHeight = observerElement[LEXICON.oH];\n                  isDirty = currWidth != widthCache || currHeight != heightCache;\n                  if (event && isDirty && !rAFId) {\n                    COMPATIBILITY.cAF()(rAFId);\n                    rAFId = COMPATIBILITY.rAF()(onResized);\n                  } else if (!event) onResized();\n                  reset();\n                  if (event) {\n                    COMPATIBILITY.prvD(event);\n                    COMPATIBILITY.stpP(event);\n                  }\n                  return false;\n                };\n                var expandChildCSS = {};\n                var observerElementCSS = {};\n                setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                FRAMEWORK(observerElement).css(observerElementCSS);\n                expandElement.on(_strScroll, onScroll);\n                shrinkElement.on(_strScroll, onScroll);\n                targetElement.on(strAnimationStartEvent, function () {\n                  onScroll(false);\n                });\n                //lets assume that the divs will never be that large and a constant value is enough\n                expandChildCSS[_strWidth] = constScroll;\n                expandChildCSS[_strHeight] = constScroll;\n                expandElementChild.css(expandChildCSS);\n                reset();\n              } else {\n                var attachEvent = _documentElementNative.attachEvent;\n                var isIE = _msieVersion !== undefined;\n                if (attachEvent) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                  findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                } else {\n                  var obj = _documentElementNative.createElement(TYPES.o);\n                  obj.setAttribute(LEXICON.ti, '-1');\n                  obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n                  obj.onload = function () {\n                    var wnd = this.contentDocument.defaultView;\n                    wnd.addEventListener('resize', callback);\n                    wnd.document.documentElement.style.display = 'none';\n                  };\n                  obj.type = 'text/html';\n                  if (isIE) targetElement.prepend(obj);\n                  obj.data = 'about:blank';\n                  if (!isIE) targetElement.prepend(obj);\n                  targetElement.on(strAnimationStartEvent, callback);\n                }\n              }\n            }\n            if (targetElement[0] === _sizeObserverElementNative) {\n              var directionChanged = function directionChanged() {\n                var dir = _hostElement.css('direction');\n                var css = {};\n                var scrollLeftValue = 0;\n                var result = false;\n                if (dir !== _cssDirectionDetectedCache) {\n                  if (dir === 'ltr') {\n                    css[_strLeft] = 0;\n                    css[_strRight] = _strAuto;\n                    scrollLeftValue = constScroll;\n                  } else {\n                    css[_strLeft] = _strAuto;\n                    css[_strRight] = 0;\n                    scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                  }\n                  //execution order is important for IE!!!\n                  _sizeObserverElement.children().eq(0).css(css);\n                  _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n                  _cssDirectionDetectedCache = dir;\n                  result = true;\n                }\n                return result;\n              };\n              directionChanged();\n              addDestroyEventListener(targetElement, _strScroll, function (event) {\n                if (directionChanged()) update();\n                COMPATIBILITY.prvD(event);\n                COMPATIBILITY.stpP(event);\n                return false;\n              });\n            }\n          }\n          //remove resize observer:\n          else {\n            if (_supportResizeObserver) {\n              var element = targetElement.contents()[0];\n              var resizeObserverObj = element[_strResizeObserverProperty];\n              if (resizeObserverObj) {\n                resizeObserverObj.disconnect();\n                delete element[_strResizeObserverProperty];\n              }\n            } else {\n              remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n            }\n          }\n        }\n      }\n\n      /**\r\n       * Freezes or unfreezes the given resize observer.\r\n       * @param targetElement The element to which the target resize observer is applied.\r\n       * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n       \r\n      function freezeResizeObserver(targetElement, freeze) {\r\n          if (targetElement !== undefined) {\r\n              if(freeze) {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].unobserve(element);\r\n                  }\r\n                  else {\r\n                      targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                      var w = targetElement.css(_strWidth);\r\n                      var h = targetElement.css(_strHeight);\r\n                      var css = {};\r\n                      css[_strWidth] = w;\r\n                      css[_strHeight] = h;\r\n                      targetElement.css(css);\r\n                  }\r\n              }\r\n              else {\r\n                  if (_supportResizeObserver) {\r\n                      var element = targetElement.contents()[0];\r\n                      element[_strResizeObserverProperty].observe(element);\r\n                  }\r\n                  else {\r\n                      var css = { };\r\n                      css[_strHeight] = _strEmpty;\r\n                      css[_strWidth] = _strEmpty;\r\n                      targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      */\n\n      //==== Mutation Observers ====//\n\n      /**\r\n       * Creates MutationObservers for the host and content Element if they are supported.\r\n       */\n      function createMutationObservers() {\n        if (_supportMutationObserver) {\n          var mutationObserverContentLag = 11;\n          var mutationObserver = COMPATIBILITY.mO();\n          var contentLastUpdate = COMPATIBILITY.now();\n          var mutationTarget;\n          var mutationAttrName;\n          var mutationIsClass;\n          var oldMutationVal;\n          var newClassVal;\n          var hostClassNameRegex;\n          var contentTimeout;\n          var now;\n          var sizeAuto;\n          var action;\n          _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n            var doUpdate = false;\n            var doUpdateForce = false;\n            var mutation;\n            var mutatedAttrs = [];\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                mutationTarget = mutation.target;\n                mutationAttrName = mutation.attributeName;\n                mutationIsClass = mutationAttrName === LEXICON.c;\n                oldMutationVal = mutation.oldValue;\n                newClassVal = mutationTarget.className;\n                if (_domExists && mutationIsClass && !doUpdateForce) {\n                  // if old class value contains _classNameHostElementForeign and new class value doesn't\n                  if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                    hostClassNameRegex = createHostClassNameRegExp(true);\n                    _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                      return name.match(hostClassNameRegex);\n                    })).join(_strSpace);\n                    doUpdate = doUpdateForce = true;\n                  }\n                }\n                if (!doUpdate) {\n                  doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                }\n                mutatedAttrs.push(mutationAttrName);\n              });\n              updateViewportAttrsFromTarget(mutatedAttrs);\n              if (doUpdate) _base.update(doUpdateForce || _strAuto);\n            }\n            return doUpdate;\n          };\n          _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n            var doUpdate = false;\n            var mutation;\n            if (_initialized && !_sleeping) {\n              each(mutations, function () {\n                mutation = this;\n                doUpdate = isUnknownMutation(mutation);\n                return !doUpdate;\n              });\n              if (doUpdate) {\n                now = COMPATIBILITY.now();\n                sizeAuto = _heightAutoCache || _widthAutoCache;\n                action = function action() {\n                  if (!_destroyed) {\n                    contentLastUpdate = now;\n\n                    //if cols, rows or wrap attr was changed\n                    if (_isTextarea) textareaUpdate();\n                    if (sizeAuto) update();else _base.update(_strAuto);\n                  }\n                };\n                clearTimeout(contentTimeout);\n                if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n              }\n            }\n            return doUpdate;\n          };\n          _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n          _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n        }\n      }\n\n      /**\r\n       * Connects the MutationObservers if they are supported.\r\n       */\n      function connectMutationObservers() {\n        if (_supportMutationObserver && !_mutationObserversConnected) {\n          _mutationObserverHost.observe(_hostElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            attributeFilter: _mutationObserverAttrsHost\n          });\n          _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n            attributes: true,\n            attributeOldValue: true,\n            subtree: !_isTextarea,\n            childList: !_isTextarea,\n            characterData: !_isTextarea,\n            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n          });\n          _mutationObserversConnected = true;\n        }\n      }\n\n      /**\r\n       * Disconnects the MutationObservers if they are supported.\r\n       */\n      function disconnectMutationObservers() {\n        if (_supportMutationObserver && _mutationObserversConnected) {\n          _mutationObserverHost.disconnect();\n          _mutationObserverContent.disconnect();\n          _mutationObserversConnected = false;\n        }\n      }\n\n      //==== Events of elements ====//\n\n      /**\r\n       * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n       * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n       * If there are any size changes, the update method gets called.\r\n       */\n      function hostOnResized() {\n        if (!_sleeping) {\n          var changed;\n          var hostSize = {\n            w: _sizeObserverElementNative[LEXICON.sW],\n            h: _sizeObserverElementNative[LEXICON.sH]\n          };\n          changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n          _hostElementSizeChangeDetectedCache = hostSize;\n          if (changed) update({\n            _hostSizeChanged: true\n          });\n        }\n      }\n\n      /**\r\n       * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n       */\n      function hostOnMouseEnter() {\n        if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n      }\n\n      /**\r\n       * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n       */\n      function hostOnMouseLeave() {\n        if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n      }\n\n      /**\r\n       * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n       */\n      function hostOnMouseMove() {\n        if (_scrollbarsAutoHideMove) {\n          refreshScrollbarsAutoHide(true);\n          clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n          _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n            if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n          }, 100);\n        }\n      }\n\n      /**\r\n       * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n       * @param event The select start event.\r\n       */\n      function documentOnSelectStart(event) {\n        COMPATIBILITY.prvD(event);\n        return false;\n      }\n\n      /**\t\r\n       * A callback which will be called after a element has loaded.\t\r\n       */\n      function updateOnLoadCallback(event) {\n        if (!_destroyed) {\n          var target = event.target;\n          var elm = FRAMEWORK(event.target);\n          var index = FRAMEWORK.inArray(target, _updateOnLoadElms);\n          if (index > -1) {\n            _updateOnLoadElms.splice(index, 1);\n          }\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n      }\n\n      /**\r\n      * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n      * @param destroy Indicates whether the events shall be added or removed.\r\n      */\n      function setupHostMouseTouchEvents(destroy) {\n        if (!destroy) setupHostMouseTouchEvents(true);\n        setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n        setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true);\n\n        //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n        if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n      }\n\n      //==== Update Detection ====//\n\n      /**\r\n       * Measures the min width and min height of the body element and refreshes the related cache.\r\n       * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n       */\n      function bodyMinSizeChanged() {\n        var bodyMinSize = {};\n        if (_isBody && _contentArrangeElement) {\n          bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n          bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n          bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n          bodyMinSize.f = true; //flag for \"measured at least once\"\n        }\n\n        _bodyMinSizeCache = bodyMinSize;\n        return !!bodyMinSize.c;\n      }\n\n      /**\r\n       * Returns true if the class names really changed (new class without plugin host prefix)\r\n       * @param oldClassNames The old ClassName string or array.\r\n       * @param newClassNames The new ClassName string or array.\r\n       * @returns {boolean} True if the class names has really changed, false otherwise.\r\n       */\n      function hostClassNamesChanged(oldClassNames, newClassNames) {\n        var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\n        var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\n        var diff = getArrayDifferences(oldClasses, currClasses);\n\n        // remove none theme from diff list to prevent update\n        var idx = inArray(_classNameThemeNone, diff);\n        var i;\n        var regex;\n        if (idx > -1) diff.splice(idx, 1);\n        if (diff[LEXICON.l] > 0) {\n          regex = createHostClassNameRegExp(true, true);\n          for (i = 0; i < diff.length; i++) {\n            if (!diff[i].match(regex)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n\n      /**\r\n       * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n       * @param mutation The mutation which shall be checked.\r\n       * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n       */\n      function isUnknownMutation(mutation) {\n        var attributeName = mutation.attributeName;\n        var mutationTarget = mutation.target;\n        var mutationType = mutation.type;\n        var strClosest = 'closest';\n        if (mutationTarget === _contentElementNative) return attributeName === null;\n        if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n          //ignore className changes by the plugin\t\n          if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\n\n          //only do it of browser support it natively\t\n          if (typeof mutationTarget[strClosest] != TYPES.f) return true;\n          if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n        }\n        return true;\n      }\n\n      /**\r\n       * Returns true if the content size was changed since the last time this method was called.\r\n       * @returns {boolean} True if the content size was changed, false otherwise.\r\n       */\n      function updateAutoContentSizeChanged() {\n        if (_sleeping) return false;\n        var contentMeasureElement = getContentMeasureElement();\n        var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n        var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n        var css = {};\n        var float;\n        var bodyMinSizeC;\n        var changed;\n        var contentElementScrollSize;\n        if (setCSS) {\n          float = _contentElement.css(_strFloat);\n          css[_strFloat] = _isRTL ? _strRight : _strLeft;\n          css[_strWidth] = _strAuto;\n          _contentElement.css(css);\n        }\n        contentElementScrollSize = {\n          w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n          h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n        };\n        if (setCSS) {\n          css[_strFloat] = float;\n          css[_strWidth] = _strHundredPercent;\n          _contentElement.css(css);\n        }\n        bodyMinSizeC = bodyMinSizeChanged();\n        changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n        _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n        return changed || bodyMinSizeC;\n      }\n\n      /**\r\n       * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n       * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n       */\n      function meaningfulAttrsChanged() {\n        if (_sleeping || _mutationObserversConnected) return;\n        var elem;\n        var curr;\n        var cache;\n        var changedAttrs = [];\n        var checks = [{\n          _elem: _hostElement,\n          _attrs: _mutationObserverAttrsHost.concat(':visible')\n        }, {\n          _elem: _isTextarea ? _targetElement : undefined,\n          _attrs: _mutationObserverAttrsTextarea\n        }];\n        each(checks, function (index, check) {\n          elem = check._elem;\n          if (elem) {\n            each(check._attrs, function (index, attr) {\n              curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n              cache = _updateAutoCache[attr];\n              if (checkCache(curr, cache)) {\n                changedAttrs.push(attr);\n              }\n              _updateAutoCache[attr] = curr;\n            });\n          }\n        });\n        updateViewportAttrsFromTarget(changedAttrs);\n        return changedAttrs[LEXICON.l] > 0;\n      }\n\n      /**\r\n       * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n       * @param propertyName The CSS property name.\r\n       * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n       */\n      function isSizeAffectingCSSProperty(propertyName) {\n        if (!_initialized) return true;\n        var flexGrow = 'flex-grow';\n        var flexShrink = 'flex-shrink';\n        var flexBasis = 'flex-basis';\n        var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n        var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n        var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n        var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n        var _strS = 's';\n        var _strVS = 'v-s';\n        var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n        var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n        var sizeIsAffected = false;\n        var checkPropertyName = function checkPropertyName(arr, name) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            if (arr[i] === name) return true;\n          }\n          return false;\n        };\n        if (checkY) {\n          sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n        }\n        if (checkX && !sizeIsAffected) {\n          sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n          if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n        }\n        return sizeIsAffected;\n      }\n\n      //==== Update ====//\n\n      /**\r\n       * Sets the attribute values of the viewport element to the values from the target element.\r\n       * The value of a attribute is only set if the attribute is whitelisted.\r\n       * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n       */\n      function updateViewportAttrsFromTarget(attrs) {\n        attrs = attrs || _viewportAttrsFromTarget;\n        each(attrs, function (index, attr) {\n          if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n            var targetAttr = _targetElement.attr(attr);\n            if (type(targetAttr) == TYPES.s) {\n              _viewportElement.attr(attr, targetAttr);\n            } else {\n              _viewportElement.removeAttr(attr);\n            }\n          }\n        });\n      }\n\n      /**\r\n       * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n       */\n      function textareaUpdate() {\n        if (!_sleeping) {\n          var wrapAttrOff = !_textareaAutoWrappingCache;\n          var minWidth = _viewportSize.w;\n          var minHeight = _viewportSize.h;\n          var css = {};\n          var doMeasure = _widthAutoCache || wrapAttrOff;\n          var origWidth;\n          var width;\n          var origHeight;\n          var height;\n\n          //reset min size\n          css[_strMinMinus + _strWidth] = _strEmpty;\n          css[_strMinMinus + _strHeight] = _strEmpty;\n\n          //set width auto\n          css[_strWidth] = _strAuto;\n          _targetElement.css(css);\n\n          //measure width\n          origWidth = _targetElementNative[LEXICON.oW];\n          width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n          /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n\n          //set measured width\n          css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\n          css[_strMinMinus + _strWidth] = _strHundredPercent;\n\n          //set height auto\n          css[_strHeight] = _strAuto;\n          _targetElement.css(css);\n\n          //measure height\n          origHeight = _targetElementNative[LEXICON.oH];\n          height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\n\n          //append correct size values\n          css[_strWidth] = width;\n          css[_strHeight] = height;\n          _textareaCoverElement.css(css);\n\n          //apply min width / min height to prevent textarea collapsing\n          css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\n          css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\n          _targetElement.css(css);\n          return {\n            _originalWidth: origWidth,\n            _originalHeight: origHeight,\n            _dynamicWidth: width,\n            _dynamicHeight: height\n          };\n        }\n      }\n\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param updateHints A objects which contains hints for this update:\r\n       * {\r\n       *   _hostSizeChanged : boolean,\r\n       *   _contentSizeChanged : boolean,\r\n       *   _force : boolean,                             == preventSwallowing\r\n       *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n      *  }\r\n       */\n      function update(updateHints) {\n        clearTimeout(_swallowedUpdateTimeout);\n        updateHints = updateHints || {};\n        _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n        _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n        _swallowedUpdateHints._force |= updateHints._force;\n        var now = COMPATIBILITY.now();\n        var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n        var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n        var force = !!_swallowedUpdateHints._force;\n        var changedOptions = updateHints._changedOptions;\n        var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n        var displayIsHidden;\n        if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\n\n        //abort update due to:\n        //destroyed\n        //swallowing\n        //sleeping\n        //host is hidden or has false display\n        if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n        _lastUpdateTime = now;\n        _swallowedUpdateHints = {};\n\n        //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n        if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n          //native scrollbars are hidden, so change the values to zero\n          _nativeScrollbarSize.x = 0;\n          _nativeScrollbarSize.y = 0;\n        } else {\n          //refresh native scrollbar size (in case of zoom)\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        }\n\n        // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n        // The calculation: [scrollbar size +3 *3]\n        // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n        // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n        _nativeScrollbarMinSize = {\n          x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n          y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n        };\n        changedOptions = changedOptions || {};\n        //freezeResizeObserver(_sizeObserverElement, true);\n        //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n        var checkCacheAutoForce = function checkCacheAutoForce() {\n          return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n        };\n\n        //save current scroll offset\n        var currScroll = {\n          x: _viewportElement[_strScrollLeft](),\n          y: _viewportElement[_strScrollTop]()\n        };\n        var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n        var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\n\n        //scrollbars visibility:\n        var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n        var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\n\n        //scrollbars autoHide:\n        var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n        var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\n\n        //scrollbars click scrolling\n        var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n        var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\n\n        //scrollbars drag scrolling\n        var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n        var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\n\n        //className\n        var className = _currentPreparedOptions.className;\n        var classNameChanged = checkCacheAutoForce(className, _classNameCache);\n\n        //resize\n        var resize = _currentPreparedOptions.resize;\n        var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n\n        //paddingAbsolute\n        var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n        var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\n\n        //clipAlways\n        var clipAlways = _currentPreparedOptions.clipAlways;\n        var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\n\n        //sizeAutoCapable\n        var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n        var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\n\n        //showNativeScrollbars\n        var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n        var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\n\n        //autoUpdate\n        var autoUpdate = _currentPreparedOptions.autoUpdate;\n        var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\n\n        //overflowBehavior\n        var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n        var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\n\n        //dynWidth:\n        var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n        var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\n\n        //dynHeight:\n        var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n        var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\n\n        //scrollbars visibility\n        _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n        _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n        _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n        _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\n\n        //scrollbars autoHideDelay\n        _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\n\n        //old className\n        _oldClassName = _classNameCache;\n\n        //resize\n        _resizeNone = resize === 'n';\n        _resizeBoth = resize === 'b';\n        _resizeHorizontal = resize === 'h';\n        _resizeVertical = resize === 'v';\n\n        //normalizeRTL\n        _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\n\n        //ignore overlay scrollbar hiding\n        ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n\n        //refresh options cache\n        _scrollbarsVisibilityCache = scrollbarsVisibility;\n        _scrollbarsAutoHideCache = scrollbarsAutoHide;\n        _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n        _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n        _classNameCache = className;\n        _resizeCache = resize;\n        _paddingAbsoluteCache = paddingAbsolute;\n        _clipAlwaysCache = clipAlways;\n        _sizeAutoCapableCache = sizeAutoCapable;\n        _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n        _autoUpdateCache = autoUpdate;\n        _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n        _textareaDynWidthCache = textareaDynWidth;\n        _textareaDynHeightCache = textareaDynHeight;\n        _hasOverflowCache = _hasOverflowCache || {\n          x: false,\n          y: false\n        };\n\n        //set correct class name to the host element\n        if (classNameChanged) {\n          removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n          addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\n        }\n\n        //set correct auto Update\n        if (autoUpdateChanged) {\n          if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n            disconnectMutationObservers();\n            autoUpdateLoop.add(_base);\n          } else {\n            autoUpdateLoop.remove(_base);\n            connectMutationObservers();\n          }\n        }\n\n        //activate or deactivate size auto capability\n        if (sizeAutoCapableChanged) {\n          if (sizeAutoCapable) {\n            if (_contentGlueElement) {\n              _contentGlueElement.show();\n            } else {\n              _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n              _paddingElement.before(_contentGlueElement);\n            }\n            if (_sizeAutoObserverAdded) {\n              _sizeAutoObserverElement.show();\n            } else {\n              _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n              _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n              _contentGlueElement.before(_sizeAutoObserverElement);\n              var oldSize = {\n                w: -1,\n                h: -1\n              };\n              setupResizeObserver(_sizeAutoObserverElement, function () {\n                var newSize = {\n                  w: _sizeAutoObserverElementNative[LEXICON.oW],\n                  h: _sizeAutoObserverElementNative[LEXICON.oH]\n                };\n                if (checkCache(newSize, oldSize)) {\n                  if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                    update();\n                  } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                    update();\n                  }\n                }\n                oldSize = newSize;\n              });\n              _sizeAutoObserverAdded = true;\n              //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n              //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n              if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n            }\n          } else {\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n            if (_contentGlueElement) _contentGlueElement.hide();\n          }\n        }\n\n        //if force, update all resizeObservers too\n        if (force) {\n          _sizeObserverElement.find('*').trigger(_strScroll);\n          if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n        }\n\n        //display hidden:\n        displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\n\n        //textarea AutoWrapping:\n        var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n        var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\n\n        //detect direction:\n        var cssDirection = _hostElement.css('direction');\n        var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\n\n        //detect box-sizing:\n        var boxSizing = _hostElement.css('box-sizing');\n        var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\n\n        //detect padding:\n        var padding = getTopRightBottomLeftHost(_strPaddingMinus);\n\n        //width + height auto detecting var:\n        var sizeAutoObserverElementBCRect;\n        //exception occurs in IE8 sometimes (unknown exception)\n        try {\n          sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n        } catch (ex) {\n          return;\n        }\n        _isRTL = cssDirection === 'rtl';\n        _isBorderBox = boxSizing === 'border-box';\n        var isRTLLeft = _isRTL ? _strLeft : _strRight;\n        var isRTLRight = _isRTL ? _strRight : _strLeft;\n\n        //detect width auto:\n        var widthAutoResizeDetection = false;\n        var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */ ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n        if (sizeAutoCapable && !widthAutoObserverDetection) {\n          var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n          var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n          _contentGlueElement.css(_strWidth, _strAuto);\n          var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n          _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n          widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n          if (!widthAutoResizeDetection) {\n            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n          }\n        }\n        var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n        var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n        var wasWidthAuto = !widthAuto && _widthAutoCache;\n\n        //detect height auto:\n        var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0 /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\n        var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n        var wasHeightAuto = !heightAuto && _heightAutoCache;\n\n        //detect border:\n        //we need the border only if border box and auto size\n        var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n        var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n        var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY);\n\n        //detect margin:\n        var margin = getTopRightBottomLeftHost(_strMarginMinus);\n\n        //vars to apply correct css\n        var contentElementCSS = {};\n        var contentGlueElementCSS = {};\n\n        //funcs\n        var getHostSize = function getHostSize() {\n          //has to be clientSize because offsetSize respect borders\n          return {\n            w: _hostElementNative[LEXICON.cW],\n            h: _hostElementNative[LEXICON.cH]\n          };\n        };\n        var getViewportSize = function getViewportSize() {\n          //viewport size is padding container because it never has padding, margin and a border\n          //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n          //if this happens add the difference to the viewportSize to compensate the rounding error\n          return {\n            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n          };\n        };\n\n        //set info for padding\n        var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n        var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n        paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n        paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n        padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\n\n        //set info for border\n        _borderX = border.l + border.r;\n        _borderY = border.t + border.b;\n        border.c = checkCacheAutoForce(border, _cssBorderCache);\n\n        //set info for margin\n        _marginX = margin.l + margin.r;\n        _marginY = margin.t + margin.b;\n        margin.c = checkCacheAutoForce(margin, _cssMarginCache);\n\n        //refresh cache\n        _textareaAutoWrappingCache = textareaAutoWrapping;\n        _cssDirectionCache = cssDirection;\n        _cssBoxSizingCache = boxSizing;\n        _widthAutoCache = widthAuto;\n        _heightAutoCache = heightAuto;\n        _cssPaddingCache = padding;\n        _cssBorderCache = border;\n        _cssMarginCache = margin;\n\n        //IEFix direction changed\n        if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight);\n\n        //apply padding:\n        if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n          var paddingElementCSS = {};\n          var textareaCSS = {};\n          var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n          setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n          if (paddingAbsolute) {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n          } else {\n            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n          }\n          _paddingElement.css(paddingElementCSS);\n          _targetElement.css(textareaCSS);\n        }\n\n        //viewport size is padding container because it never has padding, margin and a border.\n        _viewportSize = getViewportSize();\n\n        //update Textarea\n        var textareaSize = _isTextarea ? textareaUpdate() : false;\n        var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n        var textareaDynOrigSize = _isTextarea && textareaSize ? {\n          w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n          h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n        } : {};\n        _textareaSizeCache = textareaSize;\n\n        //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n        if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n          contentElementCSS[_strHeight] = _strAuto;\n        } else if (heightAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strHeight] = _strHundredPercent;\n        }\n        if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n          contentElementCSS[_strWidth] = _strAuto;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n        } else if (widthAutoChanged || paddingAbsoluteChanged) {\n          contentElementCSS[_strWidth] = _strHundredPercent;\n          contentElementCSS[_strFloat] = _strEmpty;\n          contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n        }\n\n        if (widthAuto) {\n          //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n          contentGlueElementCSS[_strWidth] = _strAuto;\n          contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n          contentElementCSS[_strFloat] = isRTLRight;\n        } else {\n          contentGlueElementCSS[_strWidth] = _strEmpty;\n        }\n        if (heightAuto) {\n          //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n          contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n        } else {\n          contentGlueElementCSS[_strHeight] = _strEmpty;\n        }\n        if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n        _contentElement.css(contentElementCSS);\n\n        //CHECKPOINT HERE ~\n        contentElementCSS = {};\n        contentGlueElementCSS = {};\n\n        //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n        if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n          var strOverflow = 'overflow';\n          var strOverflowX = strOverflow + '-x';\n          var strOverflowY = strOverflow + '-y';\n          var strHidden = 'hidden';\n          var strVisible = 'visible';\n\n          //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n          //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n          if (!_nativeScrollbarStyling) {\n            var viewportElementResetCSS = {};\n            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n            _viewportElement.css(viewportElementResetCSS);\n          }\n\n          //measure several sizes:\n          var contentMeasureElement = getContentMeasureElement();\n          //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n          var contentSize = {\n            //use clientSize because natively overlaidScrollbars add borders\n            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n          };\n          var scrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          };\n\n          //apply the correct viewport style and measure viewport size\n          if (!_nativeScrollbarStyling) {\n            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n            _viewportElement.css(viewportElementResetCSS);\n          }\n          _viewportSize = getViewportSize();\n\n          //measure and correct several sizes\n          var hostSize = getHostSize();\n          var hostAbsoluteRectSize = {\n            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n          };\n          var contentGlueSize = {\n            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n          };\n          contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n          _contentGlueSizeCache = contentGlueSize;\n\n          //apply correct contentGlue size\n          if (sizeAutoCapable) {\n            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n            if (contentGlueSize.c || heightAuto || widthAuto) {\n              contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n              contentGlueElementCSS[_strHeight] = contentGlueSize.h;\n\n              //textarea-sizes are already calculated correctly at this point\n              if (!_isTextarea) {\n                contentSize = {\n                  //use clientSize because natively overlaidScrollbars add borders\n                  w: contentMeasureElement[LEXICON.cW],\n                  h: contentMeasureElement[LEXICON.cH]\n                };\n              }\n            }\n            var textareaCoverCSS = {};\n            var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var wh = scrollbarVars._w_h;\n              var strWH = scrollbarVars._width_height;\n              var autoSize = horizontal ? widthAuto : heightAuto;\n              var borderSize = horizontal ? _borderX : _borderY;\n              var paddingSize = horizontal ? _paddingX : _paddingY;\n              var marginSize = horizontal ? _marginX : _marginY;\n              var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\n\n              //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n              if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\n\n              //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n              if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                contentGlueElementCSS[strWH] -= 1;\n              }\n\n              //make sure content glue size is at least 1\n              if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n            };\n            setContentGlueElementCSSfunction(true);\n            setContentGlueElementCSSfunction(false);\n            if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n            _contentGlueElement.css(contentGlueElementCSS);\n          }\n          if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n          if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none';\n\n          //apply and reset content style\n          _contentElement.css(contentElementCSS);\n          contentElementCSS = {};\n\n          //measure again, but this time all correct sizes:\n          var contentScrollSize = {\n            w: contentMeasureElement[LEXICON.sW],\n            h: contentMeasureElement[LEXICON.sH]\n          };\n          contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n          _contentScrollSizeCache = contentScrollSize;\n\n          //refresh viewport size after correct measuring\n          _viewportSize = getViewportSize();\n          hostSize = getHostSize();\n          hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n          _hostSizeCache = hostSize;\n          var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n          var previousOverflowAmount = _overflowAmountCache;\n          var overflowBehaviorIsVS = {};\n          var overflowBehaviorIsVH = {};\n          var overflowBehaviorIsS = {};\n          var overflowAmount = {};\n          var hasOverflow = {};\n          var hideOverflow = {};\n          var canScroll = {};\n          var viewportRect = _paddingElementNative[LEXICON.bCR]();\n          var setOverflowVariables = function setOverflowVariables(horizontal) {\n            var scrollbarVars = getScrollbarVars(horizontal);\n            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n            var xyI = scrollbarVarsInverted._x_y;\n            var xy = scrollbarVars._x_y;\n            var wh = scrollbarVars._w_h;\n            var widthHeight = scrollbarVars._width_height;\n            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n            overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n            hasOverflow[xy] = overflowAmount[xy] > 0;\n\n            //hideOverflow:\n            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n            hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n          };\n          setOverflowVariables(true);\n          setOverflowVariables(false);\n          overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n          _overflowAmountCache = overflowAmount;\n          hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n          _hasOverflowCache = hasOverflow;\n          hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n          _hideOverflowCache = hideOverflow;\n\n          //if native scrollbar is overlay at x OR y axis, prepare DOM\n          if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n            var borderDesign = 'px solid transparent';\n            var contentArrangeElementCSS = {};\n            var arrangeContent = {};\n            var arrangeChanged = force;\n            var setContentElementCSS;\n            if (hasOverflow.x || hasOverflow.y) {\n              arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n              arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n              arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n              _arrangeContentSizeCache = arrangeContent;\n            }\n            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n              contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n              setContentElementCSS = function setContentElementCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n                var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n                if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                  contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                } else {\n                  arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                  arrangeChanged = true;\n                }\n              };\n              if (_nativeScrollbarStyling) {\n                addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n              } else {\n                setContentElementCSS(true);\n                setContentElementCSS(false);\n              }\n            }\n            if (ignoreOverlayScrollbarHiding) {\n              arrangeContent.w = arrangeContent.h = _strEmpty;\n              arrangeChanged = true;\n            }\n            if (arrangeChanged && !_nativeScrollbarStyling) {\n              contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n              contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n              if (!_contentArrangeElement) {\n                _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n                _viewportElement.prepend(_contentArrangeElement);\n              }\n              _contentArrangeElement.css(contentArrangeElementCSS);\n            }\n            _contentElement.css(contentElementCSS);\n          }\n          var viewportElementCSS = {};\n          var paddingElementCSS = {};\n          var setViewportCSS;\n          if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n            viewportElementCSS[isRTLRight] = _strEmpty;\n            setViewportCSS = function setViewportCSS(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xy = scrollbarVars._x_y;\n              var XY = scrollbarVars._X_Y;\n              var strDirection = horizontal ? _strBottom : isRTLLeft;\n              var reset = function reset() {\n                viewportElementCSS[strDirection] = _strEmpty;\n                _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n              };\n              if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                viewportElementCSS[strOverflow + XY] = _strScroll;\n                if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                  reset();\n                } else {\n                  viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                }\n              } else {\n                viewportElementCSS[strOverflow + XY] = _strEmpty;\n                reset();\n              }\n            };\n            setViewportCSS(true);\n            setViewportCSS(false);\n\n            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n            // make viewport element greater in size (Firefox hide Scrollbars fix)\n            // because firefox starts hiding scrollbars on too small elements\n            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n            if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n              viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n              viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n              viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n              viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n            } else {\n              viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n            }\n            viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\n\n            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n            if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n              //only hide if is Textarea\n              if (_isTextarea && hideOverflowForceTextarea) {\n                paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n              }\n            } else {\n              if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                //only un-hide if Textarea\n                if (_isTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                }\n                viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n              }\n            }\n            _paddingElement.css(paddingElementCSS);\n            _viewportElement.css(viewportElementCSS);\n            viewportElementCSS = {};\n\n            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n              var elementStyle = _contentElementNative[LEXICON.s];\n              var dump;\n              elementStyle.webkitTransform = 'scale(1)';\n              elementStyle.display = 'run-in';\n              dump = _contentElementNative[LEXICON.oH];\n              elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n              elementStyle.webkitTransform = _strEmpty;\n            }\n            /*\r\n            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                _hostElement.hide();\r\n                var dump = _hostElementNative[LEXICON.oH];\r\n                _hostElement.show();\r\n            }\r\n            */\n          }\n\n          //change to direction RTL and width auto Bugfix in Webkit\n          //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n          contentElementCSS = {};\n          if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n            if (_isRTL && widthAuto) {\n              var floatTmp = _contentElement.css(_strFloat);\n              var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n              _contentElement.css(_strFloat, floatTmp);\n              var posLeftWithFloat = MATH.round(_contentElement.position().left);\n              if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n            } else {\n              contentElementCSS[_strLeft] = _strEmpty;\n            }\n          }\n          _contentElement.css(contentElementCSS);\n\n          //handle scroll position\n          if (_isTextarea && contentSizeChanged) {\n            var textareaInfo = getTextareaInfo();\n            if (textareaInfo) {\n              var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n              var cursorRow = textareaInfo._cursorRow;\n              var cursorCol = textareaInfo._cursorColumn;\n              var widestRow = textareaInfo._widestRow;\n              var lastRow = textareaInfo._rows;\n              var lastCol = textareaInfo._columns;\n              var cursorPos = textareaInfo._cursorPosition;\n              var cursorMax = textareaInfo._cursorMax;\n              var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n              var textareaScrollAmount = {\n                x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n              };\n              currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n              currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n            }\n            _textareaInfoCache = textareaInfo;\n          }\n          if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n          if (widthAuto) _hostElement[_strScrollLeft](0);\n          if (heightAuto) _hostElement[_strScrollTop](0);\n          _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\n\n          //scrollbars management:\n          var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n          var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n          var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n          var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n            showY = showY === undefined ? showX : showY;\n            refreshScrollbarAppearance(true, showX, canScroll.x);\n            refreshScrollbarAppearance(false, showY, canScroll.y);\n          };\n\n          //manage class name which indicates scrollable overflow\n          addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n          addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n          addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\n\n          //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n          if (cssDirectionChanged && !_isBody) {\n            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n          }\n\n          //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n          if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n          if (resizeChanged) {\n            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n          }\n\n          //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n          if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n            if (ignoreOverlayScrollbarHiding) {\n              if (ignoreOverlayScrollbarHidingChanged) {\n                removeClass(_hostElement, _classNameHostScrolling);\n                if (ignoreOverlayScrollbarHiding) {\n                  refreshScrollbarsVisibility(false);\n                }\n              }\n            } else if (scrollbarsVisibilityAuto) {\n              refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n            } else if (scrollbarsVisibilityVisible) {\n              refreshScrollbarsVisibility(true);\n            } else if (scrollbarsVisibilityHidden) {\n              refreshScrollbarsVisibility(false);\n            }\n          }\n\n          //manage the scrollbars auto hide feature (auto hide them after specific actions)\n          if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n          }\n\n          //manage scrollbars handle length & offset - don't remove!\n          if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n            refreshScrollbarHandleLength(true);\n            refreshScrollbarHandleOffset(true);\n            refreshScrollbarHandleLength(false);\n            refreshScrollbarHandleOffset(false);\n          }\n\n          //manage interactivity\n          if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n          if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\n\n          //callbacks:\n          dispatchCallback('onDirectionChanged', {\n            isRTL: _isRTL,\n            dir: cssDirection\n          }, cssDirectionChanged);\n          dispatchCallback('onHostSizeChanged', {\n            width: _hostSizeCache.w,\n            height: _hostSizeCache.h\n          }, hostSizeChanged);\n          dispatchCallback('onContentSizeChanged', {\n            width: _contentScrollSizeCache.w,\n            height: _contentScrollSizeCache.h\n          }, contentSizeChanged);\n          dispatchCallback('onOverflowChanged', {\n            x: hasOverflow.x,\n            y: hasOverflow.y,\n            xScrollable: hideOverflow.xs,\n            yScrollable: hideOverflow.ys,\n            clipped: hideOverflow.x || hideOverflow.y\n          }, hasOverflow.c || hideOverflow.c);\n          dispatchCallback('onOverflowAmountChanged', {\n            x: overflowAmount.x,\n            y: overflowAmount.y\n          }, overflowAmount.c);\n        }\n\n        //fix body min size\n        if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n          //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n          if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n          if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n          if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n          _bodyMinSizeCache.c = false;\n        }\n        if (_initialized && changedOptions.updateOnLoad) {\n          updateElementsOnLoad();\n        }\n\n        //freezeResizeObserver(_sizeObserverElement, false);\n        //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n        dispatchCallback('onUpdated', {\n          forced: force\n        });\n      }\n\n      /**\r\n       * Updates the found elements of which the load event shall be handled.\r\n       */\n      function updateElementsOnLoad() {\n        if (!_isTextarea) {\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n              // if element doesn't have a updateOnLoadCallback applied\n              if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                _updateOnLoadElms.push(el);\n                FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n              }\n            });\n          });\n        }\n      }\n\n      //==== Options ====//\n\n      /**\r\n       * Sets new options but doesn't call the update method.\r\n       * @param newOptions The object which contains the new options.\r\n       * @returns {*} A object which contains the changed options.\r\n       */\n      function setOptions(newOptions) {\n        var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n        _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n        _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n        return validatedOpts._prepared;\n      }\n\n      //==== Structure ====//\n\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n      /**\r\n       * Builds or destroys the wrapper and helper DOM elements.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n      function setupStructureDOM(destroy) {\n        var strParent = 'parent';\n        var classNameResizeObserverHost = 'os-resize-observer-host';\n        var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n        var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n        var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n        var adoptAttrsMap = {};\n        var applyAdoptedAttrs = function applyAdoptedAttrs() {\n          var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n          each(adoptAttrsMap, function (key, value) {\n            if (type(value) == TYPES.s) {\n              if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n            }\n          });\n        };\n        var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n        var hostElementCSS = {};\n\n        //get host element as first element, because that's the most upper element and required for the other elements\n        _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n        _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n        _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n        _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n        _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n        _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\n\n        //add this class to workaround class changing issues with UI frameworks especially Vue\n        if (_domExists) addClass(_hostElement, _classNameHostElementForeign);\n\n        //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n        //to prevent adopting generated class names\n        if (destroy) removeClass(_hostElement, hostElementClassNames);\n\n        //collect all adopted attributes\n        adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n        if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n          each(adoptAttrs, function (i, v) {\n            if (type(v) == TYPES.s) {\n              adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n            }\n          });\n        }\n        if (!destroy) {\n          if (_isTextarea) {\n            if (!_currentPreparedOptions.sizeAutoCapable) {\n              hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n              hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n            }\n            if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\n\n            //jQuery clones elements in wrap functions, so we have to select them again\n            _hostElement = _targetElement[strParent]().css(hostElementCSS);\n          }\n          if (!_domExists) {\n            //add the correct class to the target element\n            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\n\n            //wrap the content into the generated elements to create the required DOM\n            _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement);\n\n            //jQuery clones elements in wrap functions, so we have to select them again\n            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n            if (_isTextarea) {\n              _contentElement.prepend(_textareaCoverElement);\n              applyAdoptedAttrs();\n            }\n          }\n          if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n          if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n          _sizeObserverElementNative = _sizeObserverElement[0];\n          _hostElementNative = _hostElement[0];\n          _paddingElementNative = _paddingElement[0];\n          _viewportElementNative = _viewportElement[0];\n          _contentElementNative = _contentElement[0];\n          updateViewportAttrsFromTarget();\n        } else {\n          if (_domExists && _initialized) {\n            //clear size observer\n            _sizeObserverElement.children().remove();\n\n            //remove the style property and classes from already generated elements\n            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n              if (elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              }\n            });\n\n            //add classes to the host element which was removed previously to match the expected DOM\n            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n          } else {\n            //remove size observer\n            remove(_sizeObserverElement);\n\n            //unwrap the content to restore DOM\n            _contentElement.contents().unwrap().unwrap().unwrap();\n            if (_isTextarea) {\n              _targetElement.unwrap();\n              remove(_hostElement);\n              remove(_textareaCoverElement);\n              applyAdoptedAttrs();\n            }\n          }\n          if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n          if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n        }\n      }\n\n      /**\r\n       * Adds or removes all wrapper elements interactivity events.\r\n       * @param destroy Indicates whether the Events shall be added or removed.\r\n       */\n      function setupStructureEvents() {\n        var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,\n        //F1 to F12\n        33, 34,\n        //page up, page down\n        37, 38, 39, 40,\n        //left, up, right, down arrows\n        16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n        ];\n\n        var textareaKeyDownKeyCodesList = [];\n        var textareaUpdateIntervalID;\n        var scrollStopTimeoutId;\n        var scrollStopDelay = 175;\n        var strFocus = 'focus';\n        function updateTextarea(doClearInterval) {\n          textareaUpdate();\n          _base.update(_strAuto);\n          if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n        }\n        function textareaOnScroll(event) {\n          _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n          _targetElement[_strScrollTop](0);\n          COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n          return false;\n        }\n        function textareaOnDrop(event) {\n          setTimeout(function () {\n            if (!_destroyed) updateTextarea();\n          }, 50);\n        }\n        function textareaOnFocus() {\n          _textareaHasFocus = true;\n          addClass(_hostElement, strFocus);\n        }\n        function textareaOnFocusout() {\n          _textareaHasFocus = false;\n          textareaKeyDownKeyCodesList = [];\n          removeClass(_hostElement, strFocus);\n          updateTextarea(true);\n        }\n        function textareaOnKeyDown(event) {\n          var keyCode = event.keyCode;\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n              updateTextarea();\n              textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n            }\n            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n          }\n        }\n        function textareaOnKeyUp(event) {\n          var keyCode = event.keyCode;\n          var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n          if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n            if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n            if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n          }\n        }\n        function contentOnTransitionEnd(event) {\n          if (_autoUpdateCache === true) return;\n          event = event.originalEvent || event;\n          if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n        }\n        function viewportOnScroll(event) {\n          if (!_sleeping) {\n            if (scrollStopTimeoutId !== undefined) clearTimeout(scrollStopTimeoutId);else {\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n              if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n              dispatchCallback('onScrollStart', event);\n            }\n\n            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n            if (!_scrollbarsHandlesDefineScrollPos) {\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleOffset(false);\n            }\n            dispatchCallback('onScroll', event);\n            scrollStopTimeoutId = setTimeout(function () {\n              if (!_destroyed) {\n                //OnScrollStop:\n                clearTimeout(scrollStopTimeoutId);\n                scrollStopTimeoutId = undefined;\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStop', event);\n              }\n            }, scrollStopDelay);\n          }\n        }\n        if (_isTextarea) {\n          if (_msieVersion > 9 || !_autoUpdateRecommended) {\n            addDestroyEventListener(_targetElement, 'input', updateTextarea);\n          } else {\n            addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n          }\n          addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n        } else {\n          addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n        }\n        addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n      }\n\n      //==== Scrollbars ====//\n\n      /**\r\n       * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n      function setupScrollbarsDOM(destroy) {\n        var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n          var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n          var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n          var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n          var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n          if (!_domExists && !destroy) {\n            scrollbar.append(track);\n            track.append(handle);\n          }\n          return {\n            _scrollbar: scrollbar,\n            _track: track,\n            _handle: handle\n          };\n        };\n        function resetScrollbarDOM(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbar = scrollbarVars._scrollbar;\n          var track = scrollbarVars._track;\n          var handle = scrollbarVars._handle;\n          if (_domExists && _initialized) {\n            each([scrollbar, track, handle], function (i, elm) {\n              removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            });\n          } else {\n            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n          }\n        }\n        var horizontalElements;\n        var verticalElements;\n        if (!destroy) {\n          horizontalElements = selectOrGenerateScrollbarDOM(true);\n          verticalElements = selectOrGenerateScrollbarDOM();\n          _scrollbarHorizontalElement = horizontalElements._scrollbar;\n          _scrollbarHorizontalTrackElement = horizontalElements._track;\n          _scrollbarHorizontalHandleElement = horizontalElements._handle;\n          _scrollbarVerticalElement = verticalElements._scrollbar;\n          _scrollbarVerticalTrackElement = verticalElements._track;\n          _scrollbarVerticalHandleElement = verticalElements._handle;\n          if (!_domExists) {\n            _paddingElement.after(_scrollbarVerticalElement);\n            _paddingElement.after(_scrollbarHorizontalElement);\n          }\n        } else {\n          resetScrollbarDOM(true);\n          resetScrollbarDOM();\n        }\n      }\n\n      /**\r\n       * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n       * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n       */\n      function setupScrollbarEvents(isHorizontal) {\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var xy = scrollbarVars._x_y;\n        var XY = scrollbarVars._X_Y;\n        var scroll = _strScroll + scrollbarVars._Left_Top;\n        var strActive = 'active';\n        var strSnapHandle = 'snapHandle';\n        var strClickEvent = 'click';\n        var scrollDurationFactor = 1;\n        var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n        var trackTimeout;\n        var mouseDownScroll;\n        var mouseDownOffset;\n        var mouseDownInvertedScale;\n        function getPointerPosition(event) {\n          return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n        }\n\n        function getPreparedScrollbarsOption(name) {\n          return _currentPreparedOptions.scrollbars[name];\n        }\n        function increaseTrackScrollAmount() {\n          scrollDurationFactor = 0.5;\n        }\n        function decreaseTrackScrollAmount() {\n          scrollDurationFactor = 1;\n        }\n        function stopClickEventPropagation(event) {\n          COMPATIBILITY.stpP(event);\n        }\n        function documentKeyDown(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n        }\n        function documentKeyUp(event) {\n          if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n        }\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var trackLength = scrollbarVarsInfo._trackLength;\n            var handleLength = scrollbarVarsInfo._handleLength;\n            var scrollRange = scrollbarVarsInfo._maxScroll;\n            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n            var scrollDelta = scrollRange * scrollDeltaPercent;\n            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n            if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n          } else documentMouseTouchUp(event);\n        }\n        function documentMouseTouchUp(event) {\n          event = event || event.originalEvent;\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n              _capture: true\n            });\n          });\n          if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n          _scrollbarsHandlesDefineScrollPos = false;\n          removeClass(_bodyElement, _classNameDragging);\n          removeClass(scrollbarVars._handle, strActive);\n          removeClass(scrollbarVars._track, strActive);\n          removeClass(scrollbarVars._scrollbar, strActive);\n          mouseDownScroll = undefined;\n          mouseDownOffset = undefined;\n          mouseDownInvertedScale = 1;\n          decreaseTrackScrollAmount();\n          if (trackTimeout !== undefined) {\n            _base.scrollStop();\n            clearTimeout(trackTimeout);\n            trackTimeout = undefined;\n          }\n          if (event) {\n            var rect = _hostElementNative[LEXICON.bCR]();\n            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\n\n            //if mouse is outside host element\n            if (!mouseInsideHost) hostOnMouseLeave();\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n        }\n        function onHandleMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n        }\n        function onHandleMouseTouchDownAction(event) {\n          mouseDownScroll = _viewportElement[scroll]();\n          mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n          if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n          mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n          mouseDownOffset = getPointerPosition(event);\n          _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n          addClass(_bodyElement, _classNameDragging);\n          addClass(scrollbarVars._handle, strActive);\n          addClass(scrollbarVars._scrollbar, strActive);\n          setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n          COMPATIBILITY.rAF()(function () {\n            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n              _capture: true\n            });\n          });\n          if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n          COMPATIBILITY.stpP(event);\n        }\n        function onTrackMouseTouchDown(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n            var scrollBaseDuration = 270 * handleToViewportRatio;\n            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n            var ctrlKey = event.ctrlKey;\n            var instantScroll = event.shiftKey;\n            var instantScrollTransition = instantScroll && ctrlKey;\n            var isFirstIteration = true;\n            var easing = 'linear';\n            var decreaseScroll;\n            var finishedCondition;\n            var scrollActionFinsished = function scrollActionFinsished(transition) {\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n            };\n            var scrollActionInstantFinished = function scrollActionInstantFinished() {\n              scrollActionFinsished();\n              onHandleMouseTouchDownAction(event);\n            };\n            var scrollAction = function scrollAction() {\n              if (!_destroyed) {\n                var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                var handleOffset = scrollbarVarsInfo._handleOffset;\n                var trackLength = scrollbarVarsInfo._trackLength;\n                var handleLength = scrollbarVarsInfo._handleLength;\n                var scrollRange = scrollbarVarsInfo._maxScroll;\n                var currScroll = scrollbarVarsInfo._currentScroll;\n                var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n                var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                var scrollObj = {};\n                var animationObj = {\n                  easing: easing,\n                  step: function step(now) {\n                    if (_scrollbarsHandlesDefineScrollPos) {\n                      _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n                      refreshScrollbarHandleOffset(isHorizontal, now);\n                    }\n                  }\n                };\n                instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n\n                //_base.scrollStop();\n\n                if (instantScroll) {\n                  _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n                  if (instantScrollTransition) {\n                    //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                    //and the animation stops at the correct point\n                    instantScrollPosition = _viewportElement[scroll]();\n                    //scroll back to the position before instant scrolling so animation can be performed\n                    _viewportElement[scroll](currScroll);\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                    instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                    scrollObj[xy] = instantScrollPosition;\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: 130,\n                      complete: scrollActionInstantFinished\n                    }));\n                  } else scrollActionInstantFinished();\n                } else {\n                  decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                  finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n                  if (finishedCondition) {\n                    clearTimeout(trackTimeout);\n                    _base.scrollStop();\n                    trackTimeout = undefined;\n                    scrollActionFinsished(true);\n                  } else {\n                    trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                    scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n                    _base.scroll(scrollObj, extendDeep(animationObj, {\n                      duration: scrollDuration\n                    }));\n                  }\n                  isFirstIteration = false;\n                }\n              }\n            };\n            if (ctrlKey) increaseTrackScrollAmount();\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = COMPATIBILITY.page(event)[xy];\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._track, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n            scrollAction();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        }\n        function onTrackMouseTouchEnter(event) {\n          //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n          _scrollbarsHandleHovered = true;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n        }\n        function onTrackMouseTouchLeave(event) {\n          _scrollbarsHandleHovered = false;\n          if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n        }\n        function onScrollbarMouseTouchDown(event) {\n          COMPATIBILITY.stpP(event);\n        }\n        addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n        addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n        addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n        if (_supportTransition) {\n          addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n            if (event.target !== scrollbarVars._scrollbar[0]) return;\n            refreshScrollbarHandleLength(isHorizontal);\n            refreshScrollbarHandleOffset(isHorizontal);\n          });\n        }\n      }\n\n      /**\r\n       * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n       * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n       * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n       * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n       */\n      function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n        var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n        var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n        addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n        addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n      }\n\n      /**\r\n       * Autoshows / autohides both scrollbars with.\r\n       * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n       * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n       */\n      function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n        clearTimeout(_scrollbarsAutoHideTimeoutId);\n        if (shallBeVisible) {\n          //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n          removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n          //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n          removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n        } else {\n          var anyActive;\n          var strActive = 'active';\n          var hide = function hide() {\n            if (!_scrollbarsHandleHovered && !_destroyed) {\n              anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n              if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n            }\n          };\n          if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n        }\n      }\n\n      /**\r\n       * Refreshes the handle length of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       */\n      function refreshScrollbarHandleLength(isHorizontal) {\n        var handleCSS = {};\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var digit = 1000000;\n        //get and apply intended handle length\n        var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n        handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n        if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS);\n\n        //measure the handle length to respect min & max length\n        scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n        scrollbarVarsInfo._handleLengthRatio = handleRatio;\n      }\n\n      /**\r\n       * Refreshes the handle offset of the given scrollbar.\r\n       * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n       * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n       */\n      function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n        var transition = type(scrollOrTransition) == TYPES.b;\n        var transitionDuration = 250;\n        var isRTLisHorizontal = _isRTL && isHorizontal;\n        var scrollbarVars = getScrollbarVars(isHorizontal);\n        var scrollbarVarsInfo = scrollbarVars._info;\n        var strTranslateBrace = 'translate(';\n        var strTransform = VENDORS._cssProperty('transform');\n        var strTransition = VENDORS._cssProperty('transition');\n        var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n        var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\n\n        //measure the handle length to respect min & max length\n        var handleLength = scrollbarVarsInfo._handleLength;\n        var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n        var handleTrackDiff = trackLength - handleLength;\n        var handleCSS = {};\n        var transformOffset;\n        var translateValue;\n\n        //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n        // because its a bit behind during the small delay when content size updates\n        //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n        var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n        var getScrollRatio = function getScrollRatio(base) {\n          return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n        };\n        var getHandleOffset = function getHandleOffset(scrollRatio) {\n          var offset = handleTrackDiff * scrollRatio;\n          offset = isNaN(offset) ? 0 : offset;\n          offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n          offset = MATH.max(0, offset);\n          return offset;\n        };\n        var scrollRatio = getScrollRatio(nativeScroll);\n        var unsnappedScrollRatio = getScrollRatio(currentScroll);\n        var handleOffset = getHandleOffset(unsnappedScrollRatio);\n        var snappedHandleOffset = getHandleOffset(scrollRatio);\n        scrollbarVarsInfo._maxScroll = maxScroll;\n        scrollbarVarsInfo._currentScroll = nativeScroll;\n        scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n        if (_supportTransform) {\n          transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n          //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n          translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n          handleCSS[strTransform] = translateValue;\n\n          //apply or clear up transition\n          if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n        } else handleCSS[scrollbarVars._left_top] = handleOffset;\n\n        //only apply css if offset has changed and overflow exists.\n        if (!nativeOverlayScrollbarsAreActive()) {\n          scrollbarVars._handle.css(handleCSS);\n\n          //clear up transition\n          if (_supportTransform && _supportTransition && transition) {\n            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n              if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n            });\n          }\n        }\n        scrollbarVarsInfo._handleOffset = handleOffset;\n        scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n        scrollbarVarsInfo._trackLength = trackLength;\n      }\n\n      /**\r\n       * Refreshes the interactivity of the given scrollbar element.\r\n       * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n       * @param value True for interactivity false for no interactivity.\r\n       */\n      function refreshScrollbarsInteractive(isTrack, value) {\n        var action = value ? 'removeClass' : 'addClass';\n        var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n        var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n        var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n        element1[action](className);\n        element2[action](className);\n      }\n\n      /**\r\n       * Returns a object which is used for fast access for specific variables.\r\n       * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n       * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n       */\n      function getScrollbarVars(isHorizontal) {\n        return {\n          _width_height: isHorizontal ? _strWidth : _strHeight,\n          _Width_Height: isHorizontal ? 'Width' : 'Height',\n          _left_top: isHorizontal ? _strLeft : _strTop,\n          _Left_Top: isHorizontal ? 'Left' : 'Top',\n          _x_y: isHorizontal ? _strX : _strY,\n          _X_Y: isHorizontal ? 'X' : 'Y',\n          _w_h: isHorizontal ? 'w' : 'h',\n          _l_t: isHorizontal ? 'l' : 't',\n          _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n          _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n          _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n          _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n        };\n      }\n\n      //==== Scrollbar Corner ====//\n\n      /**\r\n       * Builds or destroys the scrollbar corner DOM element.\r\n       * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n       */\n      function setupScrollbarCornerDOM(destroy) {\n        _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n        if (!destroy) {\n          if (!_domExists) {\n            _hostElement.append(_scrollbarCornerElement);\n          }\n        } else {\n          if (_domExists && _initialized) {\n            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n          } else {\n            remove(_scrollbarCornerElement);\n          }\n        }\n      }\n\n      /**\r\n       * Initializes all scrollbar corner interactivity events.\r\n       */\n      function setupScrollbarCornerEvents() {\n        var insideIFrame = _windowElementNative.top !== _windowElementNative;\n        var mouseDownPosition = {};\n        var mouseDownSize = {};\n        var mouseDownInvertedScale = {};\n        var reconnectMutationObserver;\n        function documentDragMove(event) {\n          if (onMouseTouchDownContinue(event)) {\n            var pageOffset = getCoordinates(event);\n            var hostElementCSS = {};\n            if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n            if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n            _hostElement.css(hostElementCSS);\n            COMPATIBILITY.stpP(event);\n          } else {\n            documentMouseTouchUp(event);\n          }\n        }\n        function documentMouseTouchUp(event) {\n          var eventIsTrusted = event !== undefined;\n          setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n          removeClass(_bodyElement, _classNameDragging);\n          if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n          if (eventIsTrusted) {\n            if (reconnectMutationObserver) connectMutationObservers();\n            _base.update(_strAuto);\n          }\n          reconnectMutationObserver = false;\n        }\n        function onMouseTouchDownContinue(event) {\n          var originalEvent = event.originalEvent || event;\n          var isTouchEvent = originalEvent.touches !== undefined;\n          return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n        }\n        function getCoordinates(event) {\n          return _msieVersion && insideIFrame ? {\n            x: event.screenX,\n            y: event.screenY\n          } : COMPATIBILITY.page(event);\n        }\n        addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n          if (onMouseTouchDownContinue(event) && !_resizeNone) {\n            if (_mutationObserversConnected) {\n              reconnectMutationObserver = true;\n              disconnectMutationObservers();\n            }\n            mouseDownPosition = getCoordinates(event);\n            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n            mouseDownInvertedScale = getHostElementInvertedScale();\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n            addClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n        });\n      }\n\n      //==== Utils ====//\n\n      /**\r\n       * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n       * @param name The name of the target which shall be called.\r\n       * @param args The args with which the callback shall be called.\r\n       * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n       */\n      function dispatchCallback(name, args, dependent) {\n        if (dependent === false) return;\n        if (_initialized) {\n          var callback = _currentPreparedOptions.callbacks[name];\n          var extensionOnName = name;\n          var ext;\n          if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n          if (type(callback) == TYPES.f) callback.call(_base, args);\n          each(_extensions, function () {\n            ext = this;\n            if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n          });\n        } else if (!_destroyed) _callbacksInitQeueue.push({\n          n: name,\n          a: args\n        });\n      }\n\n      /**\r\n       * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n       * @param targetCSSObject The css object to which the values shall be applied.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n       * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n       */\n      function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n        prefix = prefix || _strEmpty;\n        values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n        targetCSSObject[prefix + _strTop] = values[0];\n        targetCSSObject[prefix + _strRight] = values[1];\n        targetCSSObject[prefix + _strBottom] = values[2];\n        targetCSSObject[prefix + _strLeft] = values[3];\n      }\n\n      /**\r\n       * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n       * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n       * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n       * @param zeroX True if the x axis shall be 0.\r\n       * @param zeroY True if the y axis shall be 0.\r\n       * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n       */\n      function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n        suffix = suffix || _strEmpty;\n        prefix = prefix || _strEmpty;\n        return {\n          t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n          r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n          b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n          l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n        };\n      }\n\n      /**\r\n       * Returns the computed CSS transition string from the given element.\r\n       * @param element The element from which the transition string shall be returned.\r\n       * @returns {string} The CSS transition string from the given element.\r\n       */\n      function getCSSTransitionString(element) {\n        var transitionStr = VENDORS._cssProperty('transition');\n        var assembledValue = element.css(transitionStr);\n        if (assembledValue) return assembledValue;\n        var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n        var regExpMain = new RegExp(regExpString);\n        var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n        var properties = 'property duration timing-function delay'.split(' ');\n        var result = [];\n        var strResult;\n        var valueArray;\n        var i = 0;\n        var j;\n        var splitCssStyleByComma = function splitCssStyleByComma(str) {\n          strResult = [];\n          if (!str.match(regExpValidate)) return str;\n          while (str.match(regExpMain)) {\n            strResult.push(RegExp.$1);\n            str = str.replace(regExpMain, _strEmpty);\n          }\n          return strResult;\n        };\n        for (; i < properties[LEXICON.l]; i++) {\n          valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n          for (j = 0; j < valueArray[LEXICON.l]; j++) {\n            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n          }\n        }\n        return result.join(', ');\n      }\n\n      /**\r\n       * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n       * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n       * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n       */\n      function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n        var i;\n        var split;\n        var appendix;\n        var appendClasses = function appendClasses(classes, condition) {\n          appendix = '';\n          if (condition && typeof classes == TYPES.s) {\n            split = classes.split(_strSpace);\n            for (i = 0; i < split[LEXICON.l]; i++) {\n              appendix += '|' + split[i] + '$';\n            }\n            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n          }\n\n          return appendix;\n        };\n        return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n      }\n\n      /**\r\n       * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n       * @returns {{x: number, y: number}} The scale of the host-element.\r\n       */\n      function getHostElementInvertedScale() {\n        var rect = _paddingElementNative[LEXICON.bCR]();\n        return {\n          x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n          y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n        };\n      }\n\n      /**\r\n       * Checks whether the given object is a HTMLElement.\r\n       * @param o The object which shall be checked.\r\n       * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n       */\n      function isHTMLElement(o) {\n        var strOwnerDocument = 'ownerDocument';\n        var strHTMLElement = 'HTMLElement';\n        var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n        return typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] :\n        //DOM2\n        o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s;\n      }\n\n      /**\r\n       * Compares 2 arrays and returns the differences between them as a array.\r\n       * @param a1 The first array which shall be compared.\r\n       * @param a2 The second array which shall be compared.\r\n       * @returns {Array} The differences between the two arrays.\r\n       */\n      function getArrayDifferences(a1, a2) {\n        var a = [];\n        var diff = [];\n        var i;\n        var k;\n        for (i = 0; i < a1.length; i++) {\n          a[a1[i]] = true;\n        }\n        for (i = 0; i < a2.length; i++) {\n          if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n        }\n        for (k in a) {\n          diff.push(k);\n        }\n        return diff;\n      }\n\n      /**\r\n       * Returns Zero or the number to which the value can be parsed.\r\n       * @param value The value which shall be parsed.\r\n       * @param toFloat Indicates whether the number shall be parsed to a float.\r\n       */\n      function parseToZeroOrNumber(value, toFloat) {\n        var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n        return isNaN(num) ? 0 : num;\n      }\n\n      /**\r\n       * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n       * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n       */\n      function getTextareaInfo() {\n        //read needed values\n        var textareaCursorPosition = _targetElementNative.selectionStart;\n        if (textareaCursorPosition === undefined) return;\n        var textareaValue = _targetElement.val();\n        var textareaLength = textareaValue[LEXICON.l];\n        var textareaRowSplit = textareaValue.split('\\n');\n        var textareaLastRow = textareaRowSplit[LEXICON.l];\n        var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n        var widestRow = 0;\n        var textareaLastCol = 0;\n        var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n        var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n        var rowCols;\n        var i;\n\n        //get widest Row and the last column of the textarea\n        for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n          rowCols = textareaRowSplit[i][LEXICON.l];\n          if (rowCols > textareaLastCol) {\n            widestRow = i + 1;\n            textareaLastCol = rowCols;\n          }\n        }\n        return {\n          _cursorRow: cursorRow,\n          //cursorRow\n          _cursorColumn: cursorCol,\n          //cursorCol\n          _rows: textareaLastRow,\n          //rows\n          _columns: textareaLastCol,\n          //cols\n          _widestRow: widestRow,\n          //wRow\n          _cursorPosition: textareaCursorPosition,\n          //pos\n          _cursorMax: textareaLength //max\n        };\n      }\n\n      /**\r\n       * Determines whether native overlay scrollbars are active.\r\n       * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n       */\n      function nativeOverlayScrollbarsAreActive() {\n        return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n      }\n\n      /**\r\n       * Gets the element which is used to measure the content size.\r\n       * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n       */\n      function getContentMeasureElement() {\n        return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n      }\n\n      /**\r\n       * Generates a string which represents a HTML div with the given classes or attributes.\r\n       * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n       * @param content The content of the div as string.\r\n       * @returns {string} The concated string which represents a HTML div and its content.\r\n       */\n      function generateDiv(classesOrAttrs, content) {\n        return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n          var key;\n          var attrs = _strEmpty;\n          if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n            for (key in classesOrAttrs) {\n              attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n            }\n          }\n          return attrs;\n        }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n      }\n\n      /**\r\n       * Selects or generates a div with the given class attribute.\r\n       * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n       * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n       * If its a boolean it decides whether only the children of the host element shall be selected.\r\n       * @returns {*} The generated or selected element.\r\n       */\n      function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n        var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n        var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n        return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n      }\n\n      /**\r\n       * Gets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be got.\r\n       * @param path The property of which the value shall be got.\r\n       * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n       */\n      function getObjectPropVal(obj, path) {\n        var splits = path.split(_strDot);\n        var i = 0;\n        var val;\n        for (; i < splits.length; i++) {\n          if (!obj[LEXICON.hOP](splits[i])) return;\n          val = obj[splits[i]];\n          if (i < splits.length && type(val) == TYPES.o) obj = val;\n        }\n        return val;\n      }\n\n      /**\r\n       * Sets the value of the given property from the given object.\r\n       * @param obj The object from which the property value shall be set.\r\n       * @param path The property of which the value shall be set.\r\n       * @param val The value of the property which shall be set.\r\n       */\n      function setObjectPropVal(obj, path, val) {\n        var splits = path.split(_strDot);\n        var splitsLength = splits.length;\n        var i = 0;\n        var extendObj = {};\n        var extendObjRoot = extendObj;\n        for (; i < splitsLength; i++) {\n          extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n        }\n        FRAMEWORK.extend(obj, extendObjRoot, true);\n      }\n\n      /**\t\r\n       * Runs a action for each selector inside the updateOnLoad option.\t\r\n       * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n       */\n      function eachUpdateOnLoad(action) {\n        var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n        updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n        if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n          each(updateOnLoad, action);\n        }\n      }\n\n      //==== Utils Cache ====//\n\n      /**\r\n       * Compares two values or objects and returns true if they aren't equal.\r\n       * @param current The first value or object which shall be compared.\r\n       * @param cache The second value or object which shall be compared.\r\n       * @param force If true the returned value is always true.\r\n       * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n       */\n      function checkCache(current, cache, force) {\n        if (force) return force;\n        if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n          for (var prop in current) {\n            if (prop !== 'c') {\n              if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                if (checkCache(current[prop], cache[prop])) return true;\n              } else {\n                return true;\n              }\n            }\n          }\n        } else {\n          return current !== cache;\n        }\n        return false;\n      }\n\n      //==== Shortcuts ====//\n\n      /**\r\n       * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n       */\n      function extendDeep() {\n        return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n      }\n\n      /**\r\n       * jQuery addClass method shortcut.\r\n       */\n      function addClass(el, classes) {\n        return _frameworkProto.addClass.call(el, classes);\n      }\n\n      /**\r\n       * jQuery removeClass method shortcut.\r\n       */\n      function removeClass(el, classes) {\n        return _frameworkProto.removeClass.call(el, classes);\n      }\n\n      /**\r\n       * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n       */\n      function addRemoveClass(el, classes, doAdd) {\n        return doAdd ? addClass(el, classes) : removeClass(el, classes);\n      }\n\n      /**\r\n       * jQuery remove method shortcut.\r\n       */\n      function remove(el) {\n        return _frameworkProto.remove.call(el);\n      }\n\n      /**\r\n       * Finds the first child element with the given selector of the given element.\r\n       * @param el The root element from which the selector shall be valid.\r\n       * @param selector The selector of the searched element.\r\n       * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n       */\n      function findFirst(el, selector) {\n        return _frameworkProto.find.call(el, selector).eq(0);\n      }\n\n      //==== API ====//\n\n      /**\r\n       * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n       * This behavior can be reset by calling the update method.\r\n       */\n      _base.sleep = function () {\n        _sleeping = true;\n      };\n\n      /**\r\n       * Updates the plugin and DOM to the current options.\r\n       * This method should only be called if a update is 100% required.\r\n       * @param force True if every property shall be updated and the cache shall be ignored.\r\n       * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n       * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n       * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n       * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n       * @returns {boolean|undefined} \r\n       * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n       * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n       * undefined otherwise.\r\n       */\n      _base.update = function (force) {\n        if (_destroyed) return;\n        var attrsChanged;\n        var contentSizeC;\n        var isString = type(force) == TYPES.s;\n        var doUpdateAuto;\n        var mutHost;\n        var mutContent;\n        if (isString) {\n          if (force === _strAuto) {\n            attrsChanged = meaningfulAttrsChanged();\n            contentSizeC = updateAutoContentSizeChanged();\n            doUpdateAuto = attrsChanged || contentSizeC;\n            if (doUpdateAuto) {\n              update({\n                _contentSizeChanged: contentSizeC,\n                _changedOptions: _initialized ? undefined : _currentPreparedOptions\n              });\n            }\n          } else if (force === _strSync) {\n            if (_mutationObserversConnected) {\n              mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n              mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n            } else {\n              mutHost = _base.update(_strAuto);\n            }\n          } else if (force === 'zoom') {\n            update({\n              _hostSizeChanged: true,\n              _contentSizeChanged: true\n            });\n          }\n        } else {\n          force = _sleeping || force;\n          _sleeping = false;\n          if (!_base.update(_strSync) || force) update({\n            _force: force\n          });\n        }\n        updateElementsOnLoad();\n        return doUpdateAuto || mutHost || mutContent;\n      };\n\n      /**\r\n       Gets or sets the current options. The update method will be called automatically if new options were set.\r\n       * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n       * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n       * @returns {*}\r\n       */\n      _base.options = function (newOptions, value) {\n        var option = {};\n        var changedOps;\n\n        //return current options if newOptions are undefined or empty\n        if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n          if (type(newOptions) == TYPES.s) {\n            if (arguments.length > 1) {\n              setObjectPropVal(option, newOptions, value);\n              changedOps = setOptions(option);\n            } else return getObjectPropVal(_currentOptions, newOptions);\n          } else return _currentOptions;\n        } else {\n          changedOps = setOptions(newOptions);\n        }\n        if (!FRAMEWORK.isEmptyObject(changedOps)) {\n          update({\n            _changedOptions: changedOps\n          });\n        }\n      };\n\n      /**\r\n       * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n       */\n      _base.destroy = function () {\n        if (_destroyed) return;\n\n        //remove this instance from auto update loop\n        autoUpdateLoop.remove(_base);\n\n        //disconnect all mutation observers\n        disconnectMutationObservers();\n\n        //remove all resize observers\n        setupResizeObserver(_sizeObserverElement);\n        setupResizeObserver(_sizeAutoObserverElement);\n\n        //remove all extensions\n        for (var extName in _extensions) {\n          _base.removeExt(extName);\n        }\n\n        //remove all 'destroy' events\n        while (_destroyEvents[LEXICON.l] > 0) {\n          _destroyEvents.pop()();\n        }\n\n        //remove all events from host element\n        setupHostMouseTouchEvents(true);\n\n        //remove all helper / detection elements\n        if (_contentGlueElement) remove(_contentGlueElement);\n        if (_contentArrangeElement) remove(_contentArrangeElement);\n        if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement);\n\n        //remove all generated DOM\n        setupScrollbarsDOM(true);\n        setupScrollbarCornerDOM(true);\n        setupStructureDOM(true);\n\n        //remove all generated image load events\n        for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n          FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n        }\n        _updateOnLoadElms = undefined;\n        _destroyed = true;\n        _sleeping = true;\n\n        //remove this instance from the instances list\n        INSTANCES(pluginTargetElement, 0);\n        dispatchCallback('onDestroyed');\n\n        //remove all properties and methods\n        //for (var property in _base)\n        //    delete _base[property];\n        //_base = undefined;\n      };\n\n      /**\r\n       * Scrolls to a given position or element.\r\n       * @param coordinates\r\n       * 1. Can be \"coordinates\" which looks like:\r\n       *    { x : ?, y : ? } OR          Object with x and y properties\r\n       *    { left : ?, top : ? } OR     Object with left and top properties\r\n       *    { l : ?, t : ? } OR          Object with l and t properties\r\n       *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n       *    ?                            A single value which stays for both axis\r\n       *    A value can be a number, a string or a calculation.\r\n       *\r\n       *    Operators:\r\n       *    [NONE]  The current scroll will be overwritten by the value.\r\n       *    '+='    The value will be added to the current scroll offset\r\n       *    '-='    The value will be subtracted from the current scroll offset\r\n       *    '*='    The current scroll wil be multiplicated by the value.\r\n       *    '/='    The current scroll wil be divided by the value.\r\n       *\r\n       *    Units:\r\n       *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n       *    'px'    Same as none\r\n       *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n       *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n       *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n       *\r\n       *    example final values:\r\n       *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n       *\r\n       * 2. Can be a HTML or jQuery element:\r\n       *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n       *\r\n       * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n       *    {\r\n       *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n       *      scroll : [string, array, object],               Default value is 'always'.\r\n       *      block : [string, array, object],                Default value is 'begin'.\r\n       *      margin : [number, boolean, array, object]       Default value is false.\r\n       *    }\r\n       *\r\n       *    Possible scroll settings are:\r\n       *    'always'      Scrolls always.\r\n       *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n       *    'never'       Scrolls never.\r\n       *\r\n       *    Possible block settings are:\r\n       *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n       *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n       *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n       *    'nearest' The element will be docked to the nearest edge(s).\r\n       *\r\n       *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n       *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n       *    [NUMBER]                                          The margin will be used for all edges.\r\n       *\r\n       * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n       * @param easing The animation easing.\r\n       * @param complete The animation complete callback.\r\n       * @returns {{\r\n       *   position: {x: number, y: number},\r\n       *   ratio: {x: number, y: number},\r\n       *   max: {x: number, y: number},\r\n       *   handleOffset: {x: number, y: number},\r\n       *   handleLength: {x: number, y: number},\r\n       *   handleLengthRatio: {x: number, y: number}, t\r\n       *   rackLength: {x: number, y: number},\r\n       *   isRTL: boolean,\r\n       *   isRTLNormalized: boolean\r\n       *  }}\r\n       */\n      _base.scroll = function (coordinates, duration, easing, complete) {\n        if (arguments.length === 0 || coordinates === undefined) {\n          var infoX = _scrollHorizontalInfo;\n          var infoY = _scrollVerticalInfo;\n          var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n          var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n          var scrollX = infoX._currentScroll;\n          var scrollXRatio = infoX._currentScrollRatio;\n          var maxScrollX = infoX._maxScroll;\n          scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n          scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n          scrollX *= normalizeNegate ? -1 : 1;\n          maxScrollX *= normalizeNegate ? -1 : 1;\n          return {\n            position: {\n              x: scrollX,\n              y: infoY._currentScroll\n            },\n            ratio: {\n              x: scrollXRatio,\n              y: infoY._currentScrollRatio\n            },\n            max: {\n              x: maxScrollX,\n              y: infoY._maxScroll\n            },\n            handleOffset: {\n              x: infoX._handleOffset,\n              y: infoY._handleOffset\n            },\n            handleLength: {\n              x: infoX._handleLength,\n              y: infoY._handleLength\n            },\n            handleLengthRatio: {\n              x: infoX._handleLengthRatio,\n              y: infoY._handleLengthRatio\n            },\n            trackLength: {\n              x: infoX._trackLength,\n              y: infoY._trackLength\n            },\n            snappedHandleOffset: {\n              x: infoX._snappedHandleOffset,\n              y: infoY._snappedHandleOffset\n            },\n            isRTL: _isRTL,\n            isRTLNormalized: _normalizeRTLCache\n          };\n        }\n        _base.update(_strSync);\n        var normalizeRTL = _normalizeRTLCache;\n        var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n        var coordinatesYAxisProps = [_strY, _strTop, 't'];\n        var coordinatesOperators = ['+=', '-=', '*=', '/='];\n        var durationIsObject = type(duration) == TYPES.o;\n        var completeCallback = durationIsObject ? duration.complete : complete;\n        var i;\n        var finalScroll = {};\n        var specialEasing = {};\n        var doScrollLeft;\n        var doScrollTop;\n        var animationOptions;\n        var strEnd = 'end';\n        var strBegin = 'begin';\n        var strCenter = 'center';\n        var strNearest = 'nearest';\n        var strAlways = 'always';\n        var strNever = 'never';\n        var strIfNeeded = 'ifneeded';\n        var strLength = LEXICON.l;\n        var settingsAxis;\n        var settingsScroll;\n        var settingsBlock;\n        var settingsMargin;\n        var finalElement;\n        var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n        var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n        var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n        var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n        var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n        var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n        var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n        var updateScrollbarInfos = function updateScrollbarInfos() {\n          if (doScrollLeft) refreshScrollbarHandleOffset(true);\n          if (doScrollTop) refreshScrollbarHandleOffset(false);\n        };\n        var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\n          updateScrollbarInfos();\n          completeCallback();\n        };\n        function checkSettingsStringValue(currValue, allowedValues) {\n          for (i = 0; i < allowedValues[strLength]; i++) {\n            if (currValue === allowedValues[i]) return true;\n          }\n          return false;\n        }\n        function getRawScroll(isX, coordinates) {\n          var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n          coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n          if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n            //decides RTL normalization \"hack\" with .n\n            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n            for (i = 0; i < coordinateProps[strLength]; i++) {\n              if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n            }\n          }\n        }\n        function getFinalScroll(isX, rawScroll) {\n          var isString = type(rawScroll) == TYPES.s;\n          var operator;\n          var amount;\n          var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n          var currScroll = scrollInfo._currentScroll;\n          var maxScroll = scrollInfo._maxScroll;\n          var mult = ' * ';\n          var finalValue;\n          var isRTLisX = _isRTL && isX;\n          var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n          var strReplace = 'replace';\n          var evalFunc = eval;\n          var possibleOperator;\n          if (isString) {\n            //check operator\n            if (rawScroll[strLength] > 2) {\n              possibleOperator = rawScroll.substr(0, 2);\n              if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n            }\n\n            //calculate units and shortcuts\n            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n            rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n            [strReplace](/</g, 0) //'<'   = 0%\n            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n            [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n          } else {\n            amount = rawScroll;\n          }\n          if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\n            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n            operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n            switch (operator) {\n              case '+=':\n                finalValue = operatorCurrScroll + amount;\n                break;\n              case '-=':\n                finalValue = operatorCurrScroll - amount;\n                break;\n              case '*=':\n                finalValue = operatorCurrScroll * amount;\n                break;\n              case '/=':\n                finalValue = operatorCurrScroll / amount;\n                break;\n              default:\n                finalValue = amount;\n                break;\n            }\n            finalValue = invert ? maxScroll - finalValue : finalValue;\n            finalValue *= negate ? -1 : 1;\n            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n          }\n          return finalValue === currScroll ? undefined : finalValue;\n        }\n        function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n          var resultDefault = [defaultValue, defaultValue];\n          var valueType = type(value);\n          var valueArrLength;\n          var valueArrItem;\n\n          //value can be [ string, or array of two strings ]\n          if (valueType == valueInternalType) {\n            value = [value, value];\n          } else if (valueType == TYPES.a) {\n            valueArrLength = value[strLength];\n            if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n              if (valueArrLength === 1) value[1] = defaultValue;\n              for (i = 0; i < valueArrLength; i++) {\n                valueArrItem = value[i];\n                if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                  value = resultDefault;\n                  break;\n                }\n              }\n            }\n          } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n          return {\n            x: value[0],\n            y: value[1]\n          };\n        }\n        function generateMargin(marginTopRightBottomLeftArray) {\n          var result = [];\n          var currValue;\n          var currValueType;\n          var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n          for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n            if (i === valueDirections[strLength]) break;\n            currValue = marginTopRightBottomLeftArray[i];\n            currValueType = type(currValue);\n            if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n          }\n          return result;\n        }\n        if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n          //get settings\n          var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n          var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n          var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n          var block = coordinatesIsElementObj ? coordinates.block : 0;\n          var marginDefault = [0, 0, 0, 0];\n          var marginType = type(margin);\n          var marginLength;\n          finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n          if (finalElement[strLength] > 0) {\n            //margin can be [ boolean, number, array of 2, array of 4, object ]\n            if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n              marginLength = margin[strLength];\n              if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n            } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault;\n\n            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n            settingsMargin = margin;\n            var viewportScroll = {\n              l: _scrollHorizontalInfo._currentScroll,\n              t: _scrollVerticalInfo._currentScroll\n            };\n            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n            var viewportOffset = _paddingElement.offset();\n\n            //get coordinates\n            var elementOffset = finalElement.offset();\n            var doNotScroll = {\n              x: settingsScroll.x == strNever || settingsAxis == _strY,\n              y: settingsScroll.y == strNever || settingsAxis == _strX\n            };\n            elementOffset[_strTop] -= settingsMargin[0];\n            elementOffset[_strLeft] -= settingsMargin[3];\n            var elementScrollCoordinates = {\n              x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n              y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n            };\n            if (_isRTL) {\n              if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n              if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n              if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n            }\n\n            //measuring is required\n            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n              var measuringElm = finalElement[0];\n              var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                width: measuringElm[LEXICON.oW],\n                height: measuringElm[LEXICON.oH]\n              };\n              var elementSize = {\n                w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n              };\n              var finalizeBlock = function finalizeBlock(isX) {\n                var vars = getScrollbarVars(isX);\n                var wh = vars._w_h;\n                var lt = vars._left_top;\n                var xy = vars._x_y;\n                var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                var blockIsCenter = settingsBlock[xy] == strCenter;\n                var blockIsNearest = settingsBlock[xy] == strNearest;\n                var scrollNever = settingsScroll[xy] == strNever;\n                var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                var vpSize = _viewportSize[wh];\n                var vpOffset = viewportOffset[lt];\n                var elSize = elementSize[wh];\n                var elOffset = elementOffset[lt];\n                var divide = blockIsCenter ? 2 : 1;\n                var elementCenterOffset = elOffset + elSize / 2;\n                var viewportCenterOffset = vpOffset + vpSize / 2;\n                var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                  if (blockIsNearest || scrollIfNeeded) {\n                    doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                    blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                  }\n                  elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                }\n              };\n              finalizeBlock(true);\n              finalizeBlock(false);\n            }\n            if (doNotScroll.y) delete elementScrollCoordinates.y;\n            if (doNotScroll.x) delete elementScrollCoordinates.x;\n            coordinates = elementScrollCoordinates;\n          }\n        }\n        finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n        finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n        doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\n        doScrollTop = finalScroll[_strScrollTop] !== undefined;\n        if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n          if (durationIsObject) {\n            duration.complete = proxyCompleteCallback;\n            _viewportElement.animate(finalScroll, duration);\n          } else {\n            animationOptions = {\n              duration: duration,\n              complete: proxyCompleteCallback\n            };\n            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n              specialEasing[_strScrollLeft] = easing[0] || easing.x;\n              specialEasing[_strScrollTop] = easing[1] || easing.y;\n              animationOptions.specialEasing = specialEasing;\n            } else {\n              animationOptions.easing = easing;\n            }\n            _viewportElement.animate(finalScroll, animationOptions);\n          }\n        } else {\n          if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n          if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n          updateScrollbarInfos();\n        }\n      };\n\n      /**\r\n       * Stops all scroll animations.\r\n       * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n       */\n      _base.scrollStop = function (param1, param2, param3) {\n        _viewportElement.stop(param1, param2, param3);\n        return _base;\n      };\n\n      /**\r\n       * Returns all relevant elements.\r\n       * @param elementName The name of the element which shall be returned.\r\n       * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n       */\n      _base.getElements = function (elementName) {\n        var obj = {\n          target: _targetElementNative,\n          host: _hostElementNative,\n          padding: _paddingElementNative,\n          viewport: _viewportElementNative,\n          content: _contentElementNative,\n          scrollbarHorizontal: {\n            scrollbar: _scrollbarHorizontalElement[0],\n            track: _scrollbarHorizontalTrackElement[0],\n            handle: _scrollbarHorizontalHandleElement[0]\n          },\n          scrollbarVertical: {\n            scrollbar: _scrollbarVerticalElement[0],\n            track: _scrollbarVerticalTrackElement[0],\n            handle: _scrollbarVerticalHandleElement[0]\n          },\n          scrollbarCorner: _scrollbarCornerElement[0]\n        };\n        return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n      };\n\n      /**\r\n       * Returns a object which describes the current state of this instance.\r\n       * @param stateProperty A specific property from the state object which shall be returned.\r\n       * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n       */\n      _base.getState = function (stateProperty) {\n        function prepare(obj) {\n          if (!FRAMEWORK.isPlainObject(obj)) return obj;\n          var extended = extendDeep({}, obj);\n          var changePropertyName = function changePropertyName(from, to) {\n            if (extended[LEXICON.hOP](from)) {\n              extended[to] = extended[from];\n              delete extended[from];\n            }\n          };\n          changePropertyName('w', _strWidth); //change w to width\n          changePropertyName('h', _strHeight); //change h to height\n          delete extended.c; //delete c (the 'changed' prop)\n          return extended;\n        }\n        ;\n        var obj = {\n          destroyed: !!prepare(_destroyed),\n          sleeping: !!prepare(_sleeping),\n          autoUpdate: prepare(!_mutationObserversConnected),\n          widthAuto: prepare(_widthAutoCache),\n          heightAuto: prepare(_heightAutoCache),\n          padding: prepare(_cssPaddingCache),\n          overflowAmount: prepare(_overflowAmountCache),\n          hideOverflow: prepare(_hideOverflowCache),\n          hasOverflow: prepare(_hasOverflowCache),\n          contentScrollSize: prepare(_contentScrollSizeCache),\n          viewportSize: prepare(_viewportSize),\n          hostSize: prepare(_hostSizeCache),\n          documentMixed: prepare(_documentMixed)\n        };\n        return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n      };\n\n      /**\r\n       * Gets all or specific extension instance.\r\n       * @param extName The name of the extension from which the instance shall be got.\r\n       * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n       */\n      _base.ext = function (extName) {\n        var result;\n        var privateMethods = _extensionsPrivateMethods.split(' ');\n        var i = 0;\n        if (type(extName) == TYPES.s) {\n          if (_extensions[LEXICON.hOP](extName)) {\n            result = extendDeep({}, _extensions[extName]);\n            for (; i < privateMethods.length; i++) {\n              delete result[privateMethods[i]];\n            }\n          }\n        } else {\n          result = {};\n          for (i in _extensions) {\n            result[i] = extendDeep({}, _base.ext(i));\n          }\n        }\n        return result;\n      };\n\n      /**\r\n       * Adds a extension to this instance.\r\n       * @param extName The name of the extension which shall be added.\r\n       * @param extensionOptions The extension options which shall be used.\r\n       * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n       */\n      _base.addExt = function (extName, extensionOptions) {\n        var registeredExtensionObj = _plugin.extension(extName);\n        var instance;\n        var instanceAdded;\n        var instanceContract;\n        var contractResult;\n        var contractFulfilled = true;\n        if (registeredExtensionObj) {\n          if (!_extensions[LEXICON.hOP](extName)) {\n            instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n            if (instance) {\n              instanceContract = instance.contract;\n              if (type(instanceContract) == TYPES.f) {\n                contractResult = instanceContract(window);\n                contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n              }\n              if (contractFulfilled) {\n                _extensions[extName] = instance;\n                instanceAdded = instance.added;\n                if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                return _base.ext(extName);\n              }\n            }\n          } else return _base.ext(extName);\n        } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n      };\n\n      /**\r\n       * Removes a extension from this instance.\r\n       * @param extName The name of the extension which shall be removed.\r\n       * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n       */\n      _base.removeExt = function (extName) {\n        var instance = _extensions[extName];\n        var instanceRemoved;\n        if (instance) {\n          delete _extensions[extName];\n          instanceRemoved = instance.removed;\n          if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n          return true;\n        }\n        return false;\n      };\n\n      /**\r\n       * Constructs the plugin.\r\n       * @param targetElement The element to which the plugin shall be applied.\r\n       * @param options The initial options of the plugin.\r\n       * @param extensions The extension(s) which shall be added right after the initialization.\r\n       * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n       */\n      function construct(targetElement, options, extensions) {\n        _defaultOptions = globals.defaultOptions;\n        _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n        _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n        _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n        _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\n\n        //parse & set options but don't update\n        setOptions(extendDeep({}, _defaultOptions, options));\n        _cssCalc = globals.cssCalc;\n        _msieVersion = globals.msie;\n        _autoUpdateRecommended = globals.autoUpdateRecommended;\n        _supportTransition = globals.supportTransition;\n        _supportTransform = globals.supportTransform;\n        _supportPassiveEvents = globals.supportPassiveEvents;\n        _supportResizeObserver = globals.supportResizeObserver;\n        _supportMutationObserver = globals.supportMutationObserver;\n        _restrictedMeasuring = globals.restrictedMeasuring;\n        _documentElement = FRAMEWORK(targetElement.ownerDocument);\n        _documentElementNative = _documentElement[0];\n        _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n        _windowElementNative = _windowElement[0];\n        _htmlElement = findFirst(_documentElement, 'html');\n        _bodyElement = findFirst(_htmlElement, 'body');\n        _targetElement = FRAMEWORK(targetElement);\n        _targetElementNative = _targetElement[0];\n        _isTextarea = _targetElement.is('textarea');\n        _isBody = _targetElement.is('body');\n        _documentMixed = _documentElementNative !== document;\n\n        /* On a div Element The if checks only whether:\r\n         * - the targetElement has the class \"os-host\"\r\n         * - the targetElement has a a child with the class \"os-padding\"\r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-host\" element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding\">\r\n         *          <div class=\"os-viewport\">\r\n         *              <div class=\"os-content\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         *\r\n         * =====================================================================================\r\n         * \r\n         * On a Textarea Element The if checks only whether:\r\n         * - the targetElement has the class \"os-textarea\" \r\n         * - the targetElement is inside a element with the class \"os-content\" \r\n         * \r\n         * If that's the case, its assumed the DOM has already the following structure:\r\n         * (The \".os-textarea\" (textarea) element is the targetElement)\r\n         *\r\n         *  <div class=\"os-host-textarea\">\r\n         *      <div class=\"os-resize-observer-host\"></div>\r\n         *      <div class=\"os-padding os-text-inherit\">\r\n         *          <div class=\"os-viewport os-text-inherit\">\r\n         *              <div class=\"os-content os-text-inherit\">\r\n         *                  <div class=\"os-textarea-cover\"></div>\r\n         *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n         *              </div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n         *          <div class=\"os-scrollbar-track\">\r\n         *              <div class=\"os-scrollbar-handle\"></div>\r\n         *          </div>\r\n         *      </div>\r\n         *      <div class=\"os-scrollbar-corner\"></div>\r\n         *  </div>\r\n         */\n        _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n        var initBodyScroll;\n        var _bodyMouseTouchDownListener;\n\n        //check if the plugin hasn't to be initialized\n        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n          _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\n          dispatchCallback('onInitializationWithdrawn');\n          if (_domExists) {\n            setupStructureDOM(true);\n            setupScrollbarsDOM(true);\n            setupScrollbarCornerDOM(true);\n          }\n          _initialized = false;\n          _destroyed = true;\n          _sleeping = true;\n          return _base;\n        }\n        if (_isBody) {\n          initBodyScroll = {};\n          initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n          initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n          _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n            _viewportElement.removeAttr(LEXICON.ti);\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n          };\n        }\n\n        //build OverlayScrollbars DOM\n        setupStructureDOM();\n        setupScrollbarsDOM();\n        setupScrollbarCornerDOM();\n\n        //create OverlayScrollbars events\n        setupStructureEvents();\n        setupScrollbarEvents(true);\n        setupScrollbarEvents(false);\n        setupScrollbarCornerEvents();\n\n        //create mutation observers\n        createMutationObservers();\n\n        //build resize observer for the host element\n        setupResizeObserver(_sizeObserverElement, hostOnResized);\n        if (_isBody) {\n          //apply the body scroll to handle it right in the update method\n          _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\n\n          //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n          if (document.activeElement == targetElement && _viewportElementNative.focus) {\n            //set a tabindex to make the viewportElement focusable\n            _viewportElement.attr(LEXICON.ti, '-1');\n            _viewportElementNative.focus();\n\n            /* the tabindex has to be removed due to;\r\n             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n             */\n            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n          }\n        }\n\n        //update for the first time & initialize cache\n        _base.update(_strAuto);\n\n        //the plugin is initialized now!\n        _initialized = true;\n        dispatchCallback('onInitialized');\n\n        //call all callbacks which would fire before the initialized was complete\n        each(_callbacksInitQeueue, function (index, value) {\n          dispatchCallback(value.n, value.a);\n        });\n        _callbacksInitQeueue = [];\n\n        //add extensions\n        if (type(extensions) == TYPES.s) extensions = [extensions];\n        if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n          _base.addExt(value);\n        });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n          _base.addExt(key, value);\n        });\n\n        //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n        setTimeout(function () {\n          if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n        }, 333);\n        return _base;\n      }\n      if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n        INSTANCES(pluginTargetElement, _base);\n      }\n      return _base;\n    }\n\n    /**\r\n     * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n     * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n     * @param options The custom options with which the plugin shall be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*}\r\n     */\n    _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n      if (arguments[LEXICON.l] === 0) return this;\n      var arr = [];\n      var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n      var inst;\n      var result;\n\n      //pluginTargetElements is null or undefined\n      if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n\n      /*\r\n         pluginTargetElements will be converted to:\r\n         1. A jQueryElement Array\r\n         2. A HTMLElement Array\r\n         3. A Array with a single HTML Element\r\n         so pluginTargetElements is always a array.\r\n      */\n      pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n      initOverlayScrollbarsStatics();\n      if (pluginTargetElements[LEXICON.l] > 0) {\n        if (optsIsPlainObj) {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = v;\n            if (inst !== undefined) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n          });\n        } else {\n          FRAMEWORK.each(pluginTargetElements, function (i, v) {\n            inst = INSTANCES(v);\n            if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined) arr.push(inst);\n          });\n        }\n        result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n      }\n      return result;\n    };\n\n    /**\r\n     * Returns a object which contains global information about the plugin and each instance of it.\r\n     * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n     */\n    _plugin.globals = function () {\n      initOverlayScrollbarsStatics();\n      var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n      delete globals['msie'];\n      return globals;\n    };\n\n    /**\r\n     * Gets or Sets the default options for each new plugin initialization.\r\n     * @param newDefaultOptions The object with which the default options shall be extended.\r\n     */\n    _plugin.defaultOptions = function (newDefaultOptions) {\n      initOverlayScrollbarsStatics();\n      var currDefaultOptions = _pluginsGlobals.defaultOptions;\n      if (newDefaultOptions === undefined) return FRAMEWORK.extend(true, {}, currDefaultOptions);\n\n      //set the new default options\n      _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n    };\n\n    /**\r\n     * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n     * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n     * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n     */\n    _plugin.valid = function (osInstance) {\n      return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n    };\n\n    /**\r\n     * Registers, Unregisters or returns a extension.\r\n     * Register: Pass the name and the extension. (defaultOptions is optional)\r\n     * Unregister: Pass the name and anything except a function as extension parameter.\r\n     * Get extension: Pass the name of the extension which shall be got.\r\n     * Get all extensions: Pass no arguments.\r\n     * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n     * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n     * @param defaultOptions The default options which shall be used for the registered extension.\r\n     */\n    _plugin.extension = function (extensionName, extension, defaultOptions) {\n      var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n      var argLen = arguments[LEXICON.l];\n      var i = 0;\n      if (argLen < 1 || !extNameTypeString) {\n        //return a copy of all extension objects\n        return FRAMEWORK.extend(true, {\n          length: _pluginsExtensions[LEXICON.l]\n        }, _pluginsExtensions);\n      } else if (extNameTypeString) {\n        if (COMPATIBILITY.type(extension) == TYPES.f) {\n          //register extension\n          _pluginsExtensions.push({\n            name: extensionName,\n            extensionFactory: extension,\n            defaultOptions: defaultOptions\n          });\n        } else {\n          for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n            if (_pluginsExtensions[i].name === extensionName) {\n              if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n              else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n            }\n          }\n        }\n      }\n    };\n\n    return _plugin;\n  }();\n  if (JQUERY && JQUERY.fn) {\n    /**\r\n     * The jQuery initialization interface.\r\n     * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n     * @param extensions The extension(s) which shall be added right after initialization.\r\n     * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n     */\n    JQUERY.fn.overlayScrollbars = function (options, extensions) {\n      var _elements = this;\n      if (JQUERY.isPlainObject(options)) {\n        JQUERY.each(_elements, function () {\n          PLUGIN(this, options, extensions);\n        });\n        return _elements;\n      } else return PLUGIN(_elements, options);\n    };\n  }\n  return PLUGIN;\n});","map":{"version":3,"names":["global","factory","define","amd","document","undefined","module","exports","window","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","hasOptions","from","to","start","progress","step","specialEasing","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_restrictedMeasuring","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","_hostSizeChanged","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","dump","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","takeRecords","option","changedOps","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","valid","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements"],"sources":["/home/user/Documents/personal/satgur/node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"sourcesContent":["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n\t\t\t\t\tif (!_destroyed) {\r\n\t\t\t\t\t\tvar target = event.target;\r\n\t\t\t\t\t\tvar elm = FRAMEWORK(event.target);\r\n\t\t\t\t\t\tvar index = FRAMEWORK.inArray(target, _updateOnLoadElms);\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\t_updateOnLoadElms.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n\t\t\t\t\t\t\tif (elm.is(updateOnLoadSelector)) {\r\n\t\t\t\t\t\t\t\tupdate({ _contentSizeChanged: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _initialized = false;\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,WAAUA,MAAM,EAAEC,OAAO,EAAE;EACxB,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAC1CD,MAAM,CAAC,YAAY;IAAE,OAAOD,OAAO,CAACD,MAAM,EAAEA,MAAM,CAACI,QAAQ,EAAEC,SAAS,CAAC;EAAE,CAAC,CAAC,CAAC,KAC3E,IAAI,OAAOC,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,CAACC,OAAO,KAAK,QAAQ,EACrED,MAAM,CAACC,OAAO,GAAGN,OAAO,CAACD,MAAM,EAAEA,MAAM,CAACI,QAAQ,EAAEC,SAAS,CAAC,CAAC,KAE7DJ,OAAO,CAACD,MAAM,EAAEA,MAAM,CAACI,QAAQ,EAAEC,SAAS,CAAC;AACnD,CAAC,EAAC,OAAOG,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAG,IAAI,EAC3C,UAAUA,MAAM,EAAEJ,QAAQ,EAAEC,SAAS,EAAE;EACnC,YAAY;;EACZ,IAAII,UAAU,GAAG,mBAAmB;EACpC,IAAIC,KAAK,GAAG;IACRC,CAAC,EAAE,QAAQ;IACXC,CAAC,EAAE,UAAU;IACbC,CAAC,EAAE,OAAO;IACVC,CAAC,EAAE,QAAQ;IACXC,CAAC,EAAE,SAAS;IACZC,CAAC,EAAE,QAAQ;IACXC,CAAC,EAAE,WAAW;IACdC,CAAC,EAAE;IACH;IACA;IACA;IACA;EACJ,CAAC;;EACD,IAAIC,OAAO,GAAG;IACVC,CAAC,EAAE,OAAO;IACVN,CAAC,EAAE,OAAO;IACVO,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,QAAQ;IACXC,CAAC,EAAE,WAAW;IACdC,EAAE,EAAE,UAAU;IACdC,EAAE,EAAE,cAAc;IAClBC,EAAE,EAAE,cAAc;IAClBC,EAAE,EAAE,cAAc;IAClBC,EAAE,EAAE,aAAa;IACjBC,EAAE,EAAE,aAAa;IACjBC,EAAE,EAAE,aAAa;IACjBC,GAAG,EAAE,gBAAgB;IACrBC,GAAG,EAAE;EACT,CAAC;EACD,IAAIC,OAAO,GAAI,YAAY;IACvB;IACA,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAIC,WAAW,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;IACtD,IAAIC,UAAU,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC;IAC7C,SAASC,kBAAkB,CAACC,GAAG,EAAE;MAC7B,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;IACrD;IAEA,OAAO;MACHC,YAAY,EAAEP,WAAW;MACzBQ,WAAW,EAAEP,UAAU;MACvBQ,YAAY,EAAE,sBAAUC,IAAI,EAAE;QAC1B,IAAIC,MAAM,GAAGZ,QAAQ,CAACW,IAAI,CAAC;QAE3B,IAAIX,QAAQ,CAAChB,OAAO,CAACY,GAAG,CAAC,CAACe,IAAI,CAAC,EAC3B,OAAOC,MAAM;QAEjB,IAAIC,cAAc,GAAGV,kBAAkB,CAACQ,IAAI,CAAC;QAC7C,IAAIG,QAAQ,GAAG7C,QAAQ,CAAC8C,aAAa,CAAC,KAAK,CAAC,CAAC/B,OAAO,CAACL,CAAC,CAAC;QACvD,IAAIqC,mBAAmB;QACvB,IAAI9B,CAAC,GAAG,CAAC;QACT,IAAI+B,CAAC;QACL,IAAIC,uBAAuB;QAE3B,OAAOhC,CAAC,GAAGe,WAAW,CAACkB,MAAM,EAAEjC,CAAC,EAAE,EAAE;UAChCgC,uBAAuB,GAAGjB,WAAW,CAACf,CAAC,CAAC,CAACkC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;UAC1DJ,mBAAmB,GAAG,CAClBL,IAAI;UAAE;UACNV,WAAW,CAACf,CAAC,CAAC,GAAGyB,IAAI;UAAE;UACvBO,uBAAuB,GAAGL,cAAc;UAAE;UAC1CV,kBAAkB,CAACe,uBAAuB,CAAC,GAAGL,cAAc,CAAC;UAAA,CAChE;;UACD,KAAKI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,mBAAmB,CAAChC,OAAO,CAACG,CAAC,CAAC,EAAE8B,CAAC,EAAE,EAAE;YACjD,IAAIH,QAAQ,CAACE,mBAAmB,CAACC,CAAC,CAAC,CAAC,KAAK/C,SAAS,EAAE;cAChD0C,MAAM,GAAGI,mBAAmB,CAACC,CAAC,CAAC;cAC/B;YACJ;UACJ;QACJ;QAEAjB,QAAQ,CAACW,IAAI,CAAC,GAAGC,MAAM;QACvB,OAAOA,MAAM;MACjB,CAAC;MACDS,iBAAiB,EAAE,2BAAUC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAE;QACnD,IAAIb,IAAI,GAAGW,QAAQ,GAAG,GAAG,GAAGC,MAAM;QAClC,IAAIX,MAAM,GAAGZ,QAAQ,CAACW,IAAI,CAAC;QAE3B,IAAIX,QAAQ,CAAChB,OAAO,CAACY,GAAG,CAAC,CAACe,IAAI,CAAC,EAC3B,OAAOC,MAAM;QAEjB,IAAIa,UAAU,GAAGxD,QAAQ,CAAC8C,aAAa,CAAC,KAAK,CAAC,CAAC/B,OAAO,CAACL,CAAC,CAAC;QACzD,IAAI+C,aAAa,GAAGH,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;QACrC,IAAIC,cAAc,GAAGJ,MAAM,IAAI,EAAE;QACjC,IAAItC,CAAC,GAAG,CAAC;QACT,IAAI+B,CAAC,GAAG,CAAC,CAAC;QACV,IAAIY,IAAI;QAER,OAAO3C,CAAC,GAAGwC,aAAa,CAAC1C,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UACtC,OAAO+B,CAAC,GAAGnB,OAAO,CAACU,YAAY,CAACxB,OAAO,CAACG,CAAC,CAAC,EAAE8B,CAAC,EAAE,EAAE;YAC7CY,IAAI,GAAGZ,CAAC,GAAG,CAAC,GAAGS,aAAa,CAACxC,CAAC,CAAC,GAAGY,OAAO,CAACU,YAAY,CAACS,CAAC,CAAC,GAAGS,aAAa,CAACxC,CAAC,CAAC;YAC5EuC,UAAU,CAACK,OAAO,GAAGR,QAAQ,GAAG,GAAG,GAAGO,IAAI,GAAGD,cAAc;YAC3D,IAAIH,UAAU,CAACzC,OAAO,CAACG,CAAC,CAAC,EAAE;cACvByB,MAAM,GAAGiB,IAAI;cACb;YACJ;UACJ;QACJ;QAEA7B,QAAQ,CAACW,IAAI,CAAC,GAAGC,MAAM;QACvB,OAAOA,MAAM;MACjB,CAAC;MACDmB,MAAM,EAAE,gBAAUpB,IAAI,EAAEqB,WAAW,EAAEC,QAAQ,EAAE;QAC3C,IAAI/C,CAAC,GAAG,CAAC;QACT,IAAI0B,MAAM,GAAGb,OAAO,CAACY,IAAI,CAAC;QAE1B,IAAI,CAACZ,OAAO,CAACf,OAAO,CAACY,GAAG,CAAC,CAACe,IAAI,CAAC,EAAE;UAC7BC,MAAM,GAAGvC,MAAM,CAACsC,IAAI,CAAC;UACrB,OAAOzB,CAAC,GAAGgB,UAAU,CAAClB,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;YACjC0B,MAAM,GAAGA,MAAM,IAAIvC,MAAM,CAAC,CAAC2D,WAAW,GAAG9B,UAAU,CAAChB,CAAC,CAAC,GAAGgB,UAAU,CAAChB,CAAC,CAAC,CAACgD,WAAW,EAAE,IAAI/B,kBAAkB,CAACQ,IAAI,CAAC,CAAC;UAAC;UACtHZ,OAAO,CAACY,IAAI,CAAC,GAAGC,MAAM;QAC1B;QACA,OAAOA,MAAM,IAAIqB,QAAQ;MAC7B;IACJ,CAAC;EACL,CAAC,EAAG;EACJ,IAAIE,aAAa,GAAI,YAAY;IAC7B,SAASC,UAAU,CAACC,CAAC,EAAE;MACnB,OAAOA,CAAC,GAAGhE,MAAM,CAACiE,UAAU,IAAIrE,QAAQ,CAACsE,eAAe,CAACvD,OAAO,CAACU,EAAE,CAAC,IAAIzB,QAAQ,CAACuE,IAAI,CAACxD,OAAO,CAACU,EAAE,CAAC,GAAGrB,MAAM,CAACoE,WAAW,IAAIxE,QAAQ,CAACsE,eAAe,CAACvD,OAAO,CAACO,EAAE,CAAC,IAAItB,QAAQ,CAACuE,IAAI,CAACxD,OAAO,CAACO,EAAE,CAAC;IAC/L;IACA,SAASmD,IAAI,CAACC,IAAI,EAAEC,OAAO,EAAE;MACzB,IAAI,OAAOD,IAAI,IAAIpE,KAAK,CAACE,CAAC,EAAE;QACxB,MAAM,sBAAsB;QAC5B;QACA;QACA;MACJ;;MACA,IAAIoE,KAAK,GAAG7D,OAAO,CAACI,CAAC;MACrB,IAAI0D,KAAK,GAAGC,KAAK,CAACF,KAAK,CAAC,CAACtC,KAAK,CAACyC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MACjD,IAAIC,IAAI,GAAG,SAAPA,IAAI,GAAe,CAAE,CAAC;MAC1B,IAAIC,MAAM,GAAG,SAATA,MAAM,GAAe;QAAE,OAAOR,IAAI,CAACS,KAAK,CAAC,IAAI,YAAYF,IAAI,GAAG,IAAI,GAAGN,OAAO,EAAEE,KAAK,CAACO,MAAM,CAACN,KAAK,CAACF,KAAK,CAAC,CAACtC,KAAK,CAACyC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MAAE,CAAC;MAExI,IAAIN,IAAI,CAACE,KAAK,CAAC,EACXK,IAAI,CAACL,KAAK,CAAC,GAAGF,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MAC/BM,MAAM,CAACN,KAAK,CAAC,GAAG,IAAIK,IAAI,EAAE;MAE1B,OAAOC,MAAM;IACjB;IAEA,OAAO;MACH;AAChB;AACA;AACA;MACgBG,EAAE,EAAEZ,IAAI,CAACN,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC;MAE7B;AAChB;AACA;AACA;MACgBmB,EAAE,EAAEb,IAAI,CAACN,UAAU,EAAE,CAAC,CAAC;MAEvB;AAChB;AACA;AACA;MACgBoB,EAAE,EAAEd,IAAI,CAAC5C,OAAO,CAACiC,MAAM,EAAE,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC;MAErD;AAChB;AACA;AACA;MACgB0B,EAAE,EAAEf,IAAI,CAAC5C,OAAO,CAACiC,MAAM,EAAE,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC;MAEnD;AAChB;AACA;AACA;MACgB2B,GAAG,EAAEhB,IAAI,CAAC5C,OAAO,CAACiC,MAAM,EAAE,CAAC,EAAE,uBAAuB,EAAE,KAAK,EAAE,UAAUY,IAAI,EAAE;QAAE,OAAOtE,MAAM,CAACsF,UAAU,CAAChB,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC;MAAE,CAAC,CAAC;MAE5H;AAChB;AACA;AACA;MACgBiB,GAAG,EAAElB,IAAI,CAAC5C,OAAO,CAACiC,MAAM,EAAE,CAAC,EAAE,sBAAsB,EAAE,KAAK,EAAE,UAAU8B,EAAE,EAAE;QAAE,OAAOxF,MAAM,CAACyF,YAAY,CAACD,EAAE,CAAC;MAAE,CAAC,CAAC;MAE9G;AAChB;AACA;AACA;MACgBE,GAAG,EAAE,eAAY;QACb,OAAOC,IAAI,CAACD,GAAG,IAAIC,IAAI,CAACD,GAAG,EAAE,IAAI,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MACzD,CAAC;MAED;AAChB;AACA;AACA;MACgBC,IAAI,EAAE,cAAUC,KAAK,EAAE;QACnB,IAAIA,KAAK,CAACC,eAAe,EACrBD,KAAK,CAACC,eAAe,EAAE,CAAC,KAExBD,KAAK,CAACE,YAAY,GAAG,IAAI;MACjC,CAAC;MAED;AAChB;AACA;AACA;MACgBC,IAAI,EAAE,cAAUH,KAAK,EAAE;QACnB,IAAIA,KAAK,CAACI,cAAc,IAAIJ,KAAK,CAACK,UAAU,EACxCL,KAAK,CAACI,cAAc,EAAE,CAAC,KAEvBJ,KAAK,CAACM,WAAW,GAAG,KAAK;MACjC,CAAC;MAED;AAChB;AACA;AACA;AACA;MACgBC,IAAI,EAAE,cAAUP,KAAK,EAAE;QACnBA,KAAK,GAAGA,KAAK,CAACQ,aAAa,IAAIR,KAAK;QAEpC,IAAIS,OAAO,GAAG,MAAM;QACpB,IAAIC,SAAS,GAAG,QAAQ;QACxB,IAAIC,IAAI,GAAG,GAAG;QACd,IAAIC,IAAI,GAAG,GAAG;QACd,IAAIC,MAAM,GAAGb,KAAK,CAACa,MAAM,IAAIb,KAAK,CAACc,UAAU,IAAIhH,QAAQ;QACzD,IAAIiH,QAAQ,GAAGF,MAAM,CAACG,aAAa,IAAIlH,QAAQ;QAC/C,IAAImH,GAAG,GAAGF,QAAQ,CAAC3C,eAAe;QAClC,IAAIC,IAAI,GAAG0C,QAAQ,CAAC1C,IAAI;;QAExB;QACA,IAAI2B,KAAK,CAACkB,OAAO,KAAKnH,SAAS,EAAE;UAC7B,IAAIoH,KAAK,GAAGnB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC;UAC5B,OAAO;YACHhD,CAAC,EAAEiD,KAAK,CAACV,OAAO,GAAGE,IAAI,CAAC;YACxBS,CAAC,EAAED,KAAK,CAACV,OAAO,GAAGG,IAAI;UAC3B,CAAC;QACL;;QAEA;QACA,IAAI,CAACZ,KAAK,CAACS,OAAO,GAAGE,IAAI,CAAC,IAAIX,KAAK,CAACU,SAAS,GAAGC,IAAI,CAAC,IAAIX,KAAK,CAACU,SAAS,GAAGC,IAAI,CAAC,IAAI,IAAI,EAAE;UAEtF,OAAO;YACHzC,CAAC,EAAE8B,KAAK,CAACU,SAAS,GAAGC,IAAI,CAAC,IACrBM,GAAG,IAAIA,GAAG,CAACI,UAAU,IAAIhD,IAAI,IAAIA,IAAI,CAACgD,UAAU,IAAI,CAAC,CAAC,IACtDJ,GAAG,IAAIA,GAAG,CAACK,UAAU,IAAIjD,IAAI,IAAIA,IAAI,CAACiD,UAAU,IAAI,CAAC,CAAC;YAC3DF,CAAC,EAAEpB,KAAK,CAACU,SAAS,GAAGE,IAAI,CAAC,IACrBK,GAAG,IAAIA,GAAG,CAACM,SAAS,IAAIlD,IAAI,IAAIA,IAAI,CAACkD,SAAS,IAAI,CAAC,CAAC,IACpDN,GAAG,IAAIA,GAAG,CAACO,SAAS,IAAInD,IAAI,IAAIA,IAAI,CAACmD,SAAS,IAAI,CAAC;UAC5D,CAAC;QACL;QACA,OAAO;UACHtD,CAAC,EAAE8B,KAAK,CAACS,OAAO,GAAGE,IAAI,CAAC;UACxBS,CAAC,EAAEpB,KAAK,CAACS,OAAO,GAAGG,IAAI;QAC3B,CAAC;MACL,CAAC;MAED;AAChB;AACA;AACA;AACA;MACgBa,IAAI,EAAE,cAAUzB,KAAK,EAAE;QACnB,IAAI0B,MAAM,GAAG1B,KAAK,CAAC0B,MAAM;QACzB,IAAI,CAAC1B,KAAK,CAAC2B,KAAK,IAAID,MAAM,KAAK3H,SAAS,EACpC,OAAQ2H,MAAM,GAAG,CAAC,GAAG,CAAC,GAAIA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAIA,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAG,CAAE,KAElE,OAAO1B,KAAK,CAAC2B,KAAK;MAC1B,CAAC;MAED;AAChB;AACA;AACA;AACA;AACA;MACgBC,GAAG,EAAE,aAAUC,IAAI,EAAEC,GAAG,EAAE;QACtB,KAAK,IAAI/G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+G,GAAG,CAACjH,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;UACnC;UACA,IAAI;YACA,IAAI+G,GAAG,CAAC/G,CAAC,CAAC,KAAK8G,IAAI,EACf,OAAO9G,CAAC;UAChB,CAAC,CACD,OAAOgH,CAAC,EAAE,CAAE;QAAC;QACjB,OAAO,CAAC,CAAC;MACb,CAAC;MAED;AAChB;AACA;AACA;AACA;MACgBC,GAAG,EAAE,aAAUF,GAAG,EAAE;QAChB,IAAIG,GAAG,GAAGrD,KAAK,CAACsD,OAAO;QACvB,OAAOD,GAAG,GAAGA,GAAG,CAACH,GAAG,CAAC,GAAG,IAAI,CAACK,IAAI,CAACL,GAAG,CAAC,IAAI1H,KAAK,CAACG,CAAC;MACrD,CAAC;MAED;AAChB;AACA;AACA;AACA;MACgB4H,IAAI,EAAE,cAAUC,GAAG,EAAE;QACjB,IAAIA,GAAG,KAAKrI,SAAS,EACjB,OAAOqI,GAAG,GAAG,EAAE;QACnB,IAAIA,GAAG,KAAK,IAAI,EACZ,OAAOA,GAAG,GAAG,EAAE;QACnB,OAAOC,MAAM,CAACxH,OAAO,CAACI,CAAC,CAAC,CAACqH,QAAQ,CAACzD,IAAI,CAACuD,GAAG,CAAC,CAACnF,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAACc,WAAW,EAAE;MAChG,CAAC;MAGDQ,IAAI,EAAEA;;MAEN;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEY,CAAC;EACL,CAAC,EAAG;;EAGJ,IAAIgE,IAAI,GAAGC,IAAI;EACf,IAAIC,MAAM,GAAGvI,MAAM,CAACwI,MAAM;EAC1B,IAAIC,MAAM,GAAI,YAAY;IACtB,IAAIC,YAAY,GAAG;MACf3H,CAAC,EAAEsH,IAAI,CAACM,EAAE;MACV/H,CAAC,EAAEyH,IAAI,CAACO,GAAG;MACXtI,CAAC,EAAE+H,IAAI,CAACQ,GAAG;MACXC,CAAC,EAAET,IAAI,CAACU,GAAG;MACXC,CAAC,EAAEX,IAAI,CAACY,IAAI;MACZzI,CAAC,EAAE6H,IAAI,CAACa,IAAI;MACZ7I,CAAC,EAAEgI,IAAI,CAACc,GAAG;MACXhJ,CAAC,EAAE;IACP,CAAC;;IAED;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;IAGY,OAAO;MACHiJ,KAAK,EAAE,eAAUpF,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAC5B,OAAO,GAAG,GAAGX,YAAY,CAAC9H,CAAC,CAACoD,CAAC,GAAG0E,YAAY,CAAC3H,CAAC,CAAC,GAAG,CAAC;MACvD,CAAC;MACDuI,MAAM,EAAE,gBAAUtF,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAC7B,OAAOrF,CAAC;MACZ,CAAC;MACDuF,UAAU,EAAE,oBAAUvF,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACjC,OAAOzI,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,GAAGL,CAAC,GAAGzI,CAAC;MAC/B,CAAC;MACDiJ,WAAW,EAAE,qBAAUxF,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAO,CAACzI,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACtC,CAAC;MACDkJ,aAAa,EAAE,uBAAUzF,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,OAAQ,CAACL,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAG,CAAC,GAAGoI,CAAC,GAAGA,CAAC,GAAGzI,CAAC,GAAG,CAACK,CAAC,GAAG,CAAC,IAAK,EAAEoI,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACtF,CAAC;MACDmJ,WAAW,EAAE,qBAAU1F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAOzI,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,GAAGL,CAAC,GAAGA,CAAC,GAAGzI,CAAC;MACnC,CAAC;MACDoJ,YAAY,EAAE,sBAAU3F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACnC,OAAOzI,CAAC,IAAI,CAACoI,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAIL,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MAChD,CAAC;MACDqJ,cAAc,EAAE,wBAAU5F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACrC,OAAQ,CAACL,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAG,CAAC,GAAGoI,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGzI,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAI,CAACoI,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MAC1F,CAAC;MACDsJ,WAAW,EAAE,qBAAU7F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAOzI,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,GAAGL,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGzI,CAAC;MACvC,CAAC;MACDuJ,YAAY,EAAE,sBAAU9F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACnC,OAAO,CAACzI,CAAC,IAAI,CAACoI,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAIL,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACrD,CAAC;MACDwJ,cAAc,EAAE,wBAAU/F,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACrC,OAAQ,CAACL,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAG,CAAC,GAAGoI,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGzI,CAAC,GAAG,CAACK,CAAC,GAAG,CAAC,IAAI,CAACoI,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACnG,CAAC;MACDyJ,WAAW,EAAE,qBAAUhG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAOzI,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,GAAGL,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGzI,CAAC;MAC3C,CAAC;MACD0J,YAAY,EAAE,sBAAUjG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACnC,OAAOzI,CAAC,IAAI,CAACoI,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAIL,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACxD,CAAC;MACD2J,cAAc,EAAE,wBAAUlG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACrC,OAAQ,CAACL,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAG,CAAC,GAAGoI,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGzI,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAI,CAACoI,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MAC1G,CAAC;MACD4J,UAAU,EAAE,oBAAUnG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACjC,OAAO,CAACzI,CAAC,GAAG8H,YAAY,CAAC9H,CAAC,CAACoI,CAAC,GAAGK,CAAC,IAAIX,YAAY,CAAC3H,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGH,CAAC,GAAGL,CAAC;MACpE,CAAC;MACD6J,WAAW,EAAE,qBAAUpG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAOzI,CAAC,GAAG8H,YAAY,CAACpI,CAAC,CAAC0I,CAAC,GAAGK,CAAC,IAAIX,YAAY,CAAC3H,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGR,CAAC;MAC/D,CAAC;MACD8J,aAAa,EAAE,uBAAUrG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,OAAO,CAACzI,CAAC,GAAG,CAAC,IAAI8H,YAAY,CAAC9H,CAAC,CAAC8H,YAAY,CAAC3H,CAAC,GAAGiI,CAAC,GAAGK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG9I,CAAC;MACpE,CAAC;MACD+J,UAAU,EAAE,oBAAUtG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACjC,OAAQL,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAGK,CAAC,GAAG8H,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAIE,CAAC,GAAGK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG9I,CAAC;MACrE,CAAC;MACDgK,WAAW,EAAE,qBAAUvG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAQL,CAAC,IAAIK,CAAC,GAAI9I,CAAC,GAAGK,CAAC,GAAGA,CAAC,IAAI,CAAC8H,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGE,CAAC,GAAGK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG9I,CAAC;MAC3E,CAAC;MACDiK,aAAa,EAAE,uBAAUxG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,IAAIL,CAAC,IAAI,CAAC,EAAE,OAAOzI,CAAC;QACpB,IAAIyI,CAAC,IAAIK,CAAC,EAAE,OAAO9I,CAAC,GAAGK,CAAC;QACxB,IAAI,CAACoI,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAOzI,CAAC,GAAG,CAAC,GAAG8H,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAIE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGzI,CAAC;QACxE,OAAOK,CAAC,GAAG,CAAC,IAAI,CAAC8H,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAEE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MAC1D,CAAC;MACDkK,UAAU,EAAE,oBAAUzG,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACjC,OAAO,CAACzI,CAAC,IAAI8H,YAAY,CAACM,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,IAAIK,CAAC,IAAIL,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MAC1D,CAAC;MACDmK,WAAW,EAAE,qBAAU1G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QAClC,OAAOzI,CAAC,GAAG8H,YAAY,CAACM,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAIL,CAAC,CAAC,GAAGzI,CAAC;MAC1D,CAAC;MACDoK,aAAa,EAAE,uBAAU3G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,OAAQ,CAACL,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAI,CAACzI,CAAC,GAAG,CAAC,IAAI8H,YAAY,CAACM,CAAC,CAAC,CAAC,GAAGA,CAAC,GAAGA,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAI8H,YAAY,CAACM,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGzI,CAAC;MACjI,CAAC;MACDqK,aAAa,EAAE,uBAAU5G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,IAAI/I,CAAC,GAAGoI,YAAY,CAACvI,CAAC;QAAE,IAAIY,CAAC,GAAG,CAAC;QAAE,IAAIV,CAAC,GAAGO,CAAC;QAC5C,IAAIoI,CAAC,IAAI,CAAC,EAAE,OAAOzI,CAAC;QAAE,IAAI,CAACyI,CAAC,IAAIK,CAAC,KAAK,CAAC,EAAE,OAAO9I,CAAC,GAAGK,CAAC;QAAE,IAAI,CAACG,CAAC,EAAEA,CAAC,GAAGsI,CAAC,GAAG,EAAE;QACzE,IAAIhJ,CAAC,GAAGqI,YAAY,CAACrI,CAAC,CAACO,CAAC,CAAC,EAAE;UAAEP,CAAC,GAAGO,CAAC;UAAEN,CAAC,GAAGS,CAAC,GAAG,CAAC;QAAE,CAAC,MAC3CT,CAAC,GAAGS,CAAC,IAAI,CAAC,GAAG2H,YAAY,CAAC3H,CAAC,CAAC,GAAG2H,YAAY,CAAClI,CAAC,CAACI,CAAC,GAAGP,CAAC,CAAC;QACzD,OAAO,EAAEA,CAAC,GAAGqI,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAIE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAGN,YAAY,CAACpI,CAAC,CAAC,CAAC0I,CAAC,GAAGK,CAAC,GAAG/I,CAAC,KAAK,CAAC,GAAGoI,YAAY,CAAC3H,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,GAAGR,CAAC;MAC/G,CAAC;MACDsK,cAAc,EAAE,wBAAU7G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACrC,IAAI/I,CAAC,GAAGoI,YAAY,CAACvI,CAAC;QAAE,IAAIY,CAAC,GAAG,CAAC;QAAE,IAAIV,CAAC,GAAGO,CAAC;QAC5C,IAAIoI,CAAC,IAAI,CAAC,EAAE,OAAOzI,CAAC;QACpB,IAAI,CAACyI,CAAC,IAAIK,CAAC,KAAK,CAAC,EAAE,OAAO9I,CAAC,GAAGK,CAAC;QAC/B,IAAI,CAACG,CAAC,EAAEA,CAAC,GAAGsI,CAAC,GAAG,EAAE;QAClB,IAAIhJ,CAAC,GAAGqI,YAAY,CAACrI,CAAC,CAACO,CAAC,CAAC,EAAE;UAAEP,CAAC,GAAGO,CAAC;UAAEN,CAAC,GAAGS,CAAC,GAAG,CAAC;QAAE,CAAC,MAC3CT,CAAC,GAAGS,CAAC,IAAI,CAAC,GAAG2H,YAAY,CAAC3H,CAAC,CAAC,GAAG2H,YAAY,CAAClI,CAAC,CAACI,CAAC,GAAGP,CAAC,CAAC;QACzD,OAAOA,CAAC,GAAGqI,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGE,CAAC,CAAC,GAAGN,YAAY,CAACpI,CAAC,CAAC,CAAC0I,CAAC,GAAGK,CAAC,GAAG/I,CAAC,KAAK,CAAC,GAAGoI,YAAY,CAAC3H,CAAC,CAAC,GAAGA,CAAC,CAAC,GAAGH,CAAC,GAAGL,CAAC;MAC1G,CAAC;MACDuK,gBAAgB,EAAE,0BAAU9G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACvC,IAAI/I,CAAC,GAAGoI,YAAY,CAACvI,CAAC;QAAE,IAAIY,CAAC,GAAG,CAAC;QAAE,IAAIV,CAAC,GAAGO,CAAC;QAC5C,IAAIoI,CAAC,IAAI,CAAC,EAAE,OAAOzI,CAAC;QACpB,IAAI,CAACyI,CAAC,IAAIK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO9I,CAAC,GAAGK,CAAC;QACnC,IAAI,CAACG,CAAC,EAAEA,CAAC,GAAGsI,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;QAC1B,IAAIhJ,CAAC,GAAGqI,YAAY,CAACrI,CAAC,CAACO,CAAC,CAAC,EAAE;UAAEP,CAAC,GAAGO,CAAC;UAAEN,CAAC,GAAGS,CAAC,GAAG,CAAC;QAAE,CAAC,MAC3CT,CAAC,GAAGS,CAAC,IAAI,CAAC,GAAG2H,YAAY,CAAC3H,CAAC,CAAC,GAAG2H,YAAY,CAAClI,CAAC,CAACI,CAAC,GAAGP,CAAC,CAAC;QACzD,IAAI2I,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI3I,CAAC,GAAGqI,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAIE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAGN,YAAY,CAACpI,CAAC,CAAC,CAAC0I,CAAC,GAAGK,CAAC,GAAG/I,CAAC,KAAK,CAAC,GAAGoI,YAAY,CAAC3H,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,GAAGR,CAAC;QAC3H,OAAOF,CAAC,GAAGqI,YAAY,CAACI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAGN,YAAY,CAACpI,CAAC,CAAC,CAAC0I,CAAC,GAAGK,CAAC,GAAG/I,CAAC,KAAK,CAAC,GAAGoI,YAAY,CAAC3H,CAAC,CAAC,GAAGA,CAAC,CAAC,GAAG,EAAE,GAAGH,CAAC,GAAGL,CAAC;MACtH,CAAC;MACDwK,UAAU,EAAE,oBAAU/G,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE/I,CAAC,EAAE;QACpCA,CAAC,GAAGA,CAAC,IAAIoI,YAAY,CAACvI,CAAC;QACvB,OAAOS,CAAC,IAAIoI,CAAC,IAAIK,CAAC,CAAC,GAAGL,CAAC,IAAI,CAAC1I,CAAC,GAAG,CAAC,IAAI0I,CAAC,GAAG1I,CAAC,CAAC,GAAGC,CAAC;MACnD,CAAC;MACDyK,WAAW,EAAE,qBAAUhH,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE/I,CAAC,EAAE;QACrCA,CAAC,GAAGA,CAAC,IAAIoI,YAAY,CAACvI,CAAC;QACvB,OAAOS,CAAC,IAAI,CAACoI,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAIL,CAAC,IAAI,CAAC1I,CAAC,GAAG,CAAC,IAAI0I,CAAC,GAAG1I,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGC,CAAC;MAChE,CAAC;MACD0K,aAAa,EAAE,uBAAUjH,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE/I,CAAC,EAAE;QACvCA,CAAC,GAAGA,CAAC,IAAIoI,YAAY,CAACvI,CAAC;QACvB,OAAQ,CAAC6I,CAAC,IAAIK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAIzI,CAAC,GAAG,CAAC,IAAIoI,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAC1I,CAAC,IAAK,KAAM,IAAI,CAAC,IAAI0I,CAAC,GAAG1I,CAAC,CAAC,CAAC,GAAGC,CAAC,GAAGK,CAAC,GAAG,CAAC,IAAI,CAACoI,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAC1I,CAAC,IAAK,KAAM,IAAI,CAAC,IAAI0I,CAAC,GAAG1I,CAAC,CAAC,GAAG,CAAC,CAAC,GAAGC,CAAC;MACtJ,CAAC;MACD2K,YAAY,EAAE,sBAAUlH,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACnC,OAAOzI,CAAC,GAAG,IAAI,CAACuK,aAAa,CAACnH,CAAC,EAAEqF,CAAC,GAAGL,CAAC,EAAE,CAAC,EAAEpI,CAAC,EAAEyI,CAAC,CAAC,GAAG9I,CAAC;MACxD,CAAC;MACD4K,aAAa,EAAE,uBAAUnH,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACpC,IAAIlJ,CAAC,GAAG,MAAM;QACd,IAAI,CAAC6I,CAAC,IAAIK,CAAC,IAAK,CAAC,GAAG,IAAK,EAAE;UACvB,OAAOzI,CAAC,IAAIT,CAAC,GAAG6I,CAAC,GAAGA,CAAC,CAAC,GAAGzI,CAAC;QAC9B,CAAC,MAAM,IAAIyI,CAAC,GAAI,CAAC,GAAG,IAAK,EAAE;UACvB,OAAOpI,CAAC,IAAIT,CAAC,IAAI6I,CAAC,IAAK,GAAG,GAAG,IAAK,CAAC,GAAGA,CAAC,GAAG,GAAG,CAAC,GAAGzI,CAAC;QACtD,CAAC,MAAM,IAAIyI,CAAC,GAAI,GAAG,GAAG,IAAK,EAAE;UACzB,OAAOpI,CAAC,IAAIT,CAAC,IAAI6I,CAAC,IAAK,IAAI,GAAG,IAAK,CAAC,GAAGA,CAAC,GAAG,KAAK,CAAC,GAAGzI,CAAC;QACzD,CAAC,MAAM;UACH,OAAOK,CAAC,IAAIT,CAAC,IAAI6I,CAAC,IAAK,KAAK,GAAG,IAAK,CAAC,GAAGA,CAAC,GAAG,OAAO,CAAC,GAAGzI,CAAC;QAC5D;MACJ,CAAC;MACD6K,eAAe,EAAE,yBAAUpH,CAAC,EAAEgF,CAAC,EAAEzI,CAAC,EAAEK,CAAC,EAAEyI,CAAC,EAAE;QACtC,OAAQL,CAAC,GAAGK,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC6B,YAAY,CAAClH,CAAC,EAAEgF,CAAC,GAAG,CAAC,EAAE,CAAC,EAAEpI,CAAC,EAAEyI,CAAC,CAAC,GAAG,EAAE,GAAG9I,CAAC,GAAG,IAAI,CAAC4K,aAAa,CAACnH,CAAC,EAAEgF,CAAC,GAAG,CAAC,GAAGK,CAAC,EAAE,CAAC,EAAEzI,CAAC,EAAEyI,CAAC,CAAC,GAAG,EAAE,GAAGzI,CAAC,GAAG,EAAE,GAAGL,CAAC;MACpI;IACJ,CAAC;IACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACQ,CAAC,EAAG;;EACJ,IAAI8K,SAAS,GAAI,YAAY;IACzB,IAAIC,cAAc,GAAI,mBAAoB;IAC1C,IAAIC,SAAS,GAAG,GAAG;IACnB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,cAAc,GAAG,YAAY;IACjC,IAAIC,aAAa,GAAG,WAAW;IAC/B,IAAIC,WAAW,GAAG,EAAE;IACpB,IAAIC,KAAK,GAAG9H,aAAa,CAACmE,IAAI;IAC9B,IAAI4D,UAAU,GAAG;MACbC,uBAAuB,EAAE,IAAI;MAC7BC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;IACV,CAAC;IAED,SAASC,MAAM,GAAG;MACd,IAAIC,GAAG;QAAEC,WAAW;QAAEC,IAAI;QAAExK,IAAI;QAAEyK,OAAO;QAAEC,KAAK;QAAErG,MAAM,GAAG/B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzE/D,CAAC,GAAG,CAAC;QACLiC,MAAM,GAAG8B,SAAS,CAACjE,OAAO,CAACG,CAAC,CAAC;QAC7BmM,IAAI,GAAG,KAAK;;MAEhB;MACA,IAAIrB,KAAK,CAACjF,MAAM,CAAC,IAAIzG,KAAK,CAACK,CAAC,EAAE;QAC1B0M,IAAI,GAAGtG,MAAM;QACbA,MAAM,GAAG/B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3B;QACA/D,CAAC,GAAG,CAAC;MACT;;MAEA;MACA,IAAI+K,KAAK,CAACjF,MAAM,CAAC,IAAIzG,KAAK,CAACC,CAAC,IAAI,CAACyL,KAAK,CAACjF,MAAM,CAAC,IAAIzG,KAAK,CAACE,CAAC,EAAE;QACvDuG,MAAM,GAAG,CAAC,CAAC;MACf;;MAEA;MACA,IAAI7D,MAAM,KAAKjC,CAAC,EAAE;QACd8F,MAAM,GAAGuG,UAAU;QACnB,EAAErM,CAAC;MACP;MAEA,OAAOA,CAAC,GAAGiC,MAAM,EAAEjC,CAAC,EAAE,EAAE;QACpB;QACA,IAAI,CAACkM,OAAO,GAAGnI,SAAS,CAAC/D,CAAC,CAAC,KAAK,IAAI,EAAE;UAClC;UACA,KAAKyB,IAAI,IAAIyK,OAAO,EAAE;YAClBH,GAAG,GAAGjG,MAAM,CAACrE,IAAI,CAAC;YAClBwK,IAAI,GAAGC,OAAO,CAACzK,IAAI,CAAC;;YAEpB;YACA,IAAIqE,MAAM,KAAKmG,IAAI,EAAE;cACjB;YACJ;;YAEA;YACA,IAAIG,IAAI,IAAIH,IAAI,KAAKK,aAAa,CAACL,IAAI,CAAC,KAAKD,WAAW,GAAG/I,aAAa,CAACgE,GAAG,CAACgF,IAAI,CAAC,CAAC,CAAC,EAAE;cAClF,IAAID,WAAW,EAAE;gBACbA,WAAW,GAAG,KAAK;gBACnBG,KAAK,GAAGJ,GAAG,IAAI9I,aAAa,CAACgE,GAAG,CAAC8E,GAAG,CAAC,GAAGA,GAAG,GAAG,EAAE;cAEpD,CAAC,MAAM;gBACHI,KAAK,GAAGJ,GAAG,IAAIO,aAAa,CAACP,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,CAAC;cAChD;;cAEA;cACAjG,MAAM,CAACrE,IAAI,CAAC,GAAGqK,MAAM,CAACM,IAAI,EAAED,KAAK,EAAEF,IAAI,CAAC;;cAExC;YACJ,CAAC,MAAM,IAAIA,IAAI,KAAKjN,SAAS,EAAE;cAC3B8G,MAAM,CAACrE,IAAI,CAAC,GAAGwK,IAAI;YACvB;UACJ;QACJ;MACJ;;MAEA;MACA,OAAOnG,MAAM;IACjB;IAAC;IAED,SAASyG,OAAO,CAACzF,IAAI,EAAEC,GAAG,EAAEyF,SAAS,EAAE;MACnC,KAAK,IAAIxM,CAAC,GAAGwM,SAAS,IAAI,CAAC,EAAExM,CAAC,GAAG+G,GAAG,CAACjH,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;QAChD,IAAI+G,GAAG,CAAC/G,CAAC,CAAC,KAAK8G,IAAI,EACf,OAAO9G,CAAC;MAAC;MACjB,OAAO,CAAC,CAAC;IACb;IAEA,SAASyM,UAAU,CAACpF,GAAG,EAAE;MACrB,OAAO0D,KAAK,CAAC1D,GAAG,CAAC,IAAIhI,KAAK,CAACE,CAAC;IAChC;IAAC;IAED,SAASmN,aAAa,CAACrF,GAAG,EAAE;MACxB,KAAK,IAAI5F,IAAI,IAAI4F,GAAG;QAChB,OAAO,KAAK;MAAC;MACjB,OAAO,IAAI;IACf;IAAC;IAED,SAASiF,aAAa,CAACjF,GAAG,EAAE;MACxB,IAAI,CAACA,GAAG,IAAI0D,KAAK,CAAC1D,GAAG,CAAC,IAAIhI,KAAK,CAACC,CAAC,EAC7B,OAAO,KAAK;MAEhB,IAAIqN,GAAG;MACP,IAAIhJ,KAAK,GAAG7D,OAAO,CAACI,CAAC;MACrB,IAAI0M,cAAc,GAAGtF,MAAM,CAAC3D,KAAK,CAAC,CAACiJ,cAAc;MACjD,IAAIC,iBAAiB,GAAGD,cAAc,CAAC9I,IAAI,CAACuD,GAAG,EAAE,aAAa,CAAC;MAC/D,IAAIyF,gBAAgB,GAAGzF,GAAG,CAAC0F,WAAW,IAAI1F,GAAG,CAAC0F,WAAW,CAACpJ,KAAK,CAAC,IAAIiJ,cAAc,CAAC9I,IAAI,CAACuD,GAAG,CAAC0F,WAAW,CAACpJ,KAAK,CAAC,EAAE,eAAe,CAAC;MAEhI,IAAI0D,GAAG,CAAC0F,WAAW,IAAI,CAACF,iBAAiB,IAAI,CAACC,gBAAgB,EAAE;QAC5D,OAAO,KAAK;MAChB;MAGA,KAAKH,GAAG,IAAItF,GAAG,EAAE,CAAE;MAEnB,OAAO0D,KAAK,CAAC4B,GAAG,CAAC,IAAItN,KAAK,CAACO,CAAC,IAAIgN,cAAc,CAAC9I,IAAI,CAACuD,GAAG,EAAEsF,GAAG,CAAC;IACjE;IAAC;IAED,SAASK,KAAI,CAAC3F,GAAG,EAAE4F,QAAQ,EAAE;MACzB,IAAIjN,CAAC,GAAG,CAAC;MAET,IAAIkN,WAAW,CAAC7F,GAAG,CAAC,EAAE;QAClB,OAAOrH,CAAC,GAAGqH,GAAG,CAACvH,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UAC5B,IAAIiN,QAAQ,CAACnJ,IAAI,CAACuD,GAAG,CAACrH,CAAC,CAAC,EAAEA,CAAC,EAAEqH,GAAG,CAACrH,CAAC,CAAC,CAAC,KAAK,KAAK,EAC1C;QACR;MACJ,CAAC,MACI;QACD,KAAKA,CAAC,IAAIqH,GAAG,EAAE;UACX,IAAI4F,QAAQ,CAACnJ,IAAI,CAACuD,GAAG,CAACrH,CAAC,CAAC,EAAEA,CAAC,EAAEqH,GAAG,CAACrH,CAAC,CAAC,CAAC,KAAK,KAAK,EAC1C;QACR;MACJ;MAEA,OAAOqH,GAAG;IACd;IAAC;IAED,SAAS6F,WAAW,CAAC7F,GAAG,EAAE;MACtB,IAAIpF,MAAM,GAAG,CAAC,CAACoF,GAAG,IAAI,CAACvH,OAAO,CAACG,CAAC,CAAC,IAAIoH,GAAG,IAAIA,GAAG,CAACvH,OAAO,CAACG,CAAC,CAAC;MAC1D,IAAIkI,CAAC,GAAG4C,KAAK,CAAC1D,GAAG,CAAC;MAClB,OAAOoF,UAAU,CAACtE,CAAC,CAAC,GAAG,KAAK,GAAIA,CAAC,IAAI9I,KAAK,CAACG,CAAC,IAAIyC,MAAM,KAAK,CAAC,IAAI8I,KAAK,CAAC9I,MAAM,CAAC,IAAI5C,KAAK,CAACM,CAAC,IAAIsC,MAAM,GAAG,CAAC,IAAKA,MAAM,GAAG,CAAC,IAAKoF,GAAI;IAClI;IAEA,SAAS8F,gBAAgB,CAACC,KAAK,EAAE;MAC7B,IAAIC,MAAM,GAAGD,KAAK,CAACE,KAAK,CAAC7C,cAAc,CAAC,IAAI,EAAE;MAC9C,OAAO4C,MAAM,CAACE,IAAI,CAAC7C,SAAS,CAAC;IACjC;IAEA,SAAS8C,OAAO,CAACC,IAAI,EAAEC,QAAQ,EAAE;MAC7B,IAAIC,QAAQ,GAAG,CAACF,IAAI,CAACG,UAAU,IAAI7O,QAAQ,EAAE8O,gBAAgB,CAACH,QAAQ,CAAC,IAAI,EAAE;MAC7E,IAAI1N,CAAC,GAAG2N,QAAQ,CAAC7N,OAAO,CAACG,CAAC,CAAC;MAE3B,OAAOD,CAAC,EAAE;QACN,IAAI2N,QAAQ,CAAC3N,CAAC,CAAC,IAAIyN,IAAI,EACnB,OAAO,IAAI;MAAC;MAEpB,OAAO,KAAK;IAChB;IAEA,SAASK,qBAAqB,CAACC,EAAE,EAAEC,QAAQ,EAAEC,KAAK,EAAE;MAChD,IAAIhL,aAAa,CAACgE,GAAG,CAACgH,KAAK,CAAC,EAAE;QAC1B,KAAK,IAAIjO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiO,KAAK,CAACnO,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;UACrC8N,qBAAqB,CAACC,EAAE,EAAEC,QAAQ,EAAEC,KAAK,CAACjO,CAAC,CAAC,CAAC;QAAC;MACtD,CAAC,MACI,IAAI+K,KAAK,CAACkD,KAAK,CAAC,IAAI5O,KAAK,CAACI,CAAC,EAC5BsO,EAAE,CAACG,kBAAkB,CAACF,QAAQ,EAAEC,KAAK,CAAC,CAAC,KAEvCF,EAAE,CAACD,qBAAqB,CAACE,QAAQ,EAAEC,KAAK,CAACE,QAAQ,GAAGF,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7E;IAEA,SAASG,SAAS,CAACL,EAAE,EAAEpL,IAAI,EAAE0L,GAAG,EAAE;MAC9B,IAAI;QACA,IAAIN,EAAE,CAACjO,OAAO,CAACL,CAAC,CAAC,CAACkD,IAAI,CAAC,KAAK3D,SAAS,EACjC+O,EAAE,CAACjO,OAAO,CAACL,CAAC,CAAC,CAACkD,IAAI,CAAC,GAAG2L,WAAW,CAAC3L,IAAI,EAAE0L,GAAG,CAAC;MACpD,CAAC,CAAC,OAAOrH,CAAC,EAAE,CAAE;IAClB;IAEA,SAASsH,WAAW,CAAC3L,IAAI,EAAE0L,GAAG,EAAE;MAC5B,IAAI,CAACrD,UAAU,CAACrI,IAAI,CAACK,WAAW,EAAE,CAAC,IAAI+H,KAAK,CAACsD,GAAG,CAAC,IAAIhP,KAAK,CAACM,CAAC,EACxD0O,GAAG,IAAI,IAAI;MACf,OAAOA,GAAG;IACd;IAEA,SAASE,qBAAqB,CAACC,OAAO,EAAEC,WAAW,EAAE;MACjD,IAAIC,KAAK;MACT,IAAIC,QAAQ;MACZ,IAAIF,WAAW,KAAK,KAAK,EACrBD,OAAO,CAACI,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,IAAIL,OAAO,CAACI,CAAC,CAAC9O,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC,EAAE;QAC1B0O,QAAQ,GAAGH,OAAO,CAACI,CAAC,CAAC,CAAC,CAAC;QACvBE,QAAO,CAACN,OAAO,CAACT,EAAE,EAAEY,QAAQ,CAACI,KAAK,EAAEJ,QAAQ,CAACK,QAAQ,EAAEL,QAAQ,CAACM,MAAM,EAAEN,QAAQ,CAACO,QAAQ,EAAE,IAAI,CAAC;MACpG,CAAC,MACI;QACDR,KAAK,GAAGnC,OAAO,CAACiC,OAAO,EAAE1D,WAAW,CAAC;QACrC,IAAI4D,KAAK,GAAG,CAAC,CAAC,EACV5D,WAAW,CAAC+D,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MACpC;IACJ;IAEA,SAASS,iBAAiB,CAACpB,EAAE,EAAEpL,IAAI,EAAEyK,KAAK,EAAE;MACxC,IAAIzK,IAAI,KAAKiI,cAAc,IAAIjI,IAAI,KAAKkI,aAAa,EACjDkD,EAAE,CAACpL,IAAI,CAAC,GAAGyK,KAAK,CAAC,KAEjBgB,SAAS,CAACL,EAAE,EAAEpL,IAAI,EAAEyK,KAAK,CAAC;IAClC;IAEA,SAAS0B,QAAO,CAACf,EAAE,EAAEgB,KAAK,EAAE7C,OAAO,EAAE+C,MAAM,EAAEC,QAAQ,EAAEE,cAAc,EAAE;MACnE,IAAIC,UAAU,GAAG/C,aAAa,CAACJ,OAAO,CAAC;MACvC,IAAIoD,IAAI,GAAG,CAAC,CAAC;MACb,IAAIC,EAAE,GAAG,CAAC,CAAC;MACX,IAAIvP,CAAC,GAAG,CAAC;MACT,IAAI2M,GAAG;MACP,IAAI6B,OAAO;MACX,IAAIgB,KAAK;MACT,IAAIC,QAAQ;MACZ,IAAIC,IAAI;MACR,IAAIC,aAAa;MACjB,IAAIX,QAAQ;MACZ,IAAIK,UAAU,EAAE;QACZJ,MAAM,GAAG/C,OAAO,CAAC+C,MAAM;QACvBO,KAAK,GAAGtD,OAAO,CAACsD,KAAK;QACrBC,QAAQ,GAAGvD,OAAO,CAACuD,QAAQ;QAC3BC,IAAI,GAAGxD,OAAO,CAACwD,IAAI;QACnBC,aAAa,GAAGzD,OAAO,CAACyD,aAAa;QACrCT,QAAQ,GAAGhD,OAAO,CAACgD,QAAQ;QAC3BF,QAAQ,GAAG9C,OAAO,CAAC8C,QAAQ;MAC/B,CAAC,MAEGA,QAAQ,GAAG9C,OAAO;MACtByD,aAAa,GAAGA,aAAa,IAAI,CAAC,CAAC;MACnCX,QAAQ,GAAGA,QAAQ,IAAI,GAAG;MAC1BC,MAAM,GAAGA,MAAM,IAAI,OAAO;MAC1BG,cAAc,GAAGA,cAAc,IAAI,KAAK;MAExC,OAAOpP,CAAC,GAAG8K,WAAW,CAAChL,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;QACpC,IAAI8K,WAAW,CAAC9K,CAAC,CAAC,CAAC+N,EAAE,KAAKA,EAAE,EAAE;UAC1BS,OAAO,GAAG1D,WAAW,CAAC9K,CAAC,CAAC;UACxB;QACJ;MACJ;MAEA,IAAI,CAACwO,OAAO,EAAE;QACVA,OAAO,GAAG;UACNT,EAAE,EAAEA,EAAE;UACNa,CAAC,EAAE;QACP,CAAC;QACD9D,WAAW,CAAC8E,IAAI,CAACpB,OAAO,CAAC;MAC7B;MAEA,KAAK7B,GAAG,IAAIoC,KAAK,EAAE;QACf,IAAIpC,GAAG,KAAK/B,cAAc,IAAI+B,GAAG,KAAK9B,aAAa,EAC/CyE,IAAI,CAAC3C,GAAG,CAAC,GAAGoB,EAAE,CAACpB,GAAG,CAAC,CAAC,KAEpB2C,IAAI,CAAC3C,GAAG,CAAC,GAAGN,UAAU,CAAC0B,EAAE,CAAC,CAAC8B,GAAG,CAAClD,GAAG,CAAC;MAC3C;MAEA,KAAKA,GAAG,IAAI2C,IAAI,EAAE;QACd,IAAIA,IAAI,CAAC3C,GAAG,CAAC,KAAKoC,KAAK,CAACpC,GAAG,CAAC,IAAIoC,KAAK,CAACpC,GAAG,CAAC,KAAK3N,SAAS,EACpDuQ,EAAE,CAAC5C,GAAG,CAAC,GAAGoC,KAAK,CAACpC,GAAG,CAAC;MAC5B;MAEA,IAAI,CAACD,aAAa,CAAC6C,EAAE,CAAC,EAAE;QACpB,IAAIO,OAAO;QACX,IAAIC,GAAG;QACP,IAAIC,OAAO;QACX,IAAIC,OAAO;QACX,IAAIC,KAAK;QACT,IAAIC,QAAQ;QACZ,IAAIC,SAAS;QACb,IAAIC,MAAK;QACT,IAAIC,OAAO;QACX,IAAIC,IAAI,GAAGnB,cAAc,GAAG,CAAC,GAAG7C,OAAO,CAACiE,IAAI,EAAEhC,OAAO,CAACI,CAAC,CAAC;QACxD,IAAI4B,IAAI,GAAG;UACPzB,KAAK,EAAEQ,EAAE;UACTP,QAAQ,EAAEK,UAAU,GAAGnD,OAAO,GAAG8C,QAAQ;UACzCC,MAAM,EAAEA,MAAM;UACdC,QAAQ,EAAEA;QACd,CAAC;QACD,IAAIqB,IAAI,KAAK,CAAC,CAAC,EAAE;UACbA,IAAI,GAAG/B,OAAO,CAACI,CAAC,CAAC9O,OAAO,CAACG,CAAC,CAAC;UAC3BuO,OAAO,CAACI,CAAC,CAACgB,IAAI,CAACY,IAAI,CAAC;QACxB;QAEA,IAAID,IAAI,KAAK,CAAC,EAAE;UACZ,IAAIvB,QAAQ,GAAG,CAAC,EAAE;YACdoB,SAAS,GAAGnN,aAAa,CAAC4B,GAAG,EAAE;YAC/BwL,MAAK,GAAG,iBAAY;cAChBP,OAAO,GAAG7M,aAAa,CAAC4B,GAAG,EAAE;cAC7ByL,OAAO,GAAIR,OAAO,GAAGM,SAAU;cAC/BL,GAAG,GAAGS,IAAI,CAACC,IAAI,IAAIH,OAAO,IAAItB,QAAQ;cACtCgB,OAAO,GAAG,CAAC,IAAKxI,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAEN,SAAS,GAAGpB,QAAQ,GAAGc,OAAO,CAAC,GAAGd,QAAQ,IAAK,CAAC,CAAC;cAE7E,KAAKrC,GAAG,IAAI4C,EAAE,EAAE;gBACZU,OAAO,GAAGU,UAAU,CAACrB,IAAI,CAAC3C,GAAG,CAAC,CAAC;gBAC/BuD,KAAK,GAAGS,UAAU,CAACpB,EAAE,CAAC5C,GAAG,CAAC,CAAC;gBAC3BwD,QAAQ,GAAG,CAACD,KAAK,GAAGD,OAAO,IAAIrI,MAAM,CAAC+H,aAAa,CAAChD,GAAG,CAAC,IAAIsC,MAAM,CAAC,CAACe,OAAO,EAAEA,OAAO,GAAGhB,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAEA,QAAQ,CAAC,GAAGiB,OAAO;gBAC1Hd,iBAAiB,CAACpB,EAAE,EAAEpB,GAAG,EAAEwD,QAAQ,CAAC;gBACpC,IAAI1D,UAAU,CAACiD,IAAI,CAAC,EAAE;kBAClBA,IAAI,CAACS,QAAQ,EAAE;oBACX1C,IAAI,EAAEM,EAAE;oBACRpL,IAAI,EAAEgK,GAAG;oBACT6C,KAAK,EAAES,OAAO;oBACdpL,GAAG,EAAEsL,QAAQ;oBACbJ,GAAG,EAAEG,KAAK;oBACVU,GAAG,EAAEZ,OAAO;oBACZ9D,OAAO,EAAE;sBACL+C,MAAM,EAAEA,MAAM;sBACd4B,cAAc,EAAElB,aAAa;sBAC7BX,QAAQ,EAAEA,QAAQ;sBAClBE,QAAQ,EAAEA,QAAQ;sBAClBQ,IAAI,EAAEA;oBACV,CAAC;oBACDoB,SAAS,EAAEV;kBACf,CAAC,CAAC;gBACN;cACJ;cAEA,IAAI3D,UAAU,CAACgD,QAAQ,CAAC,EACpBA,QAAQ,CAAC,CAAC,CAAC,EAAEO,OAAO,EAAExI,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAE1B,QAAQ,GAAGsB,OAAO,CAAC,CAAC;cAE1D,IAAIP,GAAG,EAAE;gBACLxB,qBAAqB,CAACC,OAAO,CAAC;gBAC9B,IAAI/B,UAAU,CAACyC,QAAQ,CAAC,EACpBA,QAAQ,EAAE;cAClB,CAAC,MAEGsB,IAAI,CAACH,KAAK,GAAGpN,aAAa,CAACuB,GAAG,EAAE,CAAC6L,MAAK,CAAC;YAC/C,CAAC;YACDG,IAAI,CAACH,KAAK,GAAGpN,aAAa,CAACuB,GAAG,EAAE,CAAC6L,MAAK,CAAC;UAC3C,CAAC,MACI;YACD,KAAK1D,GAAG,IAAI4C,EAAE;cACVJ,iBAAiB,CAACpB,EAAE,EAAEpB,GAAG,EAAE4C,EAAE,CAAC5C,GAAG,CAAC,CAAC;YAAC;YACxC4B,qBAAqB,CAACC,OAAO,CAAC;UAClC;QACJ;MACJ,CAAC,MACI,IAAIY,cAAc,EACnBb,qBAAqB,CAACC,OAAO,CAAC;IACtC;IAEA,SAASiC,KAAI,CAAC1C,EAAE,EAAEgD,MAAM,EAAEC,SAAS,EAAE;MACjC,IAAIxC,OAAO;MACX,IAAIgC,IAAI;MACR,IAAI7D,GAAG;MACP,IAAI3M,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG8K,WAAW,CAAChL,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;QACpCwO,OAAO,GAAG1D,WAAW,CAAC9K,CAAC,CAAC;QACxB,IAAIwO,OAAO,CAACT,EAAE,KAAKA,EAAE,EAAE;UACnB,IAAIS,OAAO,CAACI,CAAC,CAAC9O,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC,EAAE;YAC1BuQ,IAAI,GAAGhC,OAAO,CAACI,CAAC,CAAC,CAAC,CAAC;YACnB4B,IAAI,CAACC,IAAI,GAAG,IAAI;YAChBxN,aAAa,CAACyB,GAAG,EAAE,CAAC8L,IAAI,CAACH,KAAK,CAAC;YAC/B7B,OAAO,CAACI,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YAEtB,IAAImC,SAAS,EACT,KAAKrE,GAAG,IAAI6D,IAAI,CAACzB,KAAK;cAClBI,iBAAiB,CAACpB,EAAE,EAAEpB,GAAG,EAAE6D,IAAI,CAACzB,KAAK,CAACpC,GAAG,CAAC,CAAC;YAAC;YAEpD,IAAIoE,MAAM,EACNvC,OAAO,CAACI,CAAC,GAAG,EAAE,CAAC,KAEfL,qBAAqB,CAACC,OAAO,EAAE,KAAK,CAAC;UAC7C;UACA;QACJ;MACJ;IACJ;IAEA,SAASyC,gBAAgB,CAAClD,EAAE,EAAE;MAC1B,OAAO,CAAC,EAAEA,EAAE,CAACjO,OAAO,CAACS,EAAE,CAAC,IAAIwN,EAAE,CAACjO,OAAO,CAACM,EAAE,CAAC,IAAI2N,EAAE,CAACmD,cAAc,EAAE,CAACpR,OAAO,CAACG,CAAC,CAAC,CAAC;IACjF;IAEA,SAASoM,UAAU,CAACqB,QAAQ,EAAE;MAC1B,IAAI3J,SAAS,CAACjE,OAAO,CAACG,CAAC,CAAC,KAAK,CAAC,EAC1B,OAAO,IAAI;MAEf,IAAIkR,IAAI,GAAG,IAAI9E,UAAU,EAAE;MAC3B,IAAI+E,QAAQ,GAAG1D,QAAQ;MACvB,IAAI1N,CAAC,GAAG,CAAC;MACT,IAAIqR,IAAI;MACR,IAAItD,EAAE;MAEN,IAAIhD,KAAK,CAAC2C,QAAQ,CAAC,IAAIrO,KAAK,CAACI,CAAC,EAAE;QAC5B2R,QAAQ,GAAG,EAAE;QACb,IAAI1D,QAAQ,CAACvM,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC5B4M,EAAE,GAAGhP,QAAQ,CAAC8C,aAAa,CAAC,KAAK,CAAC;UAClCkM,EAAE,CAACuD,SAAS,GAAG5D,QAAQ;UACvB2D,IAAI,GAAGtD,EAAE,CAACwD,QAAQ;QACtB,CAAC,MACI;UACDF,IAAI,GAAGtS,QAAQ,CAAC8O,gBAAgB,CAACH,QAAQ,CAAC;QAC9C;QAEA,OAAO1N,CAAC,GAAGqR,IAAI,CAACvR,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;UAC3BoR,QAAQ,CAACxB,IAAI,CAACyB,IAAI,CAACrR,CAAC,CAAC,CAAC;QAAC;MAC/B;MAEA,IAAIoR,QAAQ,EAAE;QACV,IAAIrG,KAAK,CAACqG,QAAQ,CAAC,IAAI/R,KAAK,CAACI,CAAC,KAAK,CAACyN,WAAW,CAACkE,QAAQ,CAAC,IAAIA,QAAQ,KAAKjS,MAAM,IAAIiS,QAAQ,KAAKA,QAAQ,CAACI,IAAI,CAAC,EAC3GJ,QAAQ,GAAG,CAACA,QAAQ,CAAC;QAEzB,KAAKpR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoR,QAAQ,CAACtR,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;UACpCmR,IAAI,CAACnR,CAAC,CAAC,GAAGoR,QAAQ,CAACpR,CAAC,CAAC;QAAC;QAE1BmR,IAAI,CAACrR,OAAO,CAACG,CAAC,CAAC,GAAGmR,QAAQ,CAACtR,OAAO,CAACG,CAAC,CAAC;MACzC;MAEA,OAAOkR,IAAI;IACf;IAAC;IAED9E,UAAU,CAACvM,OAAO,CAACI,CAAC,CAAC,GAAG;MAEpB;;MAEAuR,EAAE,EAAE,YAAUC,SAAS,EAAEC,OAAO,EAAE;QAC9BD,SAAS,GAAG,CAACA,SAAS,IAAI/G,SAAS,EAAE2C,KAAK,CAAC7C,cAAc,CAAC,IAAI,CAACE,SAAS,CAAC;QAEzE,IAAIiH,eAAe,GAAGF,SAAS,CAAC5R,OAAO,CAACG,CAAC,CAAC;QAC1C,IAAID,CAAC,GAAG,CAAC;QACT,IAAI+N,EAAE;QACN,OAAO,IAAI,CAACf,IAAI,CAAC,YAAY;UACzBe,EAAE,GAAG,IAAI;UACT,IAAI;YACA,IAAIA,EAAE,CAAC8D,gBAAgB,EAAE;cACrB,OAAO7R,CAAC,GAAG4R,eAAe,EAAE5R,CAAC,EAAE;gBAC3B+N,EAAE,CAAC8D,gBAAgB,CAACH,SAAS,CAAC1R,CAAC,CAAC,EAAE2R,OAAO,CAAC;cAAC;YACnD,CAAC,MACI,IAAI5D,EAAE,CAAC+D,WAAW,EAAE;cACrB,OAAO9R,CAAC,GAAG4R,eAAe,EAAE5R,CAAC,EAAE;gBAC3B+N,EAAE,CAACgE,WAAW,CAAC,IAAI,GAAGL,SAAS,CAAC1R,CAAC,CAAC,EAAE2R,OAAO,CAAC;cAAC;YACrD;UACJ,CAAC,CAAC,OAAO3K,CAAC,EAAE,CAAE;QAClB,CAAC,CAAC;MACN,CAAC;MAEDgL,GAAG,EAAE,aAAUN,SAAS,EAAEC,OAAO,EAAE;QAC/BD,SAAS,GAAG,CAACA,SAAS,IAAI/G,SAAS,EAAE2C,KAAK,CAAC7C,cAAc,CAAC,IAAI,CAACE,SAAS,CAAC;QAEzE,IAAIiH,eAAe,GAAGF,SAAS,CAAC5R,OAAO,CAACG,CAAC,CAAC;QAC1C,IAAID,CAAC,GAAG,CAAC;QACT,IAAI+N,EAAE;QACN,OAAO,IAAI,CAACf,IAAI,CAAC,YAAY;UACzBe,EAAE,GAAG,IAAI;UACT,IAAI;YACA,IAAIA,EAAE,CAACkE,mBAAmB,EAAE;cACxB,OAAOjS,CAAC,GAAG4R,eAAe,EAAE5R,CAAC,EAAE;gBAC3B+N,EAAE,CAACkE,mBAAmB,CAACP,SAAS,CAAC1R,CAAC,CAAC,EAAE2R,OAAO,CAAC;cAAC;YACtD,CAAC,MACI,IAAI5D,EAAE,CAAC+D,WAAW,EAAE;cACrB,OAAO9R,CAAC,GAAG4R,eAAe,EAAE5R,CAAC,EAAE;gBAC3B+N,EAAE,CAAC+D,WAAW,CAAC,IAAI,GAAGJ,SAAS,CAAC1R,CAAC,CAAC,EAAE2R,OAAO,CAAC;cAAC;YACrD;UACJ,CAAC,CAAC,OAAO3K,CAAC,EAAE,CAAE;QAClB,CAAC,CAAC;MACN,CAAC;MAEDkL,GAAG,EAAE,aAAUR,SAAS,EAAEC,OAAO,EAAE;QAC/BD,SAAS,GAAG,CAACA,SAAS,IAAI/G,SAAS,EAAE2C,KAAK,CAAC7C,cAAc,CAAC,IAAI,CAACE,SAAS,CAAC;QACzE,OAAO,IAAI,CAACqC,IAAI,CAAC,YAAY;UACzB,IAAIe,EAAE,GAAG1B,UAAU,CAAC,IAAI,CAAC;UACzBA,UAAU,CAACW,IAAI,CAAC0E,SAAS,EAAE,UAAU1R,CAAC,EAAEmS,YAAY,EAAE;YAClD,IAAIC,UAAU,GAAG,SAAbA,UAAU,CAAapL,CAAC,EAAE;cAC1B2K,OAAO,CAAC7N,IAAI,CAAC,IAAI,EAAEkD,CAAC,CAAC;cACrB+G,EAAE,CAACiE,GAAG,CAACG,YAAY,EAAEC,UAAU,CAAC;YACpC,CAAC;YACDrE,EAAE,CAAC0D,EAAE,CAACU,YAAY,EAAEC,UAAU,CAAC;UACnC,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC;MAEDC,OAAO,EAAE,iBAAUX,SAAS,EAAE;QAC1B,IAAI3D,EAAE;QACN,IAAI9I,KAAK;QACT,OAAO,IAAI,CAAC+H,IAAI,CAAC,YAAY;UACzBe,EAAE,GAAG,IAAI;UACT,IAAIhP,QAAQ,CAACuT,WAAW,EAAE;YACtBrN,KAAK,GAAGlG,QAAQ,CAACuT,WAAW,CAAC,YAAY,CAAC;YAC1CrN,KAAK,CAACsN,SAAS,CAACb,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC;YACvC3D,EAAE,CAACyE,aAAa,CAACvN,KAAK,CAAC;UAC3B,CAAC,MACI;YACD8I,EAAE,CAAC0E,SAAS,CAAC,IAAI,GAAGf,SAAS,CAAC;UAClC;QACJ,CAAC,CAAC;MACN,CAAC;MAED;;MAEAgB,MAAM,EAAE,gBAAUzE,KAAK,EAAE;QACrB,OAAO,IAAI,CAACjB,IAAI,CAAC,YAAY;UAAEc,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAEG,KAAK,CAAC;QAAE,CAAC,CAAC;MACtF,CAAC;MAED0E,OAAO,EAAE,iBAAU1E,KAAK,EAAE;QACtB,OAAO,IAAI,CAACjB,IAAI,CAAC,YAAY;UAAEc,qBAAqB,CAAC,IAAI,EAAE,YAAY,EAAEG,KAAK,CAAC;QAAE,CAAC,CAAC;MACvF,CAAC;MAED2E,MAAM,EAAE,gBAAU3E,KAAK,EAAE;QACrB,OAAO,IAAI,CAACjB,IAAI,CAAC,YAAY;UAAEc,qBAAqB,CAAC,IAAI,EAAE,aAAa,EAAEG,KAAK,CAAC;QAAE,CAAC,CAAC;MACxF,CAAC;MAED4E,KAAK,EAAE,eAAU5E,KAAK,EAAE;QACpB,OAAO,IAAI,CAACjB,IAAI,CAAC,YAAY;UAAEc,qBAAqB,CAAC,IAAI,EAAE,UAAU,EAAEG,KAAK,CAAC;QAAE,CAAC,CAAC;MACrF,CAAC;MAED6E,MAAM,EAAE,kBAAY;QAChB,OAAO,IAAI,CAAC9F,IAAI,CAAC,YAAY;UACzB,IAAIe,EAAE,GAAG,IAAI;UACb,IAAIH,UAAU,GAAGG,EAAE,CAACH,UAAU;UAC9B,IAAIA,UAAU,IAAI,IAAI,EAClBA,UAAU,CAACmF,WAAW,CAAChF,EAAE,CAAC;QAClC,CAAC,CAAC;MACN,CAAC;MAEDiF,MAAM,EAAE,kBAAY;QAChB,IAAIC,OAAO,GAAG,EAAE;QAChB,IAAIjT,CAAC;QACL,IAAI+N,EAAE;QACN,IAAImF,MAAM;QAEV,IAAI,CAAClG,IAAI,CAAC,YAAY;UAClBkG,MAAM,GAAG,IAAI,CAACtF,UAAU;UACxB,IAAIrB,OAAO,CAAC2G,MAAM,EAAED,OAAO,CAAC,KAAK,CAAE,CAAC,EAChCA,OAAO,CAACrD,IAAI,CAACsD,MAAM,CAAC;QAC5B,CAAC,CAAC;QAEF,KAAKlT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiT,OAAO,CAACnT,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UACrC+N,EAAE,GAAGkF,OAAO,CAACjT,CAAC,CAAC;UACfkT,MAAM,GAAGnF,EAAE,CAACH,UAAU;UACtB,OAAOG,EAAE,CAACoF,UAAU;YAChBD,MAAM,CAACE,YAAY,CAACrF,EAAE,CAACoF,UAAU,EAAEpF,EAAE,CAAC;UAAC;UAC3CmF,MAAM,CAACH,WAAW,CAAChF,EAAE,CAAC;QAC1B;QAEA,OAAO,IAAI;MACf,CAAC;MAEDsF,OAAO,EAAE,iBAAUC,WAAW,EAAE;QAC5B,IAAItT,CAAC;QACL,IAAIuT,KAAK,GAAG,IAAI;QAChB,IAAIC,OAAO,GAAGnH,UAAU,CAACiH,WAAW,CAAC,CAAC,CAAC,CAAC;QACxC,IAAIG,OAAO,GAAGD,OAAO;QACrB,IAAIN,MAAM,GAAGK,KAAK,CAAC,CAAC,CAAC,CAAC3F,UAAU;QAChC,IAAI8F,eAAe,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACG,eAAe;QAC9C,OAAOD,OAAO,CAACE,UAAU,CAAC7T,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC;UACpCwT,OAAO,GAAGA,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC;QAAC;QAEpC,KAAK3T,CAAC,GAAG,CAAC,EAAEuT,KAAK,CAACzT,OAAO,CAACG,CAAC,CAAC,GAAGD,CAAC,EAAEyT,OAAO,CAACN,UAAU,KAAKI,KAAK,CAAC,CAAC,CAAC,IAAIvT,CAAC,EAAE;UACpEyT,OAAO,CAACG,WAAW,CAACL,KAAK,CAACvT,CAAC,CAAC,CAAC;QAAC;QAElC,IAAI6T,WAAW,GAAGH,eAAe,GAAGA,eAAe,CAACG,WAAW,GAAGX,MAAM,CAACC,UAAU;QACnFD,MAAM,CAACE,YAAY,CAACI,OAAO,EAAEK,WAAW,CAAC;QAEzC,OAAO,IAAI;MACf,CAAC;MAEDC,SAAS,EAAE,mBAAUR,WAAW,EAAE;QAC9B,OAAO,IAAI,CAACtG,IAAI,CAAC,YAAY;UACzB,IAAIe,EAAE,GAAG1B,UAAU,CAAC,IAAI,CAAC;UACzB,IAAI0H,QAAQ,GAAGhG,EAAE,CAACgG,QAAQ,EAAE;UAE5B,IAAIA,QAAQ,CAACjU,OAAO,CAACG,CAAC,CAAC,EACnB8T,QAAQ,CAACV,OAAO,CAACC,WAAW,CAAC,CAAC,KAE9BvF,EAAE,CAAC2E,MAAM,CAACY,WAAW,CAAC;QAC9B,CAAC,CAAC;MACN,CAAC;MAEDU,IAAI,EAAE,cAAUV,WAAW,EAAE;QACzB,OAAO,IAAI,CAACtG,IAAI,CAAC,YAAY;UAAEX,UAAU,CAAC,IAAI,CAAC,CAACgH,OAAO,CAACC,WAAW,CAAC;QAAE,CAAC,CAAC;MAC5E,CAAC;MAGD;;MAEAzD,GAAG,EAAE,aAAUoE,MAAM,EAAE5F,GAAG,EAAE;QACxB,IAAIN,EAAE;QACN,IAAIpB,GAAG;QACP,IAAIuH,QAAQ;QACZ,IAAIC,WAAW,GAAGhV,MAAM,CAACiV,gBAAgB;QACzC,IAAIrJ,KAAK,CAACkJ,MAAM,CAAC,IAAI5U,KAAK,CAACI,CAAC,EAAE;UAC1B,IAAI4O,GAAG,KAAKrP,SAAS,EAAE;YACnB+O,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;YACZmG,QAAQ,GAAGC,WAAW,GAAGA,WAAW,CAACpG,EAAE,EAAE,IAAI,CAAC,GAAGA,EAAE,CAACsG,YAAY,CAACJ,MAAM,CAAC;;YAExE;YACA,OAAOE,WAAW,GAAGD,QAAQ,IAAI,IAAI,GAAGA,QAAQ,CAACI,gBAAgB,CAACL,MAAM,CAAC,GAAGlG,EAAE,CAACjO,OAAO,CAACL,CAAC,CAAC,CAACwU,MAAM,CAAC,GAAGC,QAAQ;UAChH,CAAC,MACI;YACD,OAAO,IAAI,CAAClH,IAAI,CAAC,YAAY;cACzBoB,SAAS,CAAC,IAAI,EAAE6F,MAAM,EAAE5F,GAAG,CAAC;YAChC,CAAC,CAAC;UACN;QACJ,CAAC,MACI;UACD,OAAO,IAAI,CAACrB,IAAI,CAAC,YAAY;YACzB,KAAKL,GAAG,IAAIsH,MAAM;cACd7F,SAAS,CAAC,IAAI,EAAEzB,GAAG,EAAEsH,MAAM,CAACtH,GAAG,CAAC,CAAC;YAAC;UAC1C,CAAC,CAAC;QACN;MACJ,CAAC;MAED4H,QAAQ,EAAE,kBAAUC,SAAS,EAAE;QAC3B,IAAI/G,IAAI;UAAEzN,CAAC,GAAG,CAAC;QACf,IAAIyU,iBAAiB,GAAG/J,SAAS,GAAG8J,SAAS,GAAG9J,SAAS;QACzD,IAAIgK,SAAS;QAEb,OAAQjH,IAAI,GAAG,IAAI,CAACzN,CAAC,EAAE,CAAC,EAAG;UACvB0U,SAAS,GAAGjH,IAAI,CAACiH,SAAS;UAC1B,IAAIA,SAAS,IAAIA,SAAS,CAACC,QAAQ,CAACH,SAAS,CAAC,EAC1C,OAAO,IAAI,CAAC,KACX,IAAI/G,IAAI,CAACU,QAAQ,KAAK,CAAC,IAAI,CAACzD,SAAS,GAAGyC,gBAAgB,CAACM,IAAI,CAAC+G,SAAS,GAAG7J,SAAS,CAAC,GAAGD,SAAS,EAAEkK,OAAO,CAACH,iBAAiB,CAAC,GAAG,CAAC,CAAC,EAClI,OAAO,IAAI;QACnB;QAEA,OAAO,KAAK;MAChB,CAAC;MAEDI,QAAQ,EAAE,kBAAUL,SAAS,EAAE;QAC3B,IAAIM,OAAO;QACX,IAAIrH,IAAI;QACR,IAAIsH,GAAG;QACP,IAAIC,QAAQ;QACZ,IAAIC,KAAK;QACT,IAAIC,UAAU;QACd,IAAIC,gBAAgB;QACpB,IAAIC,YAAY;QAChB,IAAIpV,CAAC,GAAG,CAAC;QACT,IAAI+B,CAAC,GAAG,CAAC;QAET,IAAIyS,SAAS,EAAE;UACXM,OAAO,GAAGN,SAAS,CAAClH,KAAK,CAAC7C,cAAc,CAAC,IAAI,EAAE;UAE/C,OAAQgD,IAAI,GAAG,IAAI,CAACzN,CAAC,EAAE,CAAC,EAAG;YACvBoV,YAAY,GAAG3H,IAAI,CAACiH,SAAS;YAC7B,IAAIS,gBAAgB,KAAKnW,SAAS,EAC9BmW,gBAAgB,GAAGC,YAAY,KAAKpW,SAAS;YAEjD,IAAImW,gBAAgB,EAAE;cAClB,OAAQF,KAAK,GAAGH,OAAO,CAAC/S,CAAC,EAAE,CAAC;gBACxBqT,YAAY,CAACC,GAAG,CAACJ,KAAK,CAAC;cAAC;YAChC,CAAC,MACI;cACDD,QAAQ,GAAGvH,IAAI,CAAC+G,SAAS,GAAG7J,SAAS;cACrCoK,GAAG,GAAGtH,IAAI,CAACU,QAAQ,KAAK,CAAC,IAAKzD,SAAS,GAAGyC,gBAAgB,CAAC6H,QAAQ,CAAC,GAAGtK,SAAU;cAEjF,IAAIqK,GAAG,EAAE;gBACL,OAAQE,KAAK,GAAGH,OAAO,CAAC/S,CAAC,EAAE,CAAC;kBACxB,IAAIgT,GAAG,CAACH,OAAO,CAAClK,SAAS,GAAGuK,KAAK,GAAGvK,SAAS,CAAC,GAAG,CAAC,EAC9CqK,GAAG,IAAIE,KAAK,GAAGvK,SAAS;gBAAC;gBAEjCwK,UAAU,GAAG/H,gBAAgB,CAAC4H,GAAG,CAAC;gBAClC,IAAIC,QAAQ,KAAKE,UAAU,EACvBzH,IAAI,CAAC+G,SAAS,GAAGU,UAAU;cACnC;YACJ;UACJ;QACJ;QAEA,OAAO,IAAI;MACf,CAAC;MAEDI,WAAW,EAAE,qBAAUd,SAAS,EAAE;QAC9B,IAAIM,OAAO;QACX,IAAIrH,IAAI;QACR,IAAIsH,GAAG;QACP,IAAIC,QAAQ;QACZ,IAAIC,KAAK;QACT,IAAIC,UAAU;QACd,IAAIC,gBAAgB;QACpB,IAAIC,YAAY;QAChB,IAAIpV,CAAC,GAAG,CAAC;QACT,IAAI+B,CAAC,GAAG,CAAC;QAET,IAAIyS,SAAS,EAAE;UACXM,OAAO,GAAGN,SAAS,CAAClH,KAAK,CAAC7C,cAAc,CAAC,IAAI,EAAE;UAE/C,OAAQgD,IAAI,GAAG,IAAI,CAACzN,CAAC,EAAE,CAAC,EAAG;YACvBoV,YAAY,GAAG3H,IAAI,CAACiH,SAAS;YAC7B,IAAIS,gBAAgB,KAAKnW,SAAS,EAC9BmW,gBAAgB,GAAGC,YAAY,KAAKpW,SAAS;YAEjD,IAAImW,gBAAgB,EAAE;cAClB,OAAQF,KAAK,GAAGH,OAAO,CAAC/S,CAAC,EAAE,CAAC;gBACxBqT,YAAY,CAACtC,MAAM,CAACmC,KAAK,CAAC;cAAC;YACnC,CAAC,MACI;cACDD,QAAQ,GAAGvH,IAAI,CAAC+G,SAAS,GAAG7J,SAAS;cACrCoK,GAAG,GAAGtH,IAAI,CAACU,QAAQ,KAAK,CAAC,IAAKzD,SAAS,GAAGyC,gBAAgB,CAAC6H,QAAQ,CAAC,GAAGtK,SAAU;cAEjF,IAAIqK,GAAG,EAAE;gBACL,OAAQE,KAAK,GAAGH,OAAO,CAAC/S,CAAC,EAAE,CAAC;kBACxB,OAAOgT,GAAG,CAACH,OAAO,CAAClK,SAAS,GAAGuK,KAAK,GAAGvK,SAAS,CAAC,GAAG,CAAC,CAAC;oBAClDqK,GAAG,GAAGA,GAAG,CAAC7S,OAAO,CAACwI,SAAS,GAAGuK,KAAK,GAAGvK,SAAS,EAAEA,SAAS,CAAC;kBAAC;gBAAA;gBAEpEwK,UAAU,GAAG/H,gBAAgB,CAAC4H,GAAG,CAAC;gBAClC,IAAIC,QAAQ,KAAKE,UAAU,EACvBzH,IAAI,CAAC+G,SAAS,GAAGU,UAAU;cACnC;YACJ;UACJ;QACJ;QAEA,OAAO,IAAI;MACf,CAAC;MAEDK,IAAI,EAAE,gBAAY;QACd,OAAO,IAAI,CAACvI,IAAI,CAAC,YAAY;UAAE,IAAI,CAAClN,OAAO,CAACL,CAAC,CAAC,CAAC+V,OAAO,GAAG,MAAM;QAAE,CAAC,CAAC;MACvE,CAAC;MAEDC,IAAI,EAAE,gBAAY;QACd,OAAO,IAAI,CAACzI,IAAI,CAAC,YAAY;UAAE,IAAI,CAAClN,OAAO,CAACL,CAAC,CAAC,CAAC+V,OAAO,GAAG,OAAO;QAAE,CAAC,CAAC;MACxE,CAAC;MAEDE,IAAI,EAAE,cAAUC,QAAQ,EAAEvI,KAAK,EAAE;QAC7B,IAAIpN,CAAC,GAAG,CAAC;QACT,IAAI+N,EAAE;QACN,OAAOA,EAAE,GAAG,IAAI,CAAC/N,CAAC,EAAE,CAAC,EAAE;UACnB,IAAIoN,KAAK,KAAKpO,SAAS,EACnB,OAAO+O,EAAE,CAAC6H,YAAY,CAACD,QAAQ,CAAC;UACpC5H,EAAE,CAAC8H,YAAY,CAACF,QAAQ,EAAEvI,KAAK,CAAC;QACpC;QACA,OAAO,IAAI;MACf,CAAC;MAED0I,UAAU,EAAE,oBAAUH,QAAQ,EAAE;QAC5B,OAAO,IAAI,CAAC3I,IAAI,CAAC,YAAY;UAAE,IAAI,CAAC+I,eAAe,CAACJ,QAAQ,CAAC;QAAE,CAAC,CAAC;MACrE,CAAC;MAEDK,MAAM,EAAE,kBAAY;QAChB,IAAIjI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAIkI,IAAI,GAAGlI,EAAE,CAACjO,OAAO,CAACa,GAAG,CAAC,EAAE;QAC5B,IAAI2F,UAAU,GAAGnH,MAAM,CAAC+W,WAAW,IAAInX,QAAQ,CAACsE,eAAe,CAACuH,cAAc,CAAC;QAC/E,IAAIpE,SAAS,GAAGrH,MAAM,CAACgX,WAAW,IAAIpX,QAAQ,CAACsE,eAAe,CAACwH,aAAa,CAAC;QAC7E,OAAO;UACHuL,GAAG,EAAEH,IAAI,CAACG,GAAG,GAAG5P,SAAS;UACzB6P,IAAI,EAAEJ,IAAI,CAACI,IAAI,GAAG/P;QACtB,CAAC;MACL,CAAC;MAEDgQ,QAAQ,EAAE,oBAAY;QAClB,IAAIvI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,OAAO;UACHqI,GAAG,EAAErI,EAAE,CAACwI,SAAS;UACjBF,IAAI,EAAEtI,EAAE,CAACyI;QACb,CAAC;MACL,CAAC;MAEDlQ,UAAU,EAAE,oBAAU8G,KAAK,EAAE;QACzB,IAAIpN,CAAC,GAAG,CAAC;QACT,IAAI+N,EAAE;QACN,OAAOA,EAAE,GAAG,IAAI,CAAC/N,CAAC,EAAE,CAAC,EAAE;UACnB,IAAIoN,KAAK,KAAKpO,SAAS,EACnB,OAAO+O,EAAE,CAACnD,cAAc,CAAC;UAC7BmD,EAAE,CAACnD,cAAc,CAAC,GAAGwC,KAAK;QAC9B;QACA,OAAO,IAAI;MACf,CAAC;MAED5G,SAAS,EAAE,mBAAU4G,KAAK,EAAE;QACxB,IAAIpN,CAAC,GAAG,CAAC;QACT,IAAI+N,EAAE;QACN,OAAOA,EAAE,GAAG,IAAI,CAAC/N,CAAC,EAAE,CAAC,EAAE;UACnB,IAAIoN,KAAK,KAAKpO,SAAS,EACnB,OAAO+O,EAAE,CAAClD,aAAa,CAAC;UAC5BkD,EAAE,CAAClD,aAAa,CAAC,GAAGuC,KAAK;QAC7B;QACA,OAAO,IAAI;MACf,CAAC;MAEDiB,GAAG,EAAE,aAAUjB,KAAK,EAAE;QAClB,IAAIW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAACX,KAAK,EACN,OAAOW,EAAE,CAACX,KAAK;QACnBW,EAAE,CAACX,KAAK,GAAGA,KAAK;QAChB,OAAO,IAAI;MACf,CAAC;MAGD;;MAEAqJ,KAAK,EAAE,iBAAY;QACf,OAAO,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;MACrB,CAAC;MAEDC,IAAI,EAAE,gBAAY;QACd,OAAO,IAAI,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB,CAAC;MAEDA,EAAE,EAAE,YAAUhI,KAAK,EAAE;QACjB,OAAOrC,UAAU,CAAC,IAAI,CAACqC,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,IAAI,CAAC5O,OAAO,CAACG,CAAC,CAAC,GAAGyO,KAAK,CAAC,CAAC;MACzE,CAAC;MAEDkI,IAAI,EAAE,cAAUlJ,QAAQ,EAAE;QACtB,IAAI6D,QAAQ,GAAG,EAAE;QACjB,IAAIvR,CAAC;QACL,IAAI,CAACgN,IAAI,CAAC,YAAY;UAClB,IAAIe,EAAE,GAAG,IAAI;UACb,IAAI8I,EAAE,GAAG9I,EAAE,CAACF,gBAAgB,CAACH,QAAQ,CAAC;UACtC,KAAK1N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6W,EAAE,CAAC/W,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;YAC9BuR,QAAQ,CAAC3B,IAAI,CAACiH,EAAE,CAAC7W,CAAC,CAAC,CAAC;UAAC;QAC7B,CAAC,CAAC;QACF,OAAOqM,UAAU,CAACkF,QAAQ,CAAC;MAC/B,CAAC;MAEDA,QAAQ,EAAE,kBAAU7D,QAAQ,EAAE;QAC1B,IAAI6D,QAAQ,GAAG,EAAE;QACjB,IAAIxD,EAAE;QACN,IAAI8I,EAAE;QACN,IAAI7W,CAAC;QAEL,IAAI,CAACgN,IAAI,CAAC,YAAY;UAClB6J,EAAE,GAAG,IAAI,CAACtF,QAAQ;UAClB,KAAKvR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6W,EAAE,CAAC/W,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;YAChC+N,EAAE,GAAG8I,EAAE,CAAC7W,CAAC,CAAC;YACV,IAAI0N,QAAQ,EAAE;cACV,IAAKK,EAAE,CAACP,OAAO,IAAIO,EAAE,CAACP,OAAO,CAACE,QAAQ,CAAC,IAAKF,OAAO,CAACO,EAAE,EAAEL,QAAQ,CAAC,EAC7D6D,QAAQ,CAAC3B,IAAI,CAAC7B,EAAE,CAAC;YACzB,CAAC,MAEGwD,QAAQ,CAAC3B,IAAI,CAAC7B,EAAE,CAAC;UACzB;QACJ,CAAC,CAAC;QACF,OAAO1B,UAAU,CAACkF,QAAQ,CAAC;MAC/B,CAAC;MAED2B,MAAM,EAAE,gBAAUxF,QAAQ,EAAE;QACxB,IAAIuF,OAAO,GAAG,EAAE;QAChB,IAAIC,MAAM;QACV,IAAI,CAAClG,IAAI,CAAC,YAAY;UAClBkG,MAAM,GAAG,IAAI,CAACtF,UAAU;UACxB,IAAIF,QAAQ,GAAGrB,UAAU,CAAC6G,MAAM,CAAC,CAAC4D,EAAE,CAACpJ,QAAQ,CAAC,GAAG,IAAI,EACjDuF,OAAO,CAACrD,IAAI,CAACsD,MAAM,CAAC;QAC5B,CAAC,CAAC;QACF,OAAO7G,UAAU,CAAC4G,OAAO,CAAC;MAC9B,CAAC;MAED6D,EAAE,EAAE,YAAUpJ,QAAQ,EAAE;QAEpB,IAAIK,EAAE;QACN,IAAI/N,CAAC;QACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACF,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UAClC+N,EAAE,GAAG,IAAI,CAAC/N,CAAC,CAAC;UACZ,IAAI0N,QAAQ,KAAK,UAAU,EACvB,OAAOuD,gBAAgB,CAAClD,EAAE,CAAC;UAC/B,IAAIL,QAAQ,KAAK,SAAS,EACtB,OAAO,CAACuD,gBAAgB,CAAClD,EAAE,CAAC;UAChC,IAAKA,EAAE,CAACP,OAAO,IAAIO,EAAE,CAACP,OAAO,CAACE,QAAQ,CAAC,IAAKF,OAAO,CAACO,EAAE,EAAEL,QAAQ,CAAC,EAC7D,OAAO,IAAI;QACnB;QACA,OAAO,KAAK;MAChB,CAAC;MAEDqG,QAAQ,EAAE,oBAAY;QAClB,IAAIA,QAAQ,GAAG,EAAE;QACjB,IAAIgD,MAAM;QACV,IAAI/W,CAAC;QAEL,IAAI,CAACgN,IAAI,CAAC,YAAY;UAClB+J,MAAM,GAAG,IAAI,CAACpD,UAAU;UACxB,KAAK3T,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+W,MAAM,CAACjX,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;YAClC+T,QAAQ,CAACnE,IAAI,CAACmH,MAAM,CAAC/W,CAAC,CAAC,CAAC;UAAC;QACjC,CAAC,CAAC;QAEF,OAAOqM,UAAU,CAAC0H,QAAQ,CAAC;MAC/B,CAAC;MAED/G,IAAI,EAAE,cAAUC,QAAQ,EAAE;QACtB,OAAOD,KAAI,CAAC,IAAI,EAAEC,QAAQ,CAAC;MAC/B,CAAC;MAGD;;MAEA6B,OAAO,EAAE,iBAAUC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAE;QAClD,OAAO,IAAI,CAAClC,IAAI,CAAC,YAAY;UAAE8B,QAAO,CAAC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,CAAC;QAAE,CAAC,CAAC;MACvF,CAAC;MAEDuB,IAAI,EAAE,cAAUM,MAAM,EAAEiG,IAAI,EAAE;QAC1B,OAAO,IAAI,CAAChK,IAAI,CAAC,YAAY;UAAEyD,KAAI,CAAC,IAAI,EAAEM,MAAM,EAAEiG,IAAI,CAAC;QAAE,CAAC,CAAC;MAC/D;IACJ,CAAC;IAEDlL,MAAM,CAACO,UAAU,EAAE;MACfP,MAAM,EAAEA,MAAM;MACdS,OAAO,EAAEA,OAAO;MAChBG,aAAa,EAAEA,aAAa;MAC5BJ,aAAa,EAAEA,aAAa;MAC5BU,IAAI,EAAEA;IACV,CAAC,CAAC;IAEF,OAAOX,UAAU;EACrB,CAAC,EAAG;EACJ,IAAI4K,SAAS,GAAI,YAAY;IACzB,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,uBAAuB,GAAG,uBAAuB;;IAErD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY,OAAO,UAAUrR,MAAM,EAAEsR,QAAQ,EAAE;MAC/B,IAAIC,MAAM,GAAGtT,SAAS,CAACjE,OAAO,CAACG,CAAC,CAAC;MACjC,IAAIoX,MAAM,GAAG,CAAC,EAAE;QACZ;QACA,OAAOH,QAAQ;MACnB,CAAC,MACI;QACD,IAAIE,QAAQ,EAAE;UACV;UACAtR,MAAM,CAACqR,uBAAuB,CAAC,GAAGC,QAAQ;UAC1CF,QAAQ,CAACtH,IAAI,CAAC9J,MAAM,CAAC;QACzB,CAAC,MACI;UACD,IAAI4I,KAAK,GAAGzL,aAAa,CAAC4D,GAAG,CAACf,MAAM,EAAEoR,QAAQ,CAAC;UAC/C,IAAIxI,KAAK,GAAG,CAAC,CAAC,EAAE;YACZ,IAAI2I,MAAM,GAAG,CAAC,EAAE;cACZ;cACA,OAAOvR,MAAM,CAACqR,uBAAuB,CAAC;cACtCD,QAAQ,CAACrI,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;YAC7B,CAAC,MACI;cACD;cACA,OAAOwI,QAAQ,CAACxI,KAAK,CAAC,CAACyI,uBAAuB,CAAC;YACnD;UACJ;QACJ;MACJ;IACJ,CAAC;EACL,CAAC,EAAG;EACJ,IAAIG,MAAM,GAAI,YAAY;IACtB,IAAIC,OAAO;IACX,IAAIC,eAAe;IACnB,IAAIC,sBAAsB;IAC1B,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,eAAe,GAAI,YAAY;MAC/B,IAAIvQ,IAAI,GAAGnE,aAAa,CAACmE,IAAI;MAC7B,IAAIwQ,qBAAqB,GAAG,CACxBvY,KAAK,CAACK,CAAC;MAAE;MACTL,KAAK,CAACM,CAAC;MAAE;MACTN,KAAK,CAACI,CAAC;MAAE;MACTJ,KAAK,CAACG,CAAC;MAAE;MACTH,KAAK,CAACC,CAAC;MAAE;MACTD,KAAK,CAACE,CAAC;MAAE;MACTF,KAAK,CAACQ,CAAC,CAAE;MAAA,CACZ;;MACD,IAAIgY,sBAAsB,GAAG,GAAG;MAChC,IAAIC,mCAAmC,GAAG,GAAG;MAC7C,IAAIC,sBAAsB,GAAG,CAAC1Y,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACI,CAAC,CAAC;MAC/C,IAAIuY,mBAAmB,GAAG3Y,KAAK,CAACM,CAAC;MACjC,IAAIsY,wBAAwB,GAAG,CAAC5Y,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACK,CAAC,CAAC;MACjD,IAAIwY,mBAAmB,GAAG,CAAC,IAAI,EAAE7Y,KAAK,CAACK,CAAC,CAAC;MACzC,IAAIyY,oBAAoB,GAAG,CAAC,KAAK,EAAE9Y,KAAK,CAACK,CAAC,CAAC;MAC3C,IAAI0Y,gBAAgB,GAAG,CAAC,IAAI,EAAE,CAAC/Y,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACE,CAAC,CAAC,CAAC;MACjD,IAAI8Y,oBAAoB,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAChZ,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACQ,CAAC,CAAC,CAAC;MACjE,IAAIyY,sBAAsB,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,CAACjZ,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACQ,CAAC,CAAC,CAAC;MAC9E,IAAI0Y,mBAAmB,GAAG,uCAAuC;MACjE,IAAIC,6BAA6B,GAAG,yDAAyD;MAC7F,IAAIC,iCAAiC,GAAG,2BAA2B;MACnE,IAAIC,+BAA+B,GAAG,iCAAiC;MACvE,IAAIC,0BAA0B,GAAG;QAC7BnE,SAAS,EAAE,CAAC,eAAe,EAAEuD,sBAAsB,CAAC;QAAiB;QACrEa,MAAM,EAAE,CAAC,MAAM,EAAEL,mBAAmB,CAAC;QAAgC;QACrEM,eAAe,EAAEX,mBAAmB;QAAiC;QACrEY,UAAU,EAAEZ,mBAAmB;QAAsC;QACrEa,YAAY,EAAEb,mBAAmB;QAAoC;QACrEc,eAAe,EAAEb,oBAAoB;QAAgC;QACrEc,UAAU,EAAE,CAAC,IAAI,EAAEhB,wBAAwB,CAAC;QAAyB;QACrEiB,kBAAkB,EAAE,CAAC,EAAE,EAAElB,mBAAmB,CAAC;QAAwB;QACrEmB,YAAY,EAAEd,oBAAoB;QAAmC;QACrEe,wBAAwB,EAAE;UACtBC,oBAAoB,EAAElB,oBAAoB;UAAuB;UACjEmB,UAAU,EAAEpB,mBAAmB,CAAkC;QACrE,CAAC;;QACDqB,gBAAgB,EAAE;UACdpW,CAAC,EAAE,CAAC,QAAQ,EAAEqV,6BAA6B,CAAC;UAAqB;UACjEnS,CAAC,EAAE,CAAC,QAAQ,EAAEmS,6BAA6B,CAAC,CAAqB;QACrE,CAAC;;QACDgB,UAAU,EAAE;UACRC,UAAU,EAAE,CAAC,MAAM,EAAEhB,iCAAiC,CAAC;UAAU;UACjEiB,QAAQ,EAAE,CAAC,OAAO,EAAEhB,+BAA+B,CAAC;UAAa;UACjEiB,aAAa,EAAE,CAAC,GAAG,EAAE3B,mBAAmB,CAAC;UAAwB;UACjE4B,aAAa,EAAE1B,mBAAmB;UAA+B;UACjE2B,cAAc,EAAE1B,oBAAoB;UAA6B;UACjE2B,YAAY,EAAE5B,mBAAmB;UAAgC;UACjE6B,UAAU,EAAE5B,oBAAoB,CAAiC;QACrE,CAAC;;QACD6B,QAAQ,EAAE;UACNC,QAAQ,EAAE9B,oBAAoB;UAAmC;UACjE+B,SAAS,EAAE/B,oBAAoB;UAAkC;UACjEgC,cAAc,EAAE7B,sBAAsB,CAA2B;QACrE,CAAC;;QACD8B,SAAS,EAAE;UACPC,aAAa,EAAEjC,gBAAgB;UAAkC;UACjEkC,yBAAyB,EAAElC,gBAAgB;UAAsB;UACjEmC,WAAW,EAAEnC,gBAAgB;UAAoC;UACjEoC,aAAa,EAAEpC,gBAAgB;UAAkC;UACjEqC,QAAQ,EAAErC,gBAAgB;UAAuC;UACjEsC,YAAY,EAAEtC,gBAAgB;UAAmC;UACjEuC,iBAAiB,EAAEvC,gBAAgB;UAA8B;UACjEwC,uBAAuB,EAAExC,gBAAgB;UAAwB;UACjEyC,kBAAkB,EAAEzC,gBAAgB;UAA6B;UACjE0C,oBAAoB,EAAE1C,gBAAgB;UAA2B;UACjE2C,iBAAiB,EAAE3C,gBAAgB;UAA8B;UACjE4C,SAAS,EAAE5C,gBAAgB,CAAsC;QACrE;MACJ,CAAC;;MACD,IAAI6C,OAAO,GAAG,SAAVA,OAAO,CAAaC,QAAQ,EAAE;QAC9B,IAAIC,SAAS,GAAG,SAAZA,SAAS,CAAa9T,GAAG,EAAE;UAC3B,IAAIsF,GAAG;UACP,IAAI0B,GAAG;UACP,IAAI+M,OAAO;UACX,KAAKzO,GAAG,IAAItF,GAAG,EAAE;YACb,IAAI,CAACA,GAAG,CAACvH,OAAO,CAACY,GAAG,CAAC,CAACiM,GAAG,CAAC,EACtB;YACJ0B,GAAG,GAAGhH,GAAG,CAACsF,GAAG,CAAC;YACdyO,OAAO,GAAGhU,IAAI,CAACiH,GAAG,CAAC;YACnB,IAAI+M,OAAO,IAAI/b,KAAK,CAACG,CAAC,EAClB6H,GAAG,CAACsF,GAAG,CAAC,GAAG0B,GAAG,CAAC6M,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAChC,IAAIE,OAAO,IAAI/b,KAAK,CAACC,CAAC,EACvB+H,GAAG,CAACsF,GAAG,CAAC,GAAGwO,SAAS,CAAC9M,GAAG,CAAC;UACjC;UACA,OAAOhH,GAAG;QACd,CAAC;QACD,OAAO8T,SAAS,CAAC3Q,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE6M,0BAA0B,CAAC,CAAC;MAC5E,CAAC;MAED,OAAO;QACH0C,SAAS,EAAEJ,OAAO,EAAE;QAEpBK,SAAS,EAAEL,OAAO,CAAC,IAAI,CAAC;QAExB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;QACoBM,SAAS,EAAE,mBAAUlU,GAAG,EAAE6T,QAAQ,EAAEM,WAAW,EAAEC,OAAO,EAAE;UACtD,IAAIC,gBAAgB,GAAG,CAAC,CAAC;UACzB,IAAIC,wBAAwB,GAAG,CAAC,CAAC;UACjC,IAAIC,UAAU,GAAGpR,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAEzE,GAAG,CAAC;UAChD,IAAIkF,OAAO,GAAG/B,SAAS,CAAC+B,OAAO;UAC/B,IAAIsP,UAAU,GAAGrR,SAAS,CAACkC,aAAa;UACxC,IAAIoP,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAaC,IAAI,EAAEb,QAAQ,EAAEc,QAAQ,EAAEN,gBAAgB,EAAEC,wBAAwB,EAAEM,YAAY,EAAE;YACjH,KAAK,IAAItZ,IAAI,IAAIuY,QAAQ,EAAE;cACvB,IAAIA,QAAQ,CAACpb,OAAO,CAACY,GAAG,CAAC,CAACiC,IAAI,CAAC,IAAIoZ,IAAI,CAACjc,OAAO,CAACY,GAAG,CAAC,CAACiC,IAAI,CAAC,EAAE;gBACxD,IAAIuZ,OAAO,GAAG,KAAK;gBACnB,IAAIC,MAAM,GAAG,KAAK;gBAClB,IAAIC,aAAa,GAAGlB,QAAQ,CAACvY,IAAI,CAAC;gBAClC,IAAI0Z,iBAAiB,GAAGjV,IAAI,CAACgV,aAAa,CAAC;gBAC3C,IAAIE,iBAAiB,GAAGD,iBAAiB,IAAIhd,KAAK,CAACC,CAAC;gBACpD,IAAIid,aAAa,GAAG,CAACtZ,aAAa,CAACgE,GAAG,CAACmV,aAAa,CAAC,GAAG,CAACA,aAAa,CAAC,GAAGA,aAAa;gBACvF,IAAII,aAAa,GAAGR,QAAQ,CAACrZ,IAAI,CAAC;gBAClC,IAAI8Z,SAAS,GAAGV,IAAI,CAACpZ,IAAI,CAAC;gBAC1B,IAAI+Z,aAAa,GAAGtV,IAAI,CAACqV,SAAS,CAAC;gBACnC,IAAIE,UAAU,GAAGV,YAAY,GAAGA,YAAY,GAAG,GAAG,GAAG,EAAE;gBACvD,IAAIW,KAAK,GAAG,eAAe,GAAGD,UAAU,GAAGha,IAAI,GAAG,wBAAwB;gBAC1E,IAAIka,kBAAkB,GAAG,EAAE;gBAC3B,IAAIC,sBAAsB,GAAG,EAAE;gBAC/B,IAAIC,2BAA2B;gBAC/B,IAAIC,wCAAwC;gBAC5C,IAAIC,iBAAiB;gBACrB,IAAIC,eAAe;gBACnB,IAAIC,QAAQ;gBACZ,IAAInd,CAAC;gBACL,IAAI+B,CAAC;gBACL,IAAIqb,CAAC;gBAELZ,aAAa,GAAGA,aAAa,KAAKxd,SAAS,GAAG,CAAC,CAAC,GAAGwd,aAAa;;gBAEhE;gBACA,IAAIF,iBAAiB,IAAII,aAAa,IAAIrd,KAAK,CAACC,CAAC,EAAE;kBAC/Coc,gBAAgB,CAAC/Y,IAAI,CAAC,GAAG,CAAC,CAAC;kBAC3BgZ,wBAAwB,CAAChZ,IAAI,CAAC,GAAG,CAAC,CAAC;kBACnCmZ,gBAAgB,CAACW,SAAS,EAAEL,aAAa,EAAEI,aAAa,EAAEd,gBAAgB,CAAC/Y,IAAI,CAAC,EAAEgZ,wBAAwB,CAAChZ,IAAI,CAAC,EAAEga,UAAU,GAAGha,IAAI,CAAC;kBACpI6H,SAAS,CAACwC,IAAI,CAAC,CAAC+O,IAAI,EAAEL,gBAAgB,EAAEC,wBAAwB,CAAC,EAAE,UAAUjN,KAAK,EAAEtB,KAAK,EAAE;oBACvF,IAAIyO,UAAU,CAACzO,KAAK,CAACzK,IAAI,CAAC,CAAC,EAAE;sBACzB,OAAOyK,KAAK,CAACzK,IAAI,CAAC;oBACtB;kBACJ,CAAC,CAAC;gBACN,CAAC,MACI,IAAI,CAAC2Z,iBAAiB,EAAE;kBACzB,KAAKtc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuc,aAAa,CAACzc,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;oBAC3Cmd,QAAQ,GAAGZ,aAAa,CAACvc,CAAC,CAAC;oBAC3Bqc,iBAAiB,GAAGjV,IAAI,CAAC+V,QAAQ,CAAC;oBAClC;oBACAF,iBAAiB,GAAGZ,iBAAiB,IAAIhd,KAAK,CAACI,CAAC,IAAI8M,OAAO,CAAC4Q,QAAQ,EAAEvF,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBACnG,IAAIqF,iBAAiB,EAAE;sBACnBJ,kBAAkB,CAACjN,IAAI,CAACvQ,KAAK,CAACI,CAAC,CAAC;;sBAEhC;sBACAsd,2BAA2B,GAAGI,QAAQ,CAAC1a,KAAK,CAACoV,sBAAsB,CAAC;sBACpEiF,sBAAsB,GAAGA,sBAAsB,CAAC3Y,MAAM,CAAC4Y,2BAA2B,CAAC;sBACnF,KAAKhb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgb,2BAA2B,CAACjd,OAAO,CAACG,CAAC,CAAC,EAAE8B,CAAC,EAAE,EAAE;wBACzD;wBACAib,wCAAwC,GAAGD,2BAA2B,CAAChb,CAAC,CAAC,CAACU,KAAK,CAACqV,mCAAmC,CAAC;wBACpHoF,eAAe,GAAGF,wCAAwC,CAAC,CAAC,CAAC;wBAC7D,KAAKI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,wCAAwC,CAACld,OAAO,CAACG,CAAC,CAAC,EAAEmd,CAAC,EAAE,EAAE;0BACtE;0BACA,IAAIX,SAAS,KAAKO,wCAAwC,CAACI,CAAC,CAAC,EAAE;4BAC3DlB,OAAO,GAAG,IAAI;4BACd;0BACJ;wBACJ;wBACA,IAAIA,OAAO,EACP;sBACR;oBACJ,CAAC,MACI;sBACDW,kBAAkB,CAACjN,IAAI,CAACuN,QAAQ,CAAC;sBAEjC,IAAIT,aAAa,KAAKS,QAAQ,EAAE;wBAC5BjB,OAAO,GAAG,IAAI;wBACd;sBACJ;oBACJ;kBACJ;kBAEA,IAAIA,OAAO,EAAE;oBACTC,MAAM,GAAGM,SAAS,KAAKD,aAAa;oBAEpC,IAAIL,MAAM,EACNT,gBAAgB,CAAC/Y,IAAI,CAAC,GAAG8Z,SAAS;oBAEtC,IAAIQ,iBAAiB,GAAG1Q,OAAO,CAACiQ,aAAa,EAAEQ,wCAAwC,CAAC,GAAG,CAAC,GAAGb,MAAM,EACjGR,wBAAwB,CAAChZ,IAAI,CAAC,GAAGsa,iBAAiB,GAAGC,eAAe,GAAGT,SAAS;kBACxF,CAAC,MACI,IAAIjB,WAAW,EAAE;oBAClB6B,OAAO,CAACC,IAAI,CAACV,KAAK,GAAG,gCAAgC,GAAGF,aAAa,CAACtb,WAAW,EAAE,GAAG,yBAAyB,GAAGqb,SAAS,GAAG,SAAS,GACnI,wBAAwB,GAAGI,kBAAkB,CAACtP,IAAI,CAAC,IAAI,CAAC,CAACnM,WAAW,EAAE,GAAG,KAAK,IAC7E0b,sBAAsB,CAAC7a,MAAM,CAAC,GAAG,CAAC,GAAG,2BAA2B,GAAG6a,sBAAsB,CAACvP,IAAI,CAAC,IAAI,CAAC,CAAC9K,KAAK,CAACqV,mCAAmC,CAAC,CAACvK,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;kBAClL;kBACA,OAAOwO,IAAI,CAACpZ,IAAI,CAAC;gBACrB;cACJ;YACJ;UACJ,CAAC;UACDmZ,gBAAgB,CAACF,UAAU,EAAEV,QAAQ,EAAEO,OAAO,IAAI,CAAC,CAAC,EAAEC,gBAAgB,EAAEC,wBAAwB,CAAC;;UAEjG;UACA;AACxB;AACA;AACA;AACA;AACA;;UAEwB,IAAI,CAACE,UAAU,CAACD,UAAU,CAAC,IAAIJ,WAAW,EACtC6B,OAAO,CAACC,IAAI,CAAC,4DAA4D,GAAGne,MAAM,CAACoe,IAAI,CAACC,SAAS,CAAC5B,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UAE3H,OAAO;YACH6B,QAAQ,EAAE/B,gBAAgB;YAC1BgC,SAAS,EAAE/B;UACf,CAAC;QACL;MACJ,CAAC;IACL,CAAC,EAAG;;IAEJ;AACZ;AACA;IACY,SAASgC,4BAA4B,GAAG;MACpC,IAAI,CAACnG,eAAe,EAChBA,eAAe,GAAG,IAAIoG,wBAAwB,CAACjG,eAAe,CAAC0D,SAAS,CAAC;MAC7E,IAAI,CAAC5D,sBAAsB,EACvBA,sBAAsB,GAAG,IAAIoG,+BAA+B,CAACrG,eAAe,CAAC;IACrF;;IAEA;AACZ;AACA;AACA;AACA;IACY,SAASoG,wBAAwB,CAACE,cAAc,EAAE;MAC9C,IAAIC,KAAK,GAAG,IAAI;MAChB,IAAIC,WAAW,GAAG,UAAU;MAC5B,IAAIC,SAAS,GAAG,QAAQ;MACxB,IAAIC,SAAS,GAAG,QAAQ;MACxB,IAAIC,WAAW,GAAG3T,SAAS,CAAC,MAAM,CAAC;MACnC,IAAI4T,qBAAqB,GAAG5T,SAAS,CAAC,qDAAqD,CAAC;MAC5F,IAAI6T,sBAAsB,GAAGD,qBAAqB,CAAC,CAAC,CAAC;MACrD,IAAIE,mBAAmB,GAAG9T,SAAS,CAAC4T,qBAAqB,CAAC7M,QAAQ,CAAC,KAAK,CAAC,CAACmF,EAAE,CAAC,CAAC,CAAC,CAAC;MAEhFyH,WAAW,CAACzL,MAAM,CAAC0L,qBAAqB,CAAC;MACzCA,qBAAqB,CAAC7I,IAAI,EAAE,CAACE,IAAI,EAAE,CAAC,CAAC;;MAErC,IAAI8I,mBAAmB,GAAGC,uBAAuB,CAACH,sBAAsB,CAAC;MACzE,IAAII,yBAAyB,GAAG;QAC5Btb,CAAC,EAAEob,mBAAmB,CAACpb,CAAC,KAAK,CAAC;QAC9BkD,CAAC,EAAEkY,mBAAmB,CAAClY,CAAC,KAAK;MACjC,CAAC;MACD,IAAIqY,IAAI,GAAI,YAAY;QACpB,IAAIC,EAAE,GAAGxf,MAAM,CAACyf,SAAS,CAACC,SAAS;QACnC,IAAIC,UAAU,GAAG,SAAS;QAC1B,IAAIC,YAAY,GAAG,WAAW;QAC9B,IAAIL,IAAI,GAAGC,EAAE,CAACG,UAAU,CAAC,CAAC,OAAO,CAAC;QAClC,IAAIE,OAAO,GAAGL,EAAE,CAACG,UAAU,CAAC,CAAC,UAAU,CAAC;QACxC,IAAIG,IAAI,GAAGN,EAAE,CAACG,UAAU,CAAC,CAAC,OAAO,CAAC;QAClC,IAAII,EAAE,GAAGP,EAAE,CAACG,UAAU,CAAC,CAAC,KAAK,CAAC;QAC9B,IAAIpd,MAAM;QACV,IAAIyd,YAAY,GAAGC,QAAQ;;QAE3B;QACA,IAAIV,IAAI,GAAG,CAAC,EACRhd,MAAM,GAAGyd,YAAY,CAACR,EAAE,CAACI,YAAY,CAAC,CAACL,IAAI,GAAG,CAAC,EAAEC,EAAE,CAACG,UAAU,CAAC,CAAC,GAAG,EAAEJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;;QAEpF;QAAA,KACK,IAAIM,OAAO,GAAG,CAAC,EAChBtd,MAAM,GAAGyd,YAAY,CAACR,EAAE,CAACI,YAAY,CAAC,CAACG,EAAE,GAAG,CAAC,EAAEP,EAAE,CAACG,UAAU,CAAC,CAAC,GAAG,EAAEI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;;QAEhF;QAAA,KACK,IAAID,IAAI,GAAG,CAAC,EACbvd,MAAM,GAAGyd,YAAY,CAACR,EAAE,CAACI,YAAY,CAAC,CAACE,IAAI,GAAG,CAAC,EAAEN,EAAE,CAACG,UAAU,CAAC,CAAC,GAAG,EAAEG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;;QAEpF;QACA,OAAOvd,MAAM;MACjB,CAAC,EAAG;MAEJ8I,SAAS,CAACsB,MAAM,CAACiS,KAAK,EAAE;QACpBD,cAAc,EAAEA,cAAc;QAC9BY,IAAI,EAAEA,IAAI;QACVW,cAAc,EAAE,KAAK;QACrBC,qBAAqB,EAAE,CAACrc,aAAa,CAACqB,EAAE,EAAE;QAC1Cia,mBAAmB,EAAEA,mBAAmB;QACxCE,yBAAyB,EAAEA,yBAAyB;QACpDc,sBAAsB,EAAG,YAAY;UACjC,IAAI7d,MAAM,GAAG,KAAK;UAClB0c,qBAAqB,CAACvJ,QAAQ,CAAC,yCAAyC,CAAC;UACzE,IAAI;YACAnT,MAAM,GAAI0c,qBAAqB,CAACvO,GAAG,CAAC,iBAAiB,CAAC,KAAK,MAAM,KAAK6O,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI,CAAC,IAAKvf,MAAM,CAACiV,gBAAgB,CAACiK,sBAAsB,EAAE,qBAAqB,CAAC,CAAC/J,gBAAgB,CAAC,SAAS,CAAC,KAAK,MAAM;UAC9M,CAAC,CAAC,OAAOkL,EAAE,EAAE,CAAE;;UAEf;UACA;UACA;UACA;;UAEA,OAAO9d,MAAM;QACjB,CAAC,EAAG;QACJ+d,yBAAyB,EAAE;UAAEtc,CAAC,EAAE,EAAE;UAAEkD,CAAC,EAAE;QAAG,CAAC;QAC3CqZ,OAAO,EAAE9e,OAAO,CAACuB,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,IAAI,IAAI;QACpEwd,mBAAmB,EAAG,YAAY;UAC9B;UACA;UACAvB,qBAAqB,CAACvO,GAAG,CAACmO,WAAW,EAAEC,SAAS,CAAC;UACjD,IAAI2B,UAAU,GAAG;YACb3X,CAAC,EAAEoW,sBAAsB,CAACve,OAAO,CAACW,EAAE,CAAC;YACrCof,CAAC,EAAExB,sBAAsB,CAACve,OAAO,CAACQ,EAAE;UACxC,CAAC;UACD8d,qBAAqB,CAACvO,GAAG,CAACmO,WAAW,EAAE,SAAS,CAAC;UACjD,IAAI8B,WAAW,GAAG;YACd7X,CAAC,EAAEoW,sBAAsB,CAACve,OAAO,CAACW,EAAE,CAAC;YACrCof,CAAC,EAAExB,sBAAsB,CAACve,OAAO,CAACQ,EAAE;UACxC,CAAC;UACD,OAAQsf,UAAU,CAAC3X,CAAC,GAAG6X,WAAW,CAAC7X,CAAC,KAAM,CAAC,IAAK2X,UAAU,CAACC,CAAC,GAAGC,WAAW,CAACD,CAAC,KAAM,CAAC;QACvF,CAAC,EAAG;QACJE,iBAAiB,EAAG,YAAY;UAC5B3B,qBAAqB,CAACvO,GAAG,CAAC;YAAE,YAAY,EAAEoO,SAAS;YAAE,YAAY,EAAEC,SAAS;YAAE,WAAW,EAAE;UAAM,CAAC,CAAC,CAAC5X,UAAU,CAAC,CAAC,CAAC;UACjH,IAAI0Z,oBAAoB,GAAG5B,qBAAqB,CAACpI,MAAM,EAAE;UACzD,IAAIiK,yBAAyB,GAAG3B,mBAAmB,CAACtI,MAAM,EAAE;UAC5D;UACAoI,qBAAqB,CAAC9X,UAAU,CAAC,CAAC,GAAG,CAAC;UACtC,IAAI4Z,oCAAoC,GAAG5B,mBAAmB,CAACtI,MAAM,EAAE;UACvE,OAAO;YACH;YACA;YACA;YACA;YACAhW,CAAC,EAAEggB,oBAAoB,CAAC3J,IAAI,KAAK4J,yBAAyB,CAAC5J,IAAI;YAC/D;YACA;YACA;YACA;YACA1W,CAAC,EAAEsgB,yBAAyB,CAAC5J,IAAI,KAAK6J,oCAAoC,CAAC7J;UAC/E,CAAC;QACL,CAAC,EAAG;QACJ8J,gBAAgB,EAAE,CAAC,CAACvf,OAAO,CAACY,YAAY,CAAC,WAAW,CAAC;QACrD4e,iBAAiB,EAAE,CAAC,CAACxf,OAAO,CAACY,YAAY,CAAC,YAAY,CAAC;QACvD6e,oBAAoB,EAAG,YAAY;UAC/B,IAAIC,eAAe,GAAG,KAAK;UAC3B,IAAI;YACAnhB,MAAM,CAAC0S,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAEvK,MAAM,CAACiZ,cAAc,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE;cACvEC,GAAG,EAAE,eAAY;gBACbF,eAAe,GAAG,IAAI;cAC1B;YACJ,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,OAAOtZ,CAAC,EAAE,CAAE;UACd,OAAOsZ,eAAe;QAC1B,CAAC,EAAG;QACJG,qBAAqB,EAAE,CAAC,CAACxd,aAAa,CAACsB,EAAE,EAAE;QAC3Cmc,uBAAuB,EAAE,CAAC,CAACzd,aAAa,CAACqB,EAAE;MAC/C,CAAC,CAAC;MAEF8Z,qBAAqB,CAACtI,UAAU,CAAChW,OAAO,CAACL,CAAC,CAAC,CAACqT,MAAM,EAAE;;MAEpD;MACA,CAAC,YAAY;QACT,IAAI2L,yBAAyB,CAACtb,CAAC,IAAIsb,yBAAyB,CAACpY,CAAC,EAC1D;QAEJ,IAAIiC,GAAG,GAAGd,IAAI,CAACc,GAAG;QAClB,IAAIqY,WAAW,GAAG1d,aAAa,CAACmB,EAAE,EAAE;QACpC,IAAIwc,YAAY,GAAG3d,aAAa,CAACoB,EAAE,EAAE;QACrC,IAAIwc,SAAS,GAAGC,YAAY,EAAE;QAC9B,IAAIC,QAAQ,GAAG,SAAXA,QAAQ,GAAe;UACvB,IAAI9J,SAAS,EAAE,CAAChV,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI+e,IAAI,GAAG/d,aAAa,CAACmB,EAAE,EAAE;YAC7B,IAAI6c,IAAI,GAAGhe,aAAa,CAACoB,EAAE,EAAE;YAC7B,IAAI6c,MAAM,GAAGF,IAAI,GAAGL,WAAW;YAC/B,IAAIQ,MAAM,GAAGF,IAAI,GAAGL,YAAY;YAEhC,IAAIM,MAAM,KAAK,CAAC,IAAIC,MAAM,KAAK,CAAC,EAC5B;YAEJ,IAAIC,WAAW,GAAG5Z,IAAI,CAAC6Z,KAAK,CAACL,IAAI,IAAIL,WAAW,GAAG,KAAK,CAAC,CAAC;YAC1D,IAAIW,WAAW,GAAG9Z,IAAI,CAAC6Z,KAAK,CAACJ,IAAI,IAAIL,YAAY,GAAG,KAAK,CAAC,CAAC;YAC3D,IAAIW,SAAS,GAAGjZ,GAAG,CAAC4Y,MAAM,CAAC;YAC3B,IAAIM,SAAS,GAAGlZ,GAAG,CAAC6Y,MAAM,CAAC;YAC3B,IAAIM,cAAc,GAAGnZ,GAAG,CAAC8Y,WAAW,CAAC;YACrC,IAAIM,cAAc,GAAGpZ,GAAG,CAACgZ,WAAW,CAAC;YACrC,IAAIK,MAAM,GAAGb,YAAY,EAAE;YAE3B,IAAIc,aAAa,GAAGL,SAAS,GAAG,CAAC,IAAIC,SAAS,GAAG,CAAC;YAClD,IAAIK,UAAU,GAAG,CAACC,yBAAyB,CAACL,cAAc,EAAEC,cAAc,CAAC;YAC3E,IAAIK,UAAU,GAAGJ,MAAM,KAAKd,SAAS,IAAIA,SAAS,GAAG,CAAC;YACtD,IAAImB,MAAM,GAAGJ,aAAa,IAAIC,UAAU,IAAIE,UAAU;YACtD,IAAIE,gBAAgB,GAAGlE,KAAK,CAACQ,mBAAmB;YAChD,IAAI2D,gBAAgB;YAEpB,IAAIF,MAAM,EAAE;cACR7D,WAAW,CAACzL,MAAM,CAAC0L,qBAAqB,CAAC;cACzC8D,gBAAgB,GAAGnE,KAAK,CAACQ,mBAAmB,GAAGC,uBAAuB,CAACJ,qBAAqB,CAAC,CAAC,CAAC,CAAC;cAChGA,qBAAqB,CAACtL,MAAM,EAAE;cAC9B,IAAImP,gBAAgB,CAAC9e,CAAC,KAAK+e,gBAAgB,CAAC/e,CAAC,IAAI8e,gBAAgB,CAAC5b,CAAC,KAAK6b,gBAAgB,CAAC7b,CAAC,EAAE;gBACxFmE,SAAS,CAACwC,IAAI,CAACiK,SAAS,EAAE,EAAE,YAAY;kBACpC,IAAIA,SAAS,CAAC,IAAI,CAAC,EACfA,SAAS,CAAC,IAAI,CAAC,CAACkL,MAAM,CAAC,MAAM,CAAC;gBACtC,CAAC,CAAC;cACN;YACJ;YAEAxB,WAAW,GAAGK,IAAI;YAClBJ,YAAY,GAAGK,IAAI;YACnBJ,SAAS,GAAGc,MAAM;UACtB;QACJ,CAAC;QAED,SAASG,yBAAyB,CAACM,MAAM,EAAEC,MAAM,EAAE;UAC/C,IAAIC,SAAS,GAAGha,GAAG,CAAC8Z,MAAM,CAAC;UAC3B,IAAIG,SAAS,GAAGja,GAAG,CAAC+Z,MAAM,CAAC;UAC3B,OAAO,EAAEC,SAAS,KAAKC,SAAS,IAAID,SAAS,GAAG,CAAC,KAAKC,SAAS,IAAID,SAAS,GAAG,CAAC,KAAKC,SAAS,CAAC;QACnG;QAEA,SAASzB,YAAY,GAAG;UACpB,IAAI0B,IAAI,GAAGrjB,MAAM,CAACsjB,MAAM,CAACC,UAAU,IAAI,CAAC;UACxC,IAAIC,IAAI,GAAGxjB,MAAM,CAACsjB,MAAM,CAACG,WAAW,IAAI,CAAC;UACzC,OAAOzjB,MAAM,CAAC0jB,gBAAgB,IAAKL,IAAI,GAAGG,IAAK;QACnD;QAEAnY,SAAS,CAACrL,MAAM,CAAC,CAACsS,EAAE,CAAC,QAAQ,EAAEsP,QAAQ,CAAC;MAC5C,CAAC,GAAG;MAEJ,SAASvC,uBAAuB,CAACsE,cAAc,EAAE;QAC7C,OAAO;UACH3f,CAAC,EAAE2f,cAAc,CAAChjB,OAAO,CAACM,EAAE,CAAC,GAAG0iB,cAAc,CAAChjB,OAAO,CAACO,EAAE,CAAC;UAC1DgG,CAAC,EAAEyc,cAAc,CAAChjB,OAAO,CAACS,EAAE,CAAC,GAAGuiB,cAAc,CAAChjB,OAAO,CAACU,EAAE;QAC7D,CAAC;MACL;IACJ;;IAEA;AACZ;AACA;AACA;IACY,SAASqd,+BAA+B,CAACkF,OAAO,EAAE;MAC9C,IAAIhF,KAAK,GAAG,IAAI;MAChB,IAAIiF,QAAQ,GAAGxY,SAAS,CAAC+B,OAAO;MAChC,IAAI0W,OAAO,GAAGhgB,aAAa,CAAC4B,GAAG;MAC/B,IAAIqe,cAAc,GAAG,YAAY;MACjC,IAAIC,sBAAsB,GAAGD,cAAc,GAAG,UAAU;MACxD,IAAIE,UAAU,GAAGtjB,OAAO,CAACG,CAAC;MAC1B,IAAIojB,iBAAiB,GAAG,EAAE;MAC1B,IAAIC,8BAA8B,GAAG,EAAE;MACvC,IAAIC,aAAa,GAAG,KAAK;MACzB,IAAIC,oBAAoB,GAAG,EAAE;MAC7B,IAAIC,aAAa,GAAGD,oBAAoB;MACxC,IAAIE,YAAY,GAAGT,OAAO,EAAE;MAC5B,IAAIU,OAAO;;MAGX;AAChB;AACA;MACgB,IAAIC,IAAI,GAAG,SAAPA,IAAI,GAAe;QACnB,IAAIP,iBAAiB,CAACD,UAAU,CAAC,GAAG,CAAC,IAAIG,aAAa,EAAE;UACpDI,OAAO,GAAG1gB,aAAa,CAACuB,GAAG,EAAE,CAAC,YAAY;YACtCof,IAAI,EAAE;UACV,CAAC,CAAC;UACF,IAAIC,OAAO,GAAGZ,OAAO,EAAE;UACvB,IAAIa,SAAS,GAAGD,OAAO,GAAGH,YAAY;UACtC,IAAIK,cAAc;UAClB,IAAI3M,QAAQ;UACZ,IAAI4M,eAAe;UACnB,IAAIC,yBAAyB;UAC7B,IAAIC,0BAA0B;UAC9B,IAAIrf,GAAG;UAEP,IAAIif,SAAS,GAAGL,aAAa,EAAE;YAC3BC,YAAY,GAAGG,OAAO,GAAIC,SAAS,GAAGL,aAAc;YACpDM,cAAc,GAAGP,oBAAoB;YACrC,KAAK,IAAIxjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqjB,iBAAiB,CAACD,UAAU,CAAC,EAAEpjB,CAAC,EAAE,EAAE;cACpDoX,QAAQ,GAAGiM,iBAAiB,CAACrjB,CAAC,CAAC;cAC/B,IAAIoX,QAAQ,KAAKpY,SAAS,EAAE;gBACxBglB,eAAe,GAAG5M,QAAQ,CAAClL,OAAO,EAAE;gBACpC+X,yBAAyB,GAAGD,eAAe,CAACd,cAAc,CAAC;gBAC3DgB,0BAA0B,GAAG1c,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAEsT,eAAe,CAACb,sBAAsB,CAAC,CAAC;gBACjFte,GAAG,GAAGoe,OAAO,EAAE;gBAEf,IAAI,CAACgB,yBAAyB,KAAK,IAAI,IAAIA,yBAAyB,KAAK,IAAI,KAAMpf,GAAG,GAAGye,8BAA8B,CAACtjB,CAAC,CAAC,GAAIkkB,0BAA0B,EAAE;kBACtJ9M,QAAQ,CAAC+K,MAAM,CAAC,MAAM,CAAC;kBACvBmB,8BAA8B,CAACtjB,CAAC,CAAC,GAAG,IAAI8E,IAAI,CAACD,GAAG,IAAIqf,0BAA0B,CAAC;gBACnF;gBAEAH,cAAc,GAAGvc,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAElJ,IAAI,CAAC2c,GAAG,CAACJ,cAAc,EAAEG,0BAA0B,CAAC,CAAC;cACtF;YACJ;YACAT,aAAa,GAAGM,cAAc;UAClC;QACJ,CAAC,MAAM;UACHN,aAAa,GAAGD,oBAAoB;QACxC;MACJ,CAAC;;MAED;AAChB;AACA;AACA;MACgBzF,KAAK,CAAC1I,GAAG,GAAG,UAAU+B,QAAQ,EAAE;QAC5B,IAAI4L,QAAQ,CAAC5L,QAAQ,EAAEiM,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE;UAC9CA,iBAAiB,CAACzT,IAAI,CAACwH,QAAQ,CAAC;UAChCkM,8BAA8B,CAAC1T,IAAI,CAACqT,OAAO,EAAE,CAAC;UAC9C,IAAII,iBAAiB,CAACD,UAAU,CAAC,GAAG,CAAC,IAAI,CAACG,aAAa,EAAE;YACrDA,aAAa,GAAG,IAAI;YACpBR,OAAO,CAAC1D,cAAc,GAAGkE,aAAa;YACtCK,IAAI,EAAE;UACV;QACJ;MACJ,CAAC;;MAED;AAChB;AACA;AACA;MACgB7F,KAAK,CAACjL,MAAM,GAAG,UAAUsE,QAAQ,EAAE;QAC/B,IAAI1I,KAAK,GAAGsU,QAAQ,CAAC5L,QAAQ,EAAEiM,iBAAiB,CAAC;QACjD,IAAI3U,KAAK,GAAG,CAAC,CAAC,EAAE;UACZ;UACA4U,8BAA8B,CAACzU,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;UAC/C2U,iBAAiB,CAACxU,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;UAElC;UACA,IAAI2U,iBAAiB,CAACD,UAAU,CAAC,KAAK,CAAC,IAAIG,aAAa,EAAE;YACtDA,aAAa,GAAG,KAAK;YACrBR,OAAO,CAAC1D,cAAc,GAAGkE,aAAa;YACtC,IAAII,OAAO,KAAK3kB,SAAS,EAAE;cACvBiE,aAAa,CAACyB,GAAG,EAAE,CAACif,OAAO,CAAC;cAC5BA,OAAO,GAAG,CAAC,CAAC;YAChB;UACJ;QACJ;MACJ,CAAC;IACL;;IAEA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACY,SAASS,yBAAyB,CAACC,mBAAmB,EAAEnY,OAAO,EAAEoY,UAAU,EAAEvB,OAAO,EAAE1D,cAAc,EAAE;MAClG;MACA,IAAIjY,IAAI,GAAGnE,aAAa,CAACmE,IAAI;MAC7B,IAAImF,OAAO,GAAG/B,SAAS,CAAC+B,OAAO;MAC/B,IAAIS,IAAI,GAAGxC,SAAS,CAACwC,IAAI;;MAEzB;MACA,IAAI+Q,KAAK,GAAG,IAAIxG,OAAO,EAAE;MACzB,IAAIgN,eAAe,GAAG/Z,SAAS,CAAC1K,OAAO,CAACI,CAAC,CAAC;;MAE1C;MACA,IAAI,CAACskB,aAAa,CAACH,mBAAmB,CAAC,EACnC;;MAEJ;MACA,IAAIpN,SAAS,CAACoN,mBAAmB,CAAC,EAAE;QAChC,IAAII,IAAI,GAAGxN,SAAS,CAACoN,mBAAmB,CAAC;QACzCI,IAAI,CAACvY,OAAO,CAACA,OAAO,CAAC;QACrB,OAAOuY,IAAI;MACf;;MAEA;MACA,IAAIC,0BAA0B;MAC9B,IAAIC,0BAA0B;MAC9B,IAAIC,kBAAkB;MACtB,IAAIC,sBAAsB;MAC1B,IAAIC,YAAY;MAChB,IAAIC,uBAAuB;MAC3B,IAAIC,QAAQ;MACZ,IAAIC,oBAAoB;MACxB,IAAIC,kBAAkB;MACtB,IAAIC,iBAAiB;MACrB,IAAIC,qBAAqB;MACzB,IAAIC,sBAAsB;MAC1B,IAAIC,wBAAwB;MAC5B,IAAIC,oBAAoB;;MAExB;MACA,IAAIC,YAAY;MAChB,IAAIC,UAAU;MACd,IAAIC,WAAW;MACf,IAAIC,OAAO;MACX,IAAIC,cAAc;MAClB,IAAIC,UAAU;;MAEd;MACA,IAAIC,YAAY;MAChB,IAAIC,sBAAsB;MAC1B,IAAIC,SAAS;MACb,IAAIC,SAAS;MACb,IAAIC,QAAQ;MACZ,IAAIC,QAAQ;MACZ,IAAIC,QAAQ;MACZ,IAAIC,QAAQ;MACZ,IAAIC,MAAM;MACV,IAAIC,SAAS;MACb,IAAIC,kBAAkB,GAAG,CAAC,CAAC;MAC3B,IAAIC,qBAAqB,GAAG,CAAC,CAAC;MAC9B,IAAIC,mBAAmB,GAAG,CAAC,CAAC;MAC5B,IAAIC,aAAa,GAAG,CAAC,CAAC;MACtB,IAAIC,uBAAuB,GAAG,CAAC,CAAC;;MAEhC;MACA,IAAIC,eAAe,GAAG,SAAS;MAC/B,IAAIC,eAAe,GAAG,SAAS;MAC/B,IAAIC,gBAAgB,GAAG,UAAU;MACjC,IAAIC,eAAe,GAAG,SAAS;MAC/B,IAAIC,OAAO,GAAG,KAAK;MACnB,IAAIC,SAAS,GAAG,OAAO;MACvB,IAAIC,UAAU,GAAG,QAAQ;MACzB,IAAIC,QAAQ,GAAG,MAAM;MACrB,IAAIC,YAAY,GAAG,MAAM;MACzB,IAAIC,YAAY,GAAG,MAAM;MACzB,IAAIC,SAAS,GAAG,OAAO;MACvB,IAAIC,UAAU,GAAG,QAAQ;MACzB,IAAIC,SAAS,GAAG,OAAO;MACvB,IAAI9c,SAAS,GAAG,EAAE;MAClB,IAAI+c,QAAQ,GAAG,MAAM;MACrB,IAAIC,QAAQ,GAAG,MAAM;MACrB,IAAIC,UAAU,GAAG,QAAQ;MACzB,IAAIC,kBAAkB,GAAG,MAAM;MAC/B,IAAIC,KAAK,GAAG,GAAG;MACf,IAAIC,KAAK,GAAG,GAAG;MACf,IAAIC,OAAO,GAAG,GAAG;MACjB,IAAItd,SAAS,GAAG,GAAG;MACnB,IAAIud,aAAa,GAAG,WAAW;MAC/B,IAAIC,mBAAmB,GAAG,aAAa;MACvC,IAAIC,iBAAiB,GAAG,WAAW;MACnC,IAAIvd,cAAc,GAAGgd,UAAU,GAAG,MAAM;MACxC,IAAI/c,aAAa,GAAG+c,UAAU,GAAG,KAAK;MACtC,IAAIQ,uBAAuB,GAAG,sBAAsB;MACpD,IAAIC,qBAAqB,GAAG,8BAA8B;MAC1D,IAAIC,uBAAuB,GAAG,qBAAqB;MACnD,IAAIC,cAAc,GAAG,YAAY;MACjC,IAAIC,cAAc,GAAG,YAAY;MACjC,IAAIC,gBAAgB,GAAG,SAAS;MAChC,IAAIC,cAAc,GAAG,OAAO;MAC5B,IAAIC,oBAAoB,GAAG,aAAa;MACxC,IAAIC,sBAAsB,GAAG,kDAAkD;MAC/E,IAAIC,0BAA0B,GAAG,yBAAyB;;MAE1D;MACA,IAAIC,gBAAgB,GAAG,KAAK;MAC5B,IAAIC,qBAAqB,GAAGD,gBAAgB,GAAG,MAAM;MACrD,IAAIE,qBAAqB,GAAGF,gBAAgB,GAAG,MAAM;MACrD,IAAIG,4BAA4B,GAAGD,qBAAqB,GAAG,UAAU;MACrE,IAAIE,6BAA6B,GAAGF,qBAAqB,GAAG,WAAW;MACvE,IAAIG,uCAAuC,GAAGH,qBAAqB,GAAG,GAAG,GAAGf,aAAa,GAAGC,mBAAmB,GAAGrB,eAAe;MACjI,IAAIuC,qCAAqC,GAAGJ,qBAAqB,GAAG,GAAG,GAAGf,aAAa,GAAGE,iBAAiB,GAAGtB,eAAe;MAC7H,IAAIwC,wBAAwB,GAAGL,qBAAqB,GAAG,aAAa;MACpE,IAAIM,iBAAiB,GAAGN,qBAAqB,GAAG,MAAM;MACtD,IAAIO,4BAA4B,GAAGP,qBAAqB,GAAG,kBAAkB;MAC7E,IAAIQ,uBAAuB,GAAGR,qBAAqB,GAAG,YAAY;MAClE,IAAIS,sBAAsB,GAAGT,qBAAqB,GAAG,WAAW;MAChE,IAAIS,sBAAsB,GAAGT,qBAAqB,GAAG,WAAW;MAChE,IAAIU,uBAAuB,GAAGD,sBAAsB,GAAG,IAAI;MAC3D,IAAIE,uBAAuB,GAAGF,sBAAsB,GAAG,IAAI;MAC3D,IAAIG,yBAAyB,GAAGd,gBAAgB,GAAG,UAAU;MAC7D,IAAIe,8BAA8B,GAAGD,yBAAyB,GAAG,QAAQ;MACzE,IAAIE,wBAAwB,GAAGhB,gBAAgB,GAAG,SAAS;MAC3D,IAAIiB,yBAAyB,GAAGjB,gBAAgB,GAAG,UAAU;MAC7D,IAAIkB,2CAA2C,GAAGD,yBAAyB,GAAG,8BAA8B;MAC5G,IAAIE,0CAA0C,GAAGF,yBAAyB,GAAG,6BAA6B;MAC1G,IAAIG,wBAAwB,GAAGpB,gBAAgB,GAAG,SAAS;MAC3D,IAAIqB,+BAA+B,GAAGrB,gBAAgB,GAAG,iBAAiB;MAC1E,IAAIsB,4BAA4B,GAAGtB,gBAAgB,GAAG,cAAc;MACpE,IAAIuB,iCAAiC,GAAGvB,gBAAgB,GAAG,oBAAoB;MAC/E,IAAIwB,+BAA+B,GAAGxB,gBAAgB,GAAG,iBAAiB;MAC1E,IAAIyB,mCAAmC,GAAGzB,gBAAgB,GAAG,sBAAsB;MACnF,IAAI0B,wCAAwC,GAAGD,mCAAmC,GAAG,QAAQ;MAC7F,IAAIE,qBAAqB,GAAG3B,gBAAgB,GAAG,cAAc;MAC7D,IAAI4B,mBAAmB,GAAG5B,gBAAgB,GAAGb,aAAa;MAC1D,IAAI0C,wBAAwB,GAAGD,mBAAmB,GAAG,QAAQ;MAC7D,IAAIE,2BAA2B,GAAGD,wBAAwB,GAAG,MAAM;MACnE,IAAIE,yBAAyB,GAAGH,mBAAmB,GAAG,SAAS;MAC/D,IAAII,4BAA4B,GAAGD,yBAAyB,GAAG,MAAM;MACrE,IAAIE,2BAA2B,GAAGL,mBAAmB,GAAG,WAAW;MACnE,IAAIM,6BAA6B,GAAGN,mBAAmB,GAAG,GAAG,GAAGhD,QAAQ,GAAGb,eAAe;MAC1F,IAAIoE,yBAAyB,GAAGP,mBAAmB,GAAG,SAAS;MAC/D,IAAIQ,+BAA+B,GAAGD,yBAAyB,GAAG,SAAS;MAC3E,IAAIE,gCAAgC,GAAGD,+BAA+B,GAAG,OAAO;MAChF,IAAIE,gCAAgC,GAAGF,+BAA+B,GAAGhD,mBAAmB;MAC5F,IAAImD,gCAAgC,GAAGH,+BAA+B,GAAG/C,iBAAiB;MAC1F,IAAImD,6BAA6B,GAAGZ,mBAAmB,GAAGxC,mBAAmB;MAC7E,IAAIqD,2BAA2B,GAAGb,mBAAmB,GAAGvC,iBAAiB;MACzE,IAAIqD,kBAAkB,GAAG1C,gBAAgB,GAAG,UAAU;MACtD,IAAI2C,mBAAmB,GAAG3C,gBAAgB,GAAG,YAAY;MACzD,IAAI4C,yBAAyB,GAAG,CAC5B1B,2CAA2C,EAC3CC,0CAA0C,EAC1CW,2BAA2B,EAC3BE,4BAA4B,EAC5BC,2BAA2B,EAC3BC,6BAA6B,EAC7BE,+BAA+B,EAC/BC,gCAAgC,EAChCC,gCAAgC,EAChCC,gCAAgC,EAChCG,kBAAkB,CAAC,CAACje,IAAI,CAAC7C,SAAS,CAAC;;MAEvC;MACA,IAAIihB,oBAAoB,GAAG,EAAE;;MAE7B;MACA,IAAIC,wBAAwB,GAAG,CAAC9rB,OAAO,CAACK,EAAE,CAAC;;MAE3C;MACA,IAAI0rB,eAAe;MACnB,IAAIC,eAAe;MACnB,IAAIC,uBAAuB;;MAE3B;MACA,IAAIC,WAAW,GAAG,CAAC,CAAC;MACpB,IAAIC,yBAAyB,GAAG,2BAA2B;;MAE3D;MACA,IAAIC,eAAe;MACnB,IAAIC,qBAAqB,GAAG,CAAC,CAAC;MAC9B,IAAIC,uBAAuB;MAC3B,IAAIC,iBAAiB,GAAG,EAAE;MAC1B,IAAIC,sBAAsB,GAAG,MAAM;MACnC,IAAIC,iBAAiB,GAAG,EAAE;;MAE1B;MACA,IAAIC,cAAc;MAClB,IAAIC,gBAAgB;MACpB,IAAIC,YAAY;MAChB,IAAIC,YAAY;MAChB,IAAIC,cAAc,CAAC,CAAqB;MACxC,IAAIC,YAAY,CAAC,CAAuB;MACxC,IAAIC,wBAAwB,CAAC,CAAW;MACxC,IAAIC,oBAAoB,CAAC,CAAe;MACxC,IAAIC,eAAe,CAAC,CAAoB;MACxC,IAAIC,gBAAgB,CAAC,CAAmB;MACxC,IAAIC,eAAe,CAAC,CAAoB;MACxC,IAAIC,sBAAsB,CAAC,CAAa;MACxC,IAAIC,mBAAmB,CAAC,CAAgB;MACxC,IAAIC,qBAAqB,CAAC,CAAc;MACxC,IAAIC,uBAAuB;MAC3B,IAAIC,2BAA2B;MAC/B,IAAIC,gCAAgC;MACpC,IAAIC,iCAAiC;MACrC,IAAIC,yBAAyB;MAC7B,IAAIC,8BAA8B;MAClC,IAAIC,+BAA+B;MACnC,IAAIC,oBAAoB;MACxB,IAAIC,sBAAsB;MAC1B,IAAIC,oBAAoB;MACxB,IAAIC,kBAAkB;MACtB,IAAIC,8BAA8B;MAClC,IAAIC,0BAA0B;MAC9B,IAAIC,qBAAqB;MACzB,IAAIC,sBAAsB;MAC1B,IAAIC,qBAAqB;;MAEzB;MACA,IAAIC,cAAc;MAClB,IAAIC,uBAAuB;MAC3B,IAAIC,wBAAwB;MAC5B,IAAIC,iBAAiB;MACrB,IAAIC,kBAAkB;MACtB,IAAIC,eAAe;MACnB,IAAIC,gBAAgB;MACpB,IAAIC,kBAAkB;MACtB,IAAIC,gBAAgB;MACpB,IAAIC,eAAe;MACnB,IAAIC,eAAe;MACnB,IAAIC,kBAAkB;MACtB,IAAIC,0BAA0B;MAC9B,IAAIC,qBAAqB;MACzB,IAAIC,gBAAgB;MACpB,IAAIC,qBAAqB;MACzB,IAAIC,sBAAsB;MAC1B,IAAIC,oBAAoB;MACxB,IAAIC,kCAAkC;MACtC,IAAIC,gBAAgB;MACpB,IAAIC,qBAAqB;MACzB,IAAIC,4CAA4C;MAChD,IAAIC,mCAAmC;MACvC,IAAIC,0BAA0B;MAC9B,IAAIC,wBAAwB;MAC5B,IAAIC,8BAA8B;MAClC,IAAIC,6BAA6B;MACjC,IAAIC,YAAY;MAChB,IAAIC,kBAAkB;MACtB,IAAIC,eAAe;MACnB,IAAIC,aAAa;MACjB,IAAIC,0BAA0B;MAC9B,IAAIC,kBAAkB;MACtB,IAAIC,kBAAkB;MACtB,IAAIC,uBAAuB;MAC3B,IAAIC,sBAAsB;MAC1B,IAAIC,iBAAiB;MACrB,IAAIC,gBAAgB,GAAG,CAAC,CAAC;;MAEzB;MACA,IAAIC,qBAAqB;MACzB,IAAIC,wBAAwB;MAC5B,IAAIC,6BAA6B;MACjC,IAAIC,gCAAgC;MACpC,IAAIC,2BAA2B;MAC/B,IAAIC,8BAA8B,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;MAC7D,IAAIC,0BAA0B,GAAG,CAACpxB,OAAO,CAACE,CAAC,EAAEF,OAAO,CAACC,CAAC,EAAED,OAAO,CAACL,CAAC,EAAE,MAAM,CAAC,CAAC0E,MAAM,CAACynB,wBAAwB,CAAC;;MAE3G;MACA,IAAIuF,cAAc,GAAG,EAAE;;MAEvB;MACA,IAAIC,iBAAiB;;MAErB;MACA,IAAIC,4BAA4B;MAChC,IAAIC,gCAAgC;MACpC,IAAIC,wBAAwB;MAC5B,IAAIC,wBAAwB;MAC5B,IAAIC,yBAAyB;MAC7B,IAAIC,uBAAuB;MAC3B,IAAIC,wBAAwB;MAC5B,IAAIC,wBAAwB;MAC5B,IAAIC,iCAAiC;;MAErC;MACA,IAAIC,WAAW;MACf,IAAIC,WAAW;MACf,IAAIC,iBAAiB;MACrB,IAAIC,eAAe;;MAGnB;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;MACgB,SAASC,4BAA4B,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEvf,MAAM,EAAEwf,gBAAgB,EAAE;QAC3F,IAAIC,SAAS,GAAGtvB,aAAa,CAACgE,GAAG,CAACmrB,UAAU,CAAC,IAAInvB,aAAa,CAACgE,GAAG,CAACorB,QAAQ,CAAC;QAC5E,IAAIG,MAAM,GAAG1f,MAAM,GAAG,qBAAqB,GAAG,kBAAkB;QAChE,IAAI2f,KAAK,GAAG3f,MAAM,GAAG,KAAK,GAAG,IAAI;QACjC,IAAI4f,MAAM,GAAGH,SAAS,GAAG,KAAK,GAAGH,UAAU,CAAC3vB,KAAK,CAACiI,SAAS,CAAC;QAC5D,IAAI1K,CAAC,GAAG,CAAC;QAET,IAAI2yB,qBAAqB,GAAGnoB,SAAS,CAAC8B,aAAa,CAACgmB,gBAAgB,CAAC;QACrE,IAAIM,OAAO,GAAIxN,qBAAqB,KAAKuN,qBAAqB,GAAIL,gBAAgB,CAACO,QAAQ,GAAIP,gBAAgB,CAAC,IAAK,KAAK;QAC1H,IAAIQ,OAAO,GAAGH,qBAAqB,KAAKL,gBAAgB,CAACS,QAAQ,IAAI,KAAK,CAAC;QAC3E,IAAIC,WAAW,GAAG5N,qBAAqB,GAAG;UACtCwN,OAAO,EAAEA,OAAO;UAChBE,OAAO,EAAEA;QACb,CAAC,GAAGA,OAAO;QAEX,IAAIP,SAAS,EAAE;UACX,OAAOvyB,CAAC,GAAGoyB,UAAU,CAACtyB,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;YACjCkyB,4BAA4B,CAACC,OAAO,EAAEC,UAAU,CAACpyB,CAAC,CAAC,EAAEqyB,QAAQ,CAACryB,CAAC,CAAC,EAAE8S,MAAM,EAAEwf,gBAAgB,CAAC;UAAC;QACpG,CAAC,MACI;UACD,OAAOtyB,CAAC,GAAG0yB,MAAM,CAAC5yB,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;YAC/B,IAAGolB,qBAAqB,EAAE;cACtB+M,OAAO,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC,CAACE,MAAM,CAAC1yB,CAAC,CAAC,EAAEqyB,QAAQ,EAAEW,WAAW,CAAC;YACxD,CAAC,MACI;cACDb,OAAO,CAACM,KAAK,CAAC,CAACC,MAAM,CAAC1yB,CAAC,CAAC,EAAEqyB,QAAQ,CAAC;YACvC;UACJ;QACJ;MACJ;MAGA,SAASY,uBAAuB,CAACd,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEO,OAAO,EAAE;QACrEV,4BAA4B,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAE,KAAK,EAAEO,OAAO,CAAC;QAC3EzB,cAAc,CAACvhB,IAAI,CAAC3M,aAAa,CAACO,IAAI,CAAC0uB,4BAA4B,EAAE,CAAC,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAE,IAAI,EAAEO,OAAO,CAAC,CAAC;MAC1H;;MAEA;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASM,mBAAmB,CAACC,aAAa,EAAEC,wBAAwB,EAAE;QAClE,IAAID,aAAa,EAAE;UACf,IAAIE,cAAc,GAAGpwB,aAAa,CAACsB,EAAE,EAAE;UACvC,IAAI+uB,sBAAsB,GAAG,wEAAwE;UACrG,IAAIC,aAAa,GAAG,YAAY;UAChC,IAAIC,WAAW,GAAG,OAAO;UACzB,IAAIvmB,QAAQ,GAAG,SAAXA,QAAQ,GAAe;YACvBkmB,aAAa,CAACtoB,aAAa,CAAC,CAAC2oB,WAAW,CAAC,CAAC5oB,cAAc,CAAC,CAAC0b,MAAM,GAAG1B,kBAAkB,CAACjlB,CAAC,GAAG,CAAC6zB,WAAW,GAAG5O,kBAAkB,CAAC5kB,CAAC,GAAG,CAAC,GAAGwzB,WAAW,GAAGA,WAAW,CAAC;YAC9JJ,wBAAwB,EAAE;UAC9B,CAAC;UACD;UACA,IAAIA,wBAAwB,EAAE;YAC1B,IAAI/N,sBAAsB,EAAE;cACxB,IAAI8M,OAAO,GAAGgB,aAAa,CAACte,QAAQ,CAAC,UAAU,CAAC,CAACnC,MAAM,CAAC+gB,WAAW,CAACnJ,+BAA+B,CAAC,CAAC,CAACvW,QAAQ,EAAE,CAAC,CAAC,CAAC;cACnH,IAAI2f,QAAQ,GAAGvB,OAAO,CAACtJ,0BAA0B,CAAC,GAAG,IAAIwK,cAAc,CAACpmB,QAAQ,CAAC;cACjFymB,QAAQ,CAACC,OAAO,CAACxB,OAAO,CAAC;YAC7B,CAAC,MACI;cACD,IAAIrN,YAAY,GAAG,CAAC,IAAI,CAACD,sBAAsB,EAAE;gBAC7CsO,aAAa,CAACxgB,OAAO,CACjB8gB,WAAW,CAACnJ,+BAA+B,EACvCmJ,WAAW,CAAC;kBAAE1zB,CAAC,EAAEwqB,mCAAmC;kBAAEqJ,GAAG,EAAE;gBAAM,CAAC,EAC9DH,WAAW,CAAClJ,mCAAmC,EAC3CkJ,WAAW,CAACjJ,wCAAwC,CAAC,CACxD,GACDiJ,WAAW,CAAClJ,mCAAmC,EAC3CkJ,WAAW,CAAC;kBAAE1zB,CAAC,EAAEyqB,wCAAwC;kBAAEqJ,KAAK,EAAE;gBAA4B,CAAC,CAAC,CACnG,CACJ,CACJ,CACJ;gBAED,IAAIC,eAAe,GAAGX,aAAa,CAAC,CAAC,CAAC,CAACI,aAAa,CAAC,CAAC,CAAC,CAAC,CAACA,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC1E,IAAIQ,aAAa,GAAGvpB,SAAS,CAACspB,eAAe,CAACP,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,IAAIS,aAAa,GAAGxpB,SAAS,CAACspB,eAAe,CAACP,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,IAAIU,kBAAkB,GAAGzpB,SAAS,CAACwpB,aAAa,CAAC,CAAC,CAAC,CAACT,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtE,IAAIW,UAAU,GAAGJ,eAAe,CAACh0B,OAAO,CAACS,EAAE,CAAC;gBAC5C,IAAI4zB,WAAW,GAAGL,eAAe,CAACh0B,OAAO,CAACM,EAAE,CAAC;gBAC7C,IAAIg0B,OAAO;gBACX,IAAIC,KAAK;gBACT,IAAIC,SAAS;gBACb,IAAIC,UAAU;gBACd,IAAIC,MAAM,GAAG,CAAC;gBACd,IAAIjW,mBAAmB,GAAGwE,OAAO,CAACxE,mBAAmB,CAAC,CAAC;gBACvD,IAAIkW,KAAK,GAAG,SAARA,KAAK,GAAe;kBACpB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kBAGwCT,aAAa,CAACppB,cAAc,CAAC,CAAC4oB,WAAW,CAAC,CAAC3oB,aAAa,CAAC,CAAC2oB,WAAW,CAAC;kBACtEO,aAAa,CAACnpB,cAAc,CAAC,CAAC4oB,WAAW,CAAC,CAAC3oB,aAAa,CAAC,CAAC2oB,WAAW,CAAC;gBAC1E,CAAC;gBACD,IAAIkB,SAAS,GAAG,SAAZA,SAAS,GAAe;kBACxBL,KAAK,GAAG,CAAC;kBACT,IAAI,CAACD,OAAO,EACR;kBAEJF,UAAU,GAAGI,SAAS;kBACtBH,WAAW,GAAGI,UAAU;kBACxBtnB,QAAQ,EAAE;gBACd,CAAC;gBACD,IAAIwN,QAAQ,GAAG,SAAXA,QAAQ,CAAaxV,KAAK,EAAE;kBAC5BqvB,SAAS,GAAGR,eAAe,CAACh0B,OAAO,CAACS,EAAE,CAAC;kBACvCg0B,UAAU,GAAGT,eAAe,CAACh0B,OAAO,CAACM,EAAE,CAAC;kBACxCg0B,OAAO,GAAGE,SAAS,IAAIJ,UAAU,IAAIK,UAAU,IAAIJ,WAAW;kBAE9D,IAAIlvB,KAAK,IAAImvB,OAAO,IAAI,CAACC,KAAK,EAAE;oBAC5BpxB,aAAa,CAACyB,GAAG,EAAE,CAAC2vB,KAAK,CAAC;oBAC1BA,KAAK,GAAGpxB,aAAa,CAACuB,GAAG,EAAE,CAACkwB,SAAS,CAAC;kBAC1C,CAAC,MACI,IAAI,CAACzvB,KAAK,EACXyvB,SAAS,EAAE;kBAEfD,KAAK,EAAE;kBACP,IAAIxvB,KAAK,EAAE;oBACPhC,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;oBACzBhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;kBAC7B;kBACA,OAAO,KAAK;gBAChB,CAAC;gBACD,IAAI0vB,cAAc,GAAG,CAAC,CAAC;gBACvB,IAAIC,kBAAkB,GAAG,CAAC,CAAC;gBAE3BC,qBAAqB,CAACD,kBAAkB,EAAEjqB,SAAS,EAAE,CACjD,EAAE,CAAC4T,mBAAmB,CAAClY,CAAC,GAAG,CAAC,IAAImuB,MAAM,CAAC,EACvCjW,mBAAmB,CAACpb,CAAC,GAAG,CAACqxB,MAAM,EAC/BjW,mBAAmB,CAAClY,CAAC,GAAG,CAACmuB,MAAM,EAC/B,EAAE,CAACjW,mBAAmB,CAACpb,CAAC,GAAG,CAAC,IAAIqxB,MAAM,CAAC,CAC1C,CAAC;gBAEFhqB,SAAS,CAACspB,eAAe,CAAC,CAACjkB,GAAG,CAAC+kB,kBAAkB,CAAC;gBAClDZ,aAAa,CAACviB,EAAE,CAACmW,UAAU,EAAEnN,QAAQ,CAAC;gBACtCsZ,aAAa,CAACtiB,EAAE,CAACmW,UAAU,EAAEnN,QAAQ,CAAC;gBACtC0Y,aAAa,CAAC1hB,EAAE,CAAC6hB,sBAAsB,EAAE,YAAY;kBACjD7Y,QAAQ,CAAC,KAAK,CAAC;gBACnB,CAAC,CAAC;gBACF;gBACAka,cAAc,CAACpN,SAAS,CAAC,GAAGiM,WAAW;gBACvCmB,cAAc,CAACnN,UAAU,CAAC,GAAGgM,WAAW;gBACxCS,kBAAkB,CAACpkB,GAAG,CAAC8kB,cAAc,CAAC;gBAEtCF,KAAK,EAAE;cACX,CAAC,MACI;gBACD,IAAI1iB,WAAW,GAAG+b,sBAAsB,CAAC/b,WAAW;gBACpD,IAAI+iB,IAAI,GAAGhQ,YAAY,KAAK9lB,SAAS;gBACrC,IAAI+S,WAAW,EAAE;kBACbohB,aAAa,CAACxgB,OAAO,CAAC8gB,WAAW,CAACnJ,+BAA+B,CAAC,CAAC;kBACnEyK,SAAS,CAAC5B,aAAa,EAAEnL,OAAO,GAAGsC,+BAA+B,CAAC,CAAC,CAAC,CAAC,CAACvY,WAAW,CAAC,UAAU,EAAE9E,QAAQ,CAAC;gBAC5G,CAAC,MACI;kBACD,IAAI5F,GAAG,GAAGymB,sBAAsB,CAACjsB,aAAa,CAACxC,KAAK,CAACC,CAAC,CAAC;kBACvD+H,GAAG,CAACwO,YAAY,CAAC/V,OAAO,CAACK,EAAE,EAAE,IAAI,CAAC;kBAClCkH,GAAG,CAACwO,YAAY,CAAC/V,OAAO,CAACC,CAAC,EAAEuqB,+BAA+B,CAAC;kBAC5DjjB,GAAG,CAAC2tB,MAAM,GAAG,YAAY;oBACrB,IAAIC,GAAG,GAAG,IAAI,CAACC,eAAe,CAACC,WAAW;oBAC1CF,GAAG,CAACpjB,gBAAgB,CAAC,QAAQ,EAAE5E,QAAQ,CAAC;oBACxCgoB,GAAG,CAACl2B,QAAQ,CAACsE,eAAe,CAACwwB,KAAK,CAACre,OAAO,GAAG,MAAM;kBACvD,CAAC;kBACDnO,GAAG,CAACD,IAAI,GAAG,WAAW;kBACtB,IAAI0tB,IAAI,EACJ3B,aAAa,CAACxgB,OAAO,CAACtL,GAAG,CAAC;kBAC9BA,GAAG,CAAC0U,IAAI,GAAG,aAAa;kBACxB,IAAI,CAAC+Y,IAAI,EACL3B,aAAa,CAACxgB,OAAO,CAACtL,GAAG,CAAC;kBAC9B8rB,aAAa,CAAC1hB,EAAE,CAAC6hB,sBAAsB,EAAErmB,QAAQ,CAAC;gBACtD;cACJ;YACJ;YAEA,IAAIkmB,aAAa,CAAC,CAAC,CAAC,KAAKjF,0BAA0B,EAAE;cACjD,IAAIkH,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAe;gBAC/B,IAAIxB,GAAG,GAAG/G,YAAY,CAAChd,GAAG,CAAC,WAAW,CAAC;gBACvC,IAAIA,GAAG,GAAG,CAAC,CAAC;gBACZ,IAAIwlB,eAAe,GAAG,CAAC;gBACvB,IAAI3zB,MAAM,GAAG,KAAK;gBAClB,IAAIkyB,GAAG,KAAK1E,0BAA0B,EAAE;kBACpC,IAAI0E,GAAG,KAAK,KAAK,EAAE;oBACf/jB,GAAG,CAACuX,QAAQ,CAAC,GAAG,CAAC;oBACjBvX,GAAG,CAACqX,SAAS,CAAC,GAAGQ,QAAQ;oBACzB2N,eAAe,GAAG7B,WAAW;kBACjC,CAAC,MACI;oBACD3jB,GAAG,CAACuX,QAAQ,CAAC,GAAGM,QAAQ;oBACxB7X,GAAG,CAACqX,SAAS,CAAC,GAAG,CAAC;oBAClBmO,eAAe,GAAGzQ,kBAAkB,CAACjlB,CAAC,GAAG,CAAC6zB,WAAW,GAAG5O,kBAAkB,CAAC5kB,CAAC,GAAG,CAAC,GAAGwzB,WAAW;kBAClG;kBACA;kBACAzG,oBAAoB,CAACxb,QAAQ,EAAE,CAACmF,EAAE,CAAC,CAAC,CAAC,CAAC7G,GAAG,CAACA,GAAG,CAAC;kBAC9Ckd,oBAAoB,CAACniB,cAAc,CAAC,CAACyqB,eAAe,CAAC,CAACxqB,aAAa,CAAC,CAAC2oB,WAAW,CAAC;kBACjFtE,0BAA0B,GAAG0E,GAAG;kBAChClyB,MAAM,GAAG,IAAI;gBACjB;gBACA,OAAOA,MAAM;cACjB,CAAC;cACD0zB,gBAAgB,EAAE;cAClBnC,uBAAuB,CAACE,aAAa,EAAEvL,UAAU,EAAE,UAAU3iB,KAAK,EAAE;gBAChE,IAAImwB,gBAAgB,EAAE,EAClBjT,MAAM,EAAE;gBACZlf,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;gBACzBhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;gBACzB,OAAO,KAAK;cAChB,CAAC,CAAC;YACN;UACJ;UACA;UAAA,KACK;YACD,IAAIogB,sBAAsB,EAAE;cACxB,IAAI8M,OAAO,GAAGgB,aAAa,CAACpf,QAAQ,EAAE,CAAC,CAAC,CAAC;cACzC,IAAIuhB,iBAAiB,GAAGnD,OAAO,CAACtJ,0BAA0B,CAAC;cAC3D,IAAIyM,iBAAiB,EAAE;gBACnBA,iBAAiB,CAACC,UAAU,EAAE;gBAC9B,OAAOpD,OAAO,CAACtJ,0BAA0B,CAAC;cAC9C;YACJ,CAAC,MACI;cACD/V,MAAM,CAACqgB,aAAa,CAAC5hB,QAAQ,CAACyW,OAAO,GAAGsC,+BAA+B,CAAC,CAAC5T,EAAE,CAAC,CAAC,CAAC,CAAC;YACnF;UACJ;QACJ;MACJ;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGgB;;MAEA;AAChB;AACA;MACgB,SAAS8e,uBAAuB,GAAG;QAC/B,IAAIlQ,wBAAwB,EAAE;UAC1B,IAAImQ,0BAA0B,GAAG,EAAE;UACnC,IAAIC,gBAAgB,GAAGzyB,aAAa,CAACqB,EAAE,EAAE;UACzC,IAAIqxB,iBAAiB,GAAG1yB,aAAa,CAAC4B,GAAG,EAAE;UAC3C,IAAI+wB,cAAc;UAClB,IAAIC,gBAAgB;UACpB,IAAIC,eAAe;UACnB,IAAIC,cAAc;UAClB,IAAIC,WAAW;UACf,IAAIC,kBAAkB;UACtB,IAAIC,cAAc;UAClB,IAAIrxB,GAAG;UACP,IAAIsxB,QAAQ;UACZ,IAAIC,MAAM;UAEVtF,6BAA6B,GAAG,uCAAUuF,SAAS,EAAE;YAEjD,IAAIC,QAAQ,GAAG,KAAK;YACpB,IAAIC,aAAa,GAAG,KAAK;YACzB,IAAIC,QAAQ;YACZ,IAAIC,YAAY,GAAG,EAAE;YAErB,IAAIjR,YAAY,IAAI,CAACe,SAAS,EAAE;cAC5BvZ,IAAI,CAACqpB,SAAS,EAAE,YAAY;gBACxBG,QAAQ,GAAG,IAAI;gBACfZ,cAAc,GAAGY,QAAQ,CAAC1wB,MAAM;gBAChC+vB,gBAAgB,GAAGW,QAAQ,CAACE,aAAa;gBACzCZ,eAAe,GAAGD,gBAAgB,KAAK/1B,OAAO,CAACC,CAAC;gBAChDg2B,cAAc,GAAGS,QAAQ,CAACG,QAAQ;gBAClCX,WAAW,GAAGJ,cAAc,CAACphB,SAAS;gBAEtC,IAAIqR,UAAU,IAAIiQ,eAAe,IAAI,CAACS,aAAa,EAAE;kBACjD;kBACA,IAAIR,cAAc,CAACnhB,OAAO,CAACqU,4BAA4B,CAAC,GAAG,CAAC,CAAC,IAAI+M,WAAW,CAACphB,OAAO,CAACqU,4BAA4B,CAAC,GAAG,CAAC,EAAE;oBACpHgN,kBAAkB,GAAGW,yBAAyB,CAAC,IAAI,CAAC;oBACpD5I,kBAAkB,CAACxZ,SAAS,GAAGwhB,WAAW,CAACvzB,KAAK,CAACiI,SAAS,CAAC,CAACvG,MAAM,CAAC4xB,cAAc,CAACtzB,KAAK,CAACiI,SAAS,CAAC,CAACmsB,MAAM,CAAC,UAAUp1B,IAAI,EAAE;sBACtH,OAAOA,IAAI,CAAC6L,KAAK,CAAC2oB,kBAAkB,CAAC;oBACzC,CAAC,CAAC,CAAC,CAAC1oB,IAAI,CAAC7C,SAAS,CAAC;oBACnB4rB,QAAQ,GAAGC,aAAa,GAAG,IAAI;kBACnC;gBACJ;gBAEA,IAAI,CAACD,QAAQ,EAAE;kBACXA,QAAQ,GAAGR,eAAe,GACpBgB,qBAAqB,CAACf,cAAc,EAAEC,WAAW,CAAC,GAClDH,gBAAgB,KAAK/1B,OAAO,CAACL,CAAC,GAC1Bs2B,cAAc,KAAKH,cAAc,CAAC91B,OAAO,CAACL,CAAC,CAAC,CAACmD,OAAO,GACpD,IAAI;gBAClB;gBAEA6zB,YAAY,CAAC7mB,IAAI,CAACimB,gBAAgB,CAAC;cACvC,CAAC,CAAC;cAEFkB,6BAA6B,CAACN,YAAY,CAAC;cAE3C,IAAIH,QAAQ,EACRvY,KAAK,CAACoE,MAAM,CAACoU,aAAa,IAAI7O,QAAQ,CAAC;YAC/C;YACA,OAAO4O,QAAQ;UACnB,CAAC;UACDvF,gCAAgC,GAAG,0CAAUsF,SAAS,EAAE;YACpD,IAAIC,QAAQ,GAAG,KAAK;YACpB,IAAIE,QAAQ;YAEZ,IAAIhR,YAAY,IAAI,CAACe,SAAS,EAAE;cAC5BvZ,IAAI,CAACqpB,SAAS,EAAE,YAAY;gBACxBG,QAAQ,GAAG,IAAI;gBACfF,QAAQ,GAAGU,iBAAiB,CAACR,QAAQ,CAAC;gBACtC,OAAO,CAACF,QAAQ;cACpB,CAAC,CAAC;cAEF,IAAIA,QAAQ,EAAE;gBACVzxB,GAAG,GAAG5B,aAAa,CAAC4B,GAAG,EAAE;gBACzBsxB,QAAQ,GAAIvH,gBAAgB,IAAID,eAAgB;gBAChDyH,MAAM,GAAG,kBAAY;kBACjB,IAAI,CAAC3Q,UAAU,EAAE;oBACbkQ,iBAAiB,GAAG9wB,GAAG;;oBAEvB;oBACA,IAAI6gB,WAAW,EACXuR,cAAc,EAAE;oBAEpB,IAAId,QAAQ,EACRhU,MAAM,EAAE,CAAC,KAETpE,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;kBAC9B;gBACJ,CAAC;gBACD9iB,YAAY,CAACsxB,cAAc,CAAC;gBAC5B,IAAIT,0BAA0B,IAAI,CAAC,IAAI5wB,GAAG,GAAG8wB,iBAAiB,GAAGF,0BAA0B,IAAI,CAACU,QAAQ,EACpGC,MAAM,EAAE,CAAC,KAETF,cAAc,GAAGzxB,UAAU,CAAC2xB,MAAM,EAAEX,0BAA0B,CAAC;cACvE;YACJ;YACA,OAAOa,QAAQ;UACnB,CAAC;UAED1F,qBAAqB,GAAG,IAAI8E,gBAAgB,CAAC5E,6BAA6B,CAAC;UAC3ED,wBAAwB,GAAG,IAAI6E,gBAAgB,CAAC3E,gCAAgC,CAAC;QACrF;MACJ;;MAEA;AAChB;AACA;MACgB,SAASmG,wBAAwB,GAAG;QAChC,IAAI5R,wBAAwB,IAAI,CAAC0L,2BAA2B,EAAE;UAC1DJ,qBAAqB,CAAC+C,OAAO,CAAC3F,kBAAkB,EAAE;YAC9CmJ,UAAU,EAAE,IAAI;YAChBC,iBAAiB,EAAE,IAAI;YACvBC,eAAe,EAAEnG;UACrB,CAAC,CAAC;UAEFL,wBAAwB,CAAC8C,OAAO,CAACjO,WAAW,GAAGqI,oBAAoB,GAAGM,qBAAqB,EAAE;YACzF8I,UAAU,EAAE,IAAI;YAChBC,iBAAiB,EAAE,IAAI;YACvBE,OAAO,EAAE,CAAC5R,WAAW;YACrB6R,SAAS,EAAE,CAAC7R,WAAW;YACvB8R,aAAa,EAAE,CAAC9R,WAAW;YAC3B2R,eAAe,EAAE3R,WAAW,GAAGuL,8BAA8B,GAAGC;UACpE,CAAC,CAAC;UAEFF,2BAA2B,GAAG,IAAI;QACtC;MACJ;;MAEA;AAChB;AACA;MACgB,SAASyG,2BAA2B,GAAG;QACnC,IAAInS,wBAAwB,IAAI0L,2BAA2B,EAAE;UACzDJ,qBAAqB,CAAC2E,UAAU,EAAE;UAClC1E,wBAAwB,CAAC0E,UAAU,EAAE;UAErCvE,2BAA2B,GAAG,KAAK;QACvC;MACJ;;MAGA;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAAS0G,aAAa,GAAG;QACrB,IAAI,CAACnR,SAAS,EAAE;UACZ,IAAIoR,OAAO;UACX,IAAIC,QAAQ,GAAG;YACX3vB,CAAC,EAAEimB,0BAA0B,CAACpuB,OAAO,CAACW,EAAE,CAAC;YACzCof,CAAC,EAAEqO,0BAA0B,CAACpuB,OAAO,CAACQ,EAAE;UAC5C,CAAC;UAEDq3B,OAAO,GAAGE,UAAU,CAACD,QAAQ,EAAEhI,mCAAmC,CAAC;UACnEA,mCAAmC,GAAGgI,QAAQ;UAC9C,IAAID,OAAO,EACPxV,MAAM,CAAC;YAAE2V,gBAAgB,EAAE;UAAK,CAAC,CAAC;QAC1C;MACJ;;MAEA;AAChB;AACA;MACgB,SAASC,gBAAgB,GAAG;QACxB,IAAIpG,wBAAwB,EACxBqG,yBAAyB,CAAC,IAAI,CAAC;MACvC;;MAEA;AAChB;AACA;MACgB,SAASC,gBAAgB,GAAG;QACxB,IAAItG,wBAAwB,IAAI,CAAChF,YAAY,CAACpY,QAAQ,CAACiX,kBAAkB,CAAC,EACtEwM,yBAAyB,CAAC,KAAK,CAAC;MACxC;;MAEA;AAChB;AACA;MACgB,SAASE,eAAe,GAAG;QACvB,IAAIxG,uBAAuB,EAAE;UACzBsG,yBAAyB,CAAC,IAAI,CAAC;UAC/BpzB,YAAY,CAAC0sB,gCAAgC,CAAC;UAC9CA,gCAAgC,GAAG7sB,UAAU,CAAC,YAAY;YACtD,IAAIitB,uBAAuB,IAAI,CAACjM,UAAU,EACtCuS,yBAAyB,CAAC,KAAK,CAAC;UACxC,CAAC,EAAE,GAAG,CAAC;QACX;MACJ;;MAEA;AAChB;AACA;AACA;MACgB,SAASG,qBAAqB,CAAClzB,KAAK,EAAE;QAClChC,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;QACzB,OAAO,KAAK;MAChB;;MAEA;AAChB;AACA;MACgB,SAASmzB,oBAAoB,CAACnzB,KAAK,EAAE;QAChD,IAAI,CAACwgB,UAAU,EAAE;UAChB,IAAI3f,MAAM,GAAGb,KAAK,CAACa,MAAM;UACzB,IAAIuyB,GAAG,GAAG7tB,SAAS,CAACvF,KAAK,CAACa,MAAM,CAAC;UACjC,IAAI4I,KAAK,GAAGlE,SAAS,CAAC+B,OAAO,CAACzG,MAAM,EAAEymB,iBAAiB,CAAC;UACxD,IAAI7d,KAAK,GAAG,CAAC,CAAC,EAAE;YACf6d,iBAAiB,CAAC1d,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;UACnC;UAEA4pB,gBAAgB,CAAC,UAAUt4B,CAAC,EAAEu4B,oBAAoB,EAAE;YACnD,IAAIF,GAAG,CAACvhB,EAAE,CAACyhB,oBAAoB,CAAC,EAAE;cACjCpW,MAAM,CAAC;gBAAEqW,mBAAmB,EAAE;cAAK,CAAC,CAAC;YACtC;UACD,CAAC,CAAC;QACH;MACW;;MAEA;AAChB;AACA;AACA;MACgB,SAASC,yBAAyB,CAACC,OAAO,EAAE;QACxC,IAAI,CAACA,OAAO,EACRD,yBAAyB,CAAC,IAAI,CAAC;QAEnCvG,4BAA4B,CAACrF,YAAY,EACrCvE,uBAAuB,CAAC7lB,KAAK,CAACiI,SAAS,CAAC,CAAC,CAAC,CAAC,EAC3CwtB,eAAe,EACd,CAACxG,uBAAuB,IAAIgH,OAAO,EAAG,IAAI,CAAC;QAChDxG,4BAA4B,CAACrF,YAAY,EACrC,CAACtE,cAAc,EAAEC,cAAc,CAAC,EAChC,CAACuP,gBAAgB,EAAEE,gBAAgB,CAAC,EACnC,CAACtG,wBAAwB,IAAI+G,OAAO,EAAG,IAAI,CAAC;;QAEjD;QACA,IAAI,CAAClT,YAAY,IAAI,CAACkT,OAAO,EACzB7L,YAAY,CAAC3a,GAAG,CAAC,WAAW,EAAE6lB,gBAAgB,CAAC;MACvD;;MAGA;;MAEA;AAChB;AACA;AACA;MACgB,SAASY,kBAAkB,GAAG;QAC1B,IAAIC,WAAW,GAAG,CAAC,CAAC;QACpB,IAAIjT,OAAO,IAAIwH,sBAAsB,EAAE;UACnCyL,WAAW,CAAC3wB,CAAC,GAAG4wB,mBAAmB,CAAC1L,sBAAsB,CAACtd,GAAG,CAACwX,YAAY,GAAGE,SAAS,CAAC,CAAC;UACzFqR,WAAW,CAAC/Y,CAAC,GAAGgZ,mBAAmB,CAAC1L,sBAAsB,CAACtd,GAAG,CAACwX,YAAY,GAAGG,UAAU,CAAC,CAAC;UAC1FoR,WAAW,CAAC74B,CAAC,GAAG83B,UAAU,CAACe,WAAW,EAAElI,iBAAiB,CAAC;UAC1DkI,WAAW,CAACr5B,CAAC,GAAG,IAAI,CAAC,CAAC;QAC1B;;QACAmxB,iBAAiB,GAAGkI,WAAW;QAC/B,OAAO,CAAC,CAACA,WAAW,CAAC74B,CAAC;MAC1B;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAAS+2B,qBAAqB,CAACgC,aAAa,EAAEC,aAAa,EAAE;QACzD,IAAIC,WAAW,GAAG,OAAOD,aAAa,IAAI15B,KAAK,CAACI,CAAC,GAAGs5B,aAAa,CAACt2B,KAAK,CAACiI,SAAS,CAAC,GAAG,EAAE;QACvF,IAAIuuB,UAAU,GAAG,OAAOH,aAAa,IAAIz5B,KAAK,CAACI,CAAC,GAAGq5B,aAAa,CAACr2B,KAAK,CAACiI,SAAS,CAAC,GAAG,EAAE;QACtF,IAAIwuB,IAAI,GAAGC,mBAAmB,CAACF,UAAU,EAAED,WAAW,CAAC;;QAEvD;QACA,IAAII,GAAG,GAAG7sB,OAAO,CAACkf,mBAAmB,EAAEyN,IAAI,CAAC;QAC5C,IAAIl5B,CAAC;QACL,IAAIq5B,KAAK;QAET,IAAID,GAAG,GAAG,CAAC,CAAC,EACRF,IAAI,CAACrqB,MAAM,CAACuqB,GAAG,EAAE,CAAC,CAAC;QAEvB,IAAIF,IAAI,CAACp5B,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC,EAAE;UACrBo5B,KAAK,GAAGzC,yBAAyB,CAAC,IAAI,EAAE,IAAI,CAAC;UAC7C,KAAK52B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk5B,IAAI,CAACj3B,MAAM,EAAEjC,CAAC,EAAE,EAAE;YAC9B,IAAI,CAACk5B,IAAI,CAACl5B,CAAC,CAAC,CAACsN,KAAK,CAAC+rB,KAAK,CAAC,EAAE;cACvB,OAAO,IAAI;YACf;UACJ;QACJ;QACA,OAAO,KAAK;MAChB;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASrC,iBAAiB,CAACR,QAAQ,EAAE;QACjC,IAAIE,aAAa,GAAGF,QAAQ,CAACE,aAAa;QAC1C,IAAId,cAAc,GAAGY,QAAQ,CAAC1wB,MAAM;QACpC,IAAIwzB,YAAY,GAAG9C,QAAQ,CAACpvB,IAAI;QAChC,IAAImyB,UAAU,GAAG,SAAS;QAE1B,IAAI3D,cAAc,KAAKvH,qBAAqB,EACxC,OAAOqI,aAAa,KAAK,IAAI;QACjC,IAAI4C,YAAY,KAAK,YAAY,KAAK5C,aAAa,KAAK52B,OAAO,CAACC,CAAC,IAAI22B,aAAa,KAAK52B,OAAO,CAACL,CAAC,CAAC,IAAI,CAACimB,WAAW,EAAE;UAC/G;UACA,IAAIgR,aAAa,KAAK52B,OAAO,CAACC,CAAC,IAAIyK,SAAS,CAACorB,cAAc,CAAC,CAACrhB,QAAQ,CAACyU,qBAAqB,CAAC,EACxF,OAAO8N,qBAAqB,CAACN,QAAQ,CAACG,QAAQ,EAAEf,cAAc,CAACphB,SAAS,CAAC;;UAE7E;UACA,IAAI,OAAOohB,cAAc,CAAC2D,UAAU,CAAC,IAAIl6B,KAAK,CAACE,CAAC,EAC5C,OAAO,IAAI;UACf,IAAIq2B,cAAc,CAAC2D,UAAU,CAAC,CAACvR,OAAO,GAAGsC,+BAA+B,CAAC,KAAK,IAAI,IAC9EsL,cAAc,CAAC2D,UAAU,CAAC,CAACvR,OAAO,GAAG0C,mBAAmB,CAAC,KAAK,IAAI,IAClEkL,cAAc,CAAC2D,UAAU,CAAC,CAACvR,OAAO,GAAGiD,yBAAyB,CAAC,KAAK,IAAI,EACxE,OAAO,KAAK;QACpB;QACA,OAAO,IAAI;MACf;;MAEA;AAChB;AACA;AACA;MACgB,SAASuO,4BAA4B,GAAG;QACpC,IAAIjT,SAAS,EACT,OAAO,KAAK;QAEhB,IAAIkT,qBAAqB,GAAGC,wBAAwB,EAAE;QACtD,IAAIC,mBAAmB,GAAGjU,WAAW,IAAIiJ,eAAe,IAAI,CAAC0B,0BAA0B,GAAGzD,cAAc,CAACve,GAAG,EAAE,CAACpM,MAAM,GAAG,CAAC;QACzH,IAAI23B,MAAM,GAAG,CAAC5I,2BAA2B,IAAIrC,eAAe,IAAI,CAACjJ,WAAW;QAC5E,IAAI7V,GAAG,GAAG,CAAC,CAAC;QACZ,IAAIgqB,KAAK;QACT,IAAIC,YAAY;QAChB,IAAInC,OAAO;QACX,IAAIoC,wBAAwB;QAE5B,IAAIH,MAAM,EAAE;UACRC,KAAK,GAAG3M,eAAe,CAACrd,GAAG,CAAC4X,SAAS,CAAC;UACtC5X,GAAG,CAAC4X,SAAS,CAAC,GAAGnB,MAAM,GAAGY,SAAS,GAAGE,QAAQ;UAC9CvX,GAAG,CAAC0X,SAAS,CAAC,GAAGG,QAAQ;UACzBwF,eAAe,CAACrd,GAAG,CAACA,GAAG,CAAC;QAC5B;QACAkqB,wBAAwB,GAAG;UACvB9xB,CAAC,EAAEwxB,qBAAqB,CAAC35B,OAAO,CAACW,EAAE,CAAC,GAAGk5B,mBAAmB;UAC1D9Z,CAAC,EAAE4Z,qBAAqB,CAAC35B,OAAO,CAACQ,EAAE,CAAC,GAAGq5B;QAC3C,CAAC;QACD,IAAIC,MAAM,EAAE;UACR/pB,GAAG,CAAC4X,SAAS,CAAC,GAAGoS,KAAK;UACtBhqB,GAAG,CAAC0X,SAAS,CAAC,GAAGM,kBAAkB;UACnCqF,eAAe,CAACrd,GAAG,CAACA,GAAG,CAAC;QAC5B;QAEAiqB,YAAY,GAAGnB,kBAAkB,EAAE;QACnChB,OAAO,GAAGE,UAAU,CAACkC,wBAAwB,EAAEpK,4CAA4C,CAAC;QAE5FA,4CAA4C,GAAGoK,wBAAwB;QAEvE,OAAOpC,OAAO,IAAImC,YAAY;MAClC;;MAEA;AAChB;AACA;AACA;MACgB,SAASE,sBAAsB,GAAG;QAC9B,IAAIzT,SAAS,IAAIyK,2BAA2B,EACxC;QAEJ,IAAIvjB,IAAI;QACR,IAAIwsB,IAAI;QACR,IAAIC,KAAK;QACT,IAAIC,YAAY,GAAG,EAAE;QACrB,IAAIC,MAAM,GAAG,CACT;UACIC,KAAK,EAAExN,YAAY;UACnByN,MAAM,EAAEpJ,0BAA0B,CAAC/sB,MAAM,CAAC,UAAU;QACxD,CAAC,EACD;UACIk2B,KAAK,EAAE3U,WAAW,GAAGkH,cAAc,GAAG5tB,SAAS;UAC/Cs7B,MAAM,EAAErJ;QACZ,CAAC,CACJ;QAEDjkB,IAAI,CAACotB,MAAM,EAAE,UAAU1rB,KAAK,EAAE6rB,KAAK,EAAE;UACjC9sB,IAAI,GAAG8sB,KAAK,CAACF,KAAK;UAClB,IAAI5sB,IAAI,EAAE;YACNT,IAAI,CAACutB,KAAK,CAACD,MAAM,EAAE,UAAU5rB,KAAK,EAAEgH,IAAI,EAAE;cACtCukB,IAAI,GAAGvkB,IAAI,CAACvU,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGsM,IAAI,CAACqJ,EAAE,CAACpB,IAAI,CAAC,GAAGjI,IAAI,CAACiI,IAAI,CAACA,IAAI,CAAC;cAC/DwkB,KAAK,GAAGvJ,gBAAgB,CAACjb,IAAI,CAAC;cAE9B,IAAImiB,UAAU,CAACoC,IAAI,EAAEC,KAAK,CAAC,EAAE;gBACzBC,YAAY,CAACvqB,IAAI,CAAC8F,IAAI,CAAC;cAC3B;cAEAib,gBAAgB,CAACjb,IAAI,CAAC,GAAGukB,IAAI;YACjC,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;QAEFlD,6BAA6B,CAACoD,YAAY,CAAC;QAE3C,OAAOA,YAAY,CAACr6B,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC;MACtC;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASu6B,0BAA0B,CAACC,YAAY,EAAE;QAC9C,IAAI,CAACjV,YAAY,EACb,OAAO,IAAI;QACf,IAAIpa,QAAQ,GAAG,WAAW;QAC1B,IAAIC,UAAU,GAAG,aAAa;QAC9B,IAAIqvB,SAAS,GAAG,YAAY;QAC5B,IAAIC,eAAe,GAAG,CAClBpT,SAAS,EACTF,YAAY,GAAGE,SAAS,EACxBD,YAAY,GAAGC,SAAS,EACxBT,eAAe,GAAGM,QAAQ,EAC1BN,eAAe,GAAGI,SAAS,EAC3BE,QAAQ,EACRF,SAAS,EACT,aAAa,EACb,cAAc,EACd9b,QAAQ,EACRC,UAAU,EACVqvB,SAAS,CACZ;QACD,IAAIE,yBAAyB,GAAG,CAC5B7T,gBAAgB,GAAGK,QAAQ,EAC3BL,gBAAgB,GAAGG,SAAS,EAC5BF,eAAe,GAAGI,QAAQ,GAAGG,SAAS,EACtCP,eAAe,GAAGE,SAAS,GAAGK,SAAS,CAC1C;QACD,IAAIsT,eAAe,GAAG,CAClBrT,UAAU,EACVH,YAAY,GAAGG,UAAU,EACzBF,YAAY,GAAGE,UAAU,EACzBV,eAAe,GAAGG,OAAO,EACzBH,eAAe,GAAGK,UAAU,EAC5BF,OAAO,EACPE,UAAU,EACV,aAAa,EACb/b,QAAQ,EACRC,UAAU,EACVqvB,SAAS,CACZ;QACD,IAAII,yBAAyB,GAAG,CAC5B/T,gBAAgB,GAAGE,OAAO,EAC1BF,gBAAgB,GAAGI,UAAU,EAC7BH,eAAe,GAAGC,OAAO,GAAGM,SAAS,EACrCP,eAAe,GAAGG,UAAU,GAAGI,SAAS,CAC3C;QACD,IAAIwT,KAAK,GAAG,GAAG;QACf,IAAIC,MAAM,GAAG,KAAK;QAClB,IAAIC,MAAM,GAAG3L,sBAAsB,CAACnsB,CAAC,KAAK43B,KAAK,IAAIzL,sBAAsB,CAACnsB,CAAC,KAAK63B,MAAM;QACtF,IAAIE,MAAM,GAAG5L,sBAAsB,CAACjpB,CAAC,KAAK00B,KAAK,IAAIzL,sBAAsB,CAACjpB,CAAC,KAAK20B,MAAM;QACtF,IAAIG,cAAc,GAAG,KAAK;QAC1B,IAAIC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAar0B,GAAG,EAAEtF,IAAI,EAAE;UACzC,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+G,GAAG,CAACjH,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;YACrC,IAAI+G,GAAG,CAAC/G,CAAC,CAAC,KAAKyB,IAAI,EACf,OAAO,IAAI;UACnB;UACA,OAAO,KAAK;QAChB,CAAC;QAED,IAAIy5B,MAAM,EAAE;UACRC,cAAc,GAAGC,iBAAiB,CAACP,eAAe,EAAEJ,YAAY,CAAC;UACjE,IAAI,CAACU,cAAc,IAAI,CAACrV,YAAY,EAChCqV,cAAc,GAAGC,iBAAiB,CAACN,yBAAyB,EAAEL,YAAY,CAAC;QACnF;QACA,IAAIQ,MAAM,IAAI,CAACE,cAAc,EAAE;UAC3BA,cAAc,GAAGC,iBAAiB,CAACT,eAAe,EAAEF,YAAY,CAAC;UACjE,IAAI,CAACU,cAAc,IAAI,CAACrV,YAAY,EAChCqV,cAAc,GAAGC,iBAAiB,CAACR,yBAAyB,EAAEH,YAAY,CAAC;QACnF;QACA,OAAOU,cAAc;MACzB;;MAGA;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASpE,6BAA6B,CAACsE,KAAK,EAAE;QAC1CA,KAAK,GAAGA,KAAK,IAAIzP,wBAAwB;QACzC5e,IAAI,CAACquB,KAAK,EAAE,UAAU3sB,KAAK,EAAEgH,IAAI,EAAE;UAC/B,IAAIzS,aAAa,CAAC4D,GAAG,CAAC6O,IAAI,EAAEkW,wBAAwB,CAAC,GAAG,CAAC,CAAC,EAAE;YACxD,IAAI0P,UAAU,GAAG1O,cAAc,CAAClX,IAAI,CAACA,IAAI,CAAC;YAC1C,IAAItO,IAAI,CAACk0B,UAAU,CAAC,IAAIj8B,KAAK,CAACI,CAAC,EAAE;cAC7BwtB,gBAAgB,CAACvX,IAAI,CAACA,IAAI,EAAE4lB,UAAU,CAAC;YAC3C,CAAC,MACI;cACDrO,gBAAgB,CAACnX,UAAU,CAACJ,IAAI,CAAC;YACrC;UACJ;QACJ,CAAC,CAAC;MACN;;MAEA;AAChB;AACA;MACgB,SAASuhB,cAAc,GAAG;QACtB,IAAI,CAAC1Q,SAAS,EAAE;UACZ,IAAIgV,WAAW,GAAG,CAAClL,0BAA0B;UAC7C,IAAImL,QAAQ,GAAG7U,aAAa,CAAC1e,CAAC;UAC9B,IAAIwzB,SAAS,GAAG9U,aAAa,CAAC9G,CAAC;UAC/B,IAAIhQ,GAAG,GAAG,CAAC,CAAC;UACZ,IAAI6rB,SAAS,GAAG/M,eAAe,IAAI4M,WAAW;UAC9C,IAAII,SAAS;UACb,IAAIC,KAAK;UACT,IAAIC,UAAU;UACd,IAAIC,MAAM;;UAEV;UACAjsB,GAAG,CAACwX,YAAY,GAAGE,SAAS,CAAC,GAAG5c,SAAS;UACzCkF,GAAG,CAACwX,YAAY,GAAGG,UAAU,CAAC,GAAG7c,SAAS;;UAE1C;UACAkF,GAAG,CAAC0X,SAAS,CAAC,GAAGG,QAAQ;UACzBkF,cAAc,CAAC/c,GAAG,CAACA,GAAG,CAAC;;UAEvB;UACA8rB,SAAS,GAAG5N,oBAAoB,CAACjuB,OAAO,CAACS,EAAE,CAAC;UAC5Cq7B,KAAK,GAAGF,SAAS,GAAGl0B,IAAI,CAACkJ,GAAG,CAACirB,SAAS,EAAE5N,oBAAoB,CAACjuB,OAAO,CAACW,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACjF;;UAEA;UACAoP,GAAG,CAAC0X,SAAS,CAAC,GAAGoH,eAAe,GAAGjH,QAAQ,CAAC,YAAYG,kBAAkB;UAC1EhY,GAAG,CAACwX,YAAY,GAAGE,SAAS,CAAC,GAAGM,kBAAkB;;UAElD;UACAhY,GAAG,CAAC2X,UAAU,CAAC,GAAGE,QAAQ;UAC1BkF,cAAc,CAAC/c,GAAG,CAACA,GAAG,CAAC;;UAEvB;UACAgsB,UAAU,GAAG9N,oBAAoB,CAACjuB,OAAO,CAACM,EAAE,CAAC;UAC7C07B,MAAM,GAAGt0B,IAAI,CAACkJ,GAAG,CAACmrB,UAAU,EAAE9N,oBAAoB,CAACjuB,OAAO,CAACQ,EAAE,CAAC,GAAG,CAAC,CAAC;;UAEnE;UACAuP,GAAG,CAAC0X,SAAS,CAAC,GAAGqU,KAAK;UACtB/rB,GAAG,CAAC2X,UAAU,CAAC,GAAGsU,MAAM;UACxBzO,qBAAqB,CAACxd,GAAG,CAACA,GAAG,CAAC;;UAE9B;UACAA,GAAG,CAACwX,YAAY,GAAGE,SAAS,CAAC,GAAGiU,QAAQ,CAAC;UACzC3rB,GAAG,CAACwX,YAAY,GAAGG,UAAU,CAAC,GAAGiU,SAAS,CAAC;UAC3C7O,cAAc,CAAC/c,GAAG,CAACA,GAAG,CAAC;UAEvB,OAAO;YACHksB,cAAc,EAAEJ,SAAS;YACzBK,eAAe,EAAEH,UAAU;YAC3BI,aAAa,EAAEL,KAAK;YACpBM,cAAc,EAAEJ;UACpB,CAAC;QACL;MACJ;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACgB,SAAS3Z,MAAM,CAACga,WAAW,EAAE;QACzBv3B,YAAY,CAACwnB,uBAAuB,CAAC;QACrC+P,WAAW,GAAGA,WAAW,IAAI,CAAC,CAAC;QAC/BhQ,qBAAqB,CAAC2L,gBAAgB,IAAIqE,WAAW,CAACrE,gBAAgB;QACtE3L,qBAAqB,CAACqM,mBAAmB,IAAI2D,WAAW,CAAC3D,mBAAmB;QAC5ErM,qBAAqB,CAACiQ,MAAM,IAAID,WAAW,CAACC,MAAM;QAElD,IAAIv3B,GAAG,GAAG5B,aAAa,CAAC4B,GAAG,EAAE;QAC7B,IAAIw3B,eAAe,GAAG,CAAC,CAAClQ,qBAAqB,CAAC2L,gBAAgB;QAC9D,IAAIwE,kBAAkB,GAAG,CAAC,CAACnQ,qBAAqB,CAACqM,mBAAmB;QACpE,IAAI+D,KAAK,GAAG,CAAC,CAACpQ,qBAAqB,CAACiQ,MAAM;QAC1C,IAAII,cAAc,GAAGL,WAAW,CAACM,eAAe;QAChD,IAAIC,OAAO,GAAGrQ,iBAAiB,GAAG,CAAC,IAAI7G,YAAY,IAAI,CAACC,UAAU,IAAI,CAAC8W,KAAK,IAAI,CAACC,cAAc,IAAK33B,GAAG,GAAGqnB,eAAe,GAAIG,iBAAiB,IAAK,CAACuC,gBAAgB,IAAI,CAACD,eAAgB;QACzL,IAAIgO,eAAe;QAEnB,IAAID,OAAO,EACPtQ,uBAAuB,GAAG3nB,UAAU,CAAC0d,MAAM,EAAEkK,iBAAiB,CAAC;;QAEnE;QACA;QACA;QACA;QACA;QACA,IAAI5G,UAAU,IAAIiX,OAAO,IAAKnW,SAAS,IAAI,CAACiW,cAAe,IAAKhX,YAAY,IAAI,CAAC+W,KAAK,KAAKI,eAAe,GAAG9P,YAAY,CAAC/V,EAAE,CAAC,SAAS,CAAC,CAAE,IAAI+V,YAAY,CAAChd,GAAG,CAAC,SAAS,CAAC,KAAK,QAAQ,EACjL;QAEJqc,eAAe,GAAGrnB,GAAG;QACrBsnB,qBAAqB,GAAG,CAAC,CAAC;;QAE1B;QACA,IAAIpH,uBAAuB,IAAI,EAAEL,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAC,CAAC,EAAE;UAC5F;UACA4e,oBAAoB,CAAC9hB,CAAC,GAAG,CAAC;UAC1B8hB,oBAAoB,CAAC5e,CAAC,GAAG,CAAC;QAC9B,CAAC,MACI;UACD;UACA4e,oBAAoB,GAAG2X,UAAU,CAAC,CAAC,CAAC,EAAE7Z,OAAO,CAACxE,mBAAmB,CAAC;QACtE;;QAEA;QACA;QACA;QACA;QACAqI,uBAAuB,GAAG;UACtBzjB,CAAC,EAAE,CAAC8hB,oBAAoB,CAAC9hB,CAAC,IAAIuhB,0BAA0B,CAACvhB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;UACxEkD,CAAC,EAAE,CAAC4e,oBAAoB,CAAC5e,CAAC,IAAIqe,0BAA0B,CAACre,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI;QAC3E,CAAC;QAEDm2B,cAAc,GAAGA,cAAc,IAAI,CAAC,CAAC;QACrC;QACA;;QAEA,IAAIK,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAe;UAClC,OAAOhF,UAAU,CAAC3zB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC7C,KAAK,CAACyC,IAAI,CAACC,SAAS,CAAC,CAACI,MAAM,CAAC,CAACo4B,KAAK,CAAC,CAAC,CAAC;QAC3E,CAAC;;QAED;QACA,IAAIO,UAAU,GAAG;UACb35B,CAAC,EAAE8pB,gBAAgB,CAACriB,cAAc,CAAC,EAAE;UACrCvE,CAAC,EAAE4mB,gBAAgB,CAACpiB,aAAa,CAAC;QACtC,CAAC;QAED,IAAIkyB,gCAAgC,GAAGhR,uBAAuB,CAACvS,UAAU;QACzE,IAAIwjB,8BAA8B,GAAGjR,uBAAuB,CAAC/R,QAAQ;;QAErE;QACA,IAAIijB,oBAAoB,GAAGF,gCAAgC,CAACtjB,UAAU;QACtE,IAAIyjB,2BAA2B,GAAGL,mBAAmB,CAACI,oBAAoB,EAAEpN,0BAA0B,CAAC;;QAEvG;QACA,IAAIsN,kBAAkB,GAAGJ,gCAAgC,CAACrjB,QAAQ;QAClE,IAAI0jB,yBAAyB,GAAGP,mBAAmB,CAACM,kBAAkB,EAAErN,wBAAwB,CAAC;;QAEjG;QACA,IAAIuN,wBAAwB,GAAGN,gCAAgC,CAACljB,cAAc;QAC9E,IAAIyjB,+BAA+B,GAAGT,mBAAmB,CAACQ,wBAAwB,EAAEtN,8BAA8B,CAAC;;QAEnH;QACA,IAAIwN,uBAAuB,GAAGR,gCAAgC,CAACnjB,aAAa;QAC5E,IAAI4jB,8BAA8B,GAAGX,mBAAmB,CAACU,uBAAuB,EAAEvN,6BAA6B,CAAC;;QAEhH;QACA,IAAIxb,SAAS,GAAGuX,uBAAuB,CAACvX,SAAS;QACjD,IAAIipB,gBAAgB,GAAGZ,mBAAmB,CAACroB,SAAS,EAAE2b,eAAe,CAAC;;QAEtE;QACA,IAAIvX,MAAM,GAAGmT,uBAAuB,CAACnT,MAAM;QAC3C,IAAI8kB,aAAa,GAAGb,mBAAmB,CAACjkB,MAAM,EAAEqX,YAAY,CAAC,IAAI,CAACtK,OAAO,CAAC,CAAC;;QAE3E;QACA,IAAI3M,eAAe,GAAG+S,uBAAuB,CAAC/S,eAAe;QAC7D,IAAI2kB,sBAAsB,GAAGd,mBAAmB,CAAC7jB,eAAe,EAAEmW,qBAAqB,CAAC;;QAExF;QACA,IAAIrW,UAAU,GAAGiT,uBAAuB,CAACjT,UAAU;QACnD,IAAI8kB,iBAAiB,GAAGf,mBAAmB,CAAC/jB,UAAU,EAAEsW,gBAAgB,CAAC;;QAEzE;QACA,IAAIvW,eAAe,GAAGkT,uBAAuB,CAAClT,eAAe,IAAI,CAAC8M,OAAO,CAAC,CAAC;QAC3E,IAAIkY,sBAAsB,GAAGhB,mBAAmB,CAAChkB,eAAe,EAAE6W,qBAAqB,CAAC;;QAExF;QACA,IAAIoO,4BAA4B,GAAG/R,uBAAuB,CAAC3S,wBAAwB,CAACC,oBAAoB;QACxG,IAAI0kB,mCAAmC,GAAGlB,mBAAmB,CAACiB,4BAA4B,EAAEtO,kCAAkC,CAAC;;QAE/H;QACA,IAAIvW,UAAU,GAAG8S,uBAAuB,CAAC9S,UAAU;QACnD,IAAI+kB,iBAAiB,GAAGnB,mBAAmB,CAAC5jB,UAAU,EAAEwW,gBAAgB,CAAC;;QAEzE;QACA,IAAIlW,gBAAgB,GAAGwS,uBAAuB,CAACxS,gBAAgB;QAC/D,IAAI0kB,uBAAuB,GAAGpB,mBAAmB,CAACtjB,gBAAgB,EAAE+V,sBAAsB,EAAEiN,KAAK,CAAC;;QAElG;QACA,IAAI2B,gBAAgB,GAAGlB,8BAA8B,CAAC/iB,QAAQ;QAC9D,IAAIkkB,uBAAuB,GAAGtB,mBAAmB,CAACpM,sBAAsB,EAAEyN,gBAAgB,CAAC;;QAE3F;QACA,IAAIE,iBAAiB,GAAGpB,8BAA8B,CAAC9iB,SAAS;QAChE,IAAImkB,wBAAwB,GAAGxB,mBAAmB,CAACrM,uBAAuB,EAAE4N,iBAAiB,CAAC;;QAE9F;QACA5M,wBAAwB,GAAG2L,kBAAkB,KAAK,GAAG;QACrD1L,yBAAyB,GAAG0L,kBAAkB,KAAK,GAAG;QACtDzL,uBAAuB,GAAGyL,kBAAkB,KAAK,GAAG;QACpDxL,wBAAwB,GAAGwL,kBAAkB,KAAK,GAAG;;QAErD;QACA5L,wBAAwB,GAAGwL,gCAAgC,CAACpjB,aAAa;;QAEzE;QACAyW,aAAa,GAAGD,eAAe;;QAE/B;QACA2B,WAAW,GAAGlZ,MAAM,KAAK,GAAG;QAC5BmZ,WAAW,GAAGnZ,MAAM,KAAK,GAAG;QAC5BoZ,iBAAiB,GAAGpZ,MAAM,KAAK,GAAG;QAClCqZ,eAAe,GAAGrZ,MAAM,KAAK,GAAG;;QAEhC;QACAsX,kBAAkB,GAAGnE,uBAAuB,CAAChT,YAAY;;QAEzD;QACA+kB,4BAA4B,GAAGA,4BAA4B,IAAKpZ,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAE;;QAE7H;QACAwpB,0BAA0B,GAAGoN,oBAAoB;QACjDnN,wBAAwB,GAAGqN,kBAAkB;QAC7CpN,8BAA8B,GAAGsN,wBAAwB;QACzDrN,6BAA6B,GAAGuN,uBAAuB;QACvDpN,eAAe,GAAG3b,SAAS;QAC3Byb,YAAY,GAAGrX,MAAM;QACrBuW,qBAAqB,GAAGnW,eAAe;QACvCoW,gBAAgB,GAAGtW,UAAU;QAC7B4W,qBAAqB,GAAG7W,eAAe;QACvC2W,kCAAkC,GAAGsO,4BAA4B;QACjErO,gBAAgB,GAAGxW,UAAU;QAC7BqW,sBAAsB,GAAGsN,UAAU,CAAC,CAAC,CAAC,EAAErjB,gBAAgB,CAAC;QACzDkX,sBAAsB,GAAGyN,gBAAgB;QACzC1N,uBAAuB,GAAG4N,iBAAiB;QAC3C3P,iBAAiB,GAAGA,iBAAiB,IAAI;UAAEtrB,CAAC,EAAE,KAAK;UAAEkD,CAAC,EAAE;QAAM,CAAC;;QAE/D;QACA,IAAIo3B,gBAAgB,EAAE;UAClBnoB,WAAW,CAACuX,YAAY,EAAEuD,aAAa,GAAG1lB,SAAS,GAAG+gB,mBAAmB,CAAC;UAC1E5W,QAAQ,CAACgY,YAAY,EAAErY,SAAS,KAAKxV,SAAS,IAAIwV,SAAS,KAAK,IAAI,IAAIA,SAAS,CAACvS,MAAM,GAAG,CAAC,GAAGuS,SAAS,GAAGiX,mBAAmB,CAAC;QACnI;;QAEA;QACA,IAAIuS,iBAAiB,EAAE;UACnB,IAAI/kB,UAAU,KAAK,IAAI,IAAKA,UAAU,KAAK,IAAI,IAAI4L,sBAAuB,EAAE;YACxE4S,2BAA2B,EAAE;YAC7BpY,cAAc,CAAChK,GAAG,CAAC0I,KAAK,CAAC;UAC7B,CAAC,MACI;YACDsB,cAAc,CAACvM,MAAM,CAACiL,KAAK,CAAC;YAC5BmZ,wBAAwB,EAAE;UAC9B;QACJ;;QAEA;QACA,IAAI2G,sBAAsB,EAAE;UACxB,IAAIhlB,eAAe,EAAE;YACjB,IAAIuU,mBAAmB,EAAE;cACrBA,mBAAmB,CAAC3X,IAAI,EAAE;YAC9B,CAAC,MACI;cACD2X,mBAAmB,GAAG5iB,SAAS,CAACipB,WAAW,CAACrJ,4BAA4B,CAAC,CAAC;cAC1E4C,eAAe,CAACpa,MAAM,CAACwa,mBAAmB,CAAC;YAC/C;YACA,IAAIrH,sBAAsB,EAAE;cACxB+G,wBAAwB,CAACrX,IAAI,EAAE;YACnC,CAAC,MACI;cACDqX,wBAAwB,GAAGtiB,SAAS,CAACipB,WAAW,CAACpJ,iCAAiC,CAAC,CAAC;cACpF4D,8BAA8B,GAAGnB,wBAAwB,CAAC,CAAC,CAAC;cAE5DM,mBAAmB,CAACxa,MAAM,CAACka,wBAAwB,CAAC;cACpD,IAAIwR,OAAO,GAAG;gBAAEr2B,CAAC,EAAE,CAAC,CAAC;gBAAE4X,CAAC,EAAE,CAAC;cAAE,CAAC;cAC9BqT,mBAAmB,CAACpG,wBAAwB,EAAE,YAAY;gBACtD,IAAIyR,OAAO,GAAG;kBACVt2B,CAAC,EAAEgmB,8BAA8B,CAACnuB,OAAO,CAACS,EAAE,CAAC;kBAC7Csf,CAAC,EAAEoO,8BAA8B,CAACnuB,OAAO,CAACM,EAAE;gBAChD,CAAC;gBACD,IAAIy3B,UAAU,CAAC0G,OAAO,EAAED,OAAO,CAAC,EAAE;kBAC9B,IAAI9Y,YAAY,IAAKoJ,gBAAgB,IAAI2P,OAAO,CAAC1e,CAAC,GAAG,CAAE,IAAK8O,eAAe,IAAI4P,OAAO,CAACt2B,CAAC,GAAG,CAAE,EAAE;oBAC3Fka,MAAM,EAAE;kBACZ,CAAC,MACI,IAAIqD,YAAY,IAAK,CAACoJ,gBAAgB,IAAI2P,OAAO,CAAC1e,CAAC,KAAK,CAAE,IAAK,CAAC8O,eAAe,IAAI4P,OAAO,CAACt2B,CAAC,KAAK,CAAE,EAAE;oBACtGka,MAAM,EAAE;kBACZ;gBACJ;gBACAmc,OAAO,GAAGC,OAAO;cACrB,CAAC,CAAC;cACFxY,sBAAsB,GAAG,IAAI;cAC7B;cACA;cACA,IAAIf,QAAQ,KAAK,IAAI,EACjB8H,wBAAwB,CAACjd,GAAG,CAAC2X,UAAU,EAAExC,QAAQ,GAAG,cAAc,CAAC;YAC3E;UACJ,CAAC,MACI;YACD,IAAIe,sBAAsB,EACtB+G,wBAAwB,CAACvX,IAAI,EAAE;YACnC,IAAI6X,mBAAmB,EACnBA,mBAAmB,CAAC7X,IAAI,EAAE;UAClC;QACJ;;QAEA;QACA,IAAIgnB,KAAK,EAAE;UACPxP,oBAAoB,CAACnW,IAAI,CAAC,GAAG,CAAC,CAACvE,OAAO,CAACuV,UAAU,CAAC;UAClD,IAAI7B,sBAAsB,EACtB+G,wBAAwB,CAAClW,IAAI,CAAC,GAAG,CAAC,CAACvE,OAAO,CAACuV,UAAU,CAAC;QAC9D;;QAEA;QACA+U,eAAe,GAAGA,eAAe,KAAK39B,SAAS,GAAG6tB,YAAY,CAAC/V,EAAE,CAAC,SAAS,CAAC,GAAG6lB,eAAe;;QAE9F;QACA,IAAI6B,oBAAoB,GAAG9Y,WAAW,GAAGkH,cAAc,CAAClX,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,GAAG,KAAK;QACtF,IAAI+oB,2BAA2B,GAAG5B,mBAAmB,CAAC2B,oBAAoB,EAAEnO,0BAA0B,CAAC;;QAEvG;QACA,IAAIqO,YAAY,GAAG7R,YAAY,CAAChd,GAAG,CAAC,WAAW,CAAC;QAChD,IAAI8uB,mBAAmB,GAAG9B,mBAAmB,CAAC6B,YAAY,EAAEzP,kBAAkB,CAAC;;QAE/E;QACA,IAAI2P,SAAS,GAAG/R,YAAY,CAAChd,GAAG,CAAC,YAAY,CAAC;QAC9C,IAAIgvB,gBAAgB,GAAGhC,mBAAmB,CAAC+B,SAAS,EAAE/P,kBAAkB,CAAC;;QAEzE;QACA,IAAIiQ,OAAO,GAAGC,yBAAyB,CAAChY,gBAAgB,CAAC;;QAEzD;QACA,IAAIiY,6BAA6B;QACjC;QACA,IAAI;UACAA,6BAA6B,GAAGjZ,sBAAsB,GAAGkI,8BAA8B,CAACnuB,OAAO,CAACa,GAAG,CAAC,EAAE,GAAG,IAAI;QACjH,CAAC,CAAC,OAAO6e,EAAE,EAAE;UACT;QACJ;QAEA8G,MAAM,GAAGoY,YAAY,KAAK,KAAK;QAC/B5Y,YAAY,GAAI8Y,SAAS,KAAK,YAAa;QAC3C,IAAIK,SAAS,GAAG3Y,MAAM,GAAGc,QAAQ,GAAGF,SAAS;QAC7C,IAAIgY,UAAU,GAAG5Y,MAAM,GAAGY,SAAS,GAAGE,QAAQ;;QAE9C;QACA,IAAI+X,wBAAwB,GAAG,KAAK;QACpC,IAAIC,0BAA0B,GAAIrZ,sBAAsB,IAAK8G,YAAY,CAAChd,GAAG,CAAC4X,SAAS,CAAC,KAAK,MAAM,CAAC,mBAAoB,GAAKjgB,IAAI,CAAC6Z,KAAK,CAAC2d,6BAA6B,CAACK,KAAK,GAAGL,6BAA6B,CAAC3oB,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC2C,eAAe,GAAIgV,kBAAkB,CAACluB,OAAO,CAACU,EAAE,CAAC,GAAGwlB,SAAS,GAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK;QAChT,IAAInN,eAAe,IAAI,CAACumB,0BAA0B,EAAE;UAChD,IAAIE,gBAAgB,GAAGtR,kBAAkB,CAACluB,OAAO,CAACS,EAAE,CAAC;UACrD,IAAIg/B,uBAAuB,GAAGnS,mBAAmB,CAACvd,GAAG,CAAC0X,SAAS,CAAC;UAChE6F,mBAAmB,CAACvd,GAAG,CAAC0X,SAAS,EAAEG,QAAQ,CAAC;UAE5C,IAAI8X,eAAe,GAAGxR,kBAAkB,CAACluB,OAAO,CAACS,EAAE,CAAC;UACpD6sB,mBAAmB,CAACvd,GAAG,CAAC0X,SAAS,EAAEgY,uBAAuB,CAAC;UAC3DJ,wBAAwB,GAAGG,gBAAgB,KAAKE,eAAe;UAC/D,IAAI,CAACL,wBAAwB,EAAE;YAC3B/R,mBAAmB,CAACvd,GAAG,CAAC0X,SAAS,EAAE+X,gBAAgB,GAAG,CAAC,CAAC;YACxDE,eAAe,GAAGxR,kBAAkB,CAACluB,OAAO,CAACS,EAAE,CAAC;YAChD6sB,mBAAmB,CAACvd,GAAG,CAAC0X,SAAS,EAAEgY,uBAAuB,CAAC;YAC3DJ,wBAAwB,GAAGG,gBAAgB,KAAKE,eAAe;UACnE;QACJ;QACA,IAAIC,SAAS,GAAG,CAACL,0BAA0B,IAAID,wBAAwB,KAAKtmB,eAAe,IAAI,CAAC8jB,eAAe;QAC/G,IAAI+C,gBAAgB,GAAG7C,mBAAmB,CAAC4C,SAAS,EAAE9Q,eAAe,CAAC;QACtE,IAAIgR,YAAY,GAAG,CAACF,SAAS,IAAI9Q,eAAe;;QAEhD;QACA,IAAIiR,UAAU,GAAG7Z,sBAAsB,IAAIlN,eAAe,IAAI,CAAC8jB,eAAe,GAAIn1B,IAAI,CAAC6Z,KAAK,CAAC2d,6BAA6B,CAACa,MAAM,GAAGb,6BAA6B,CAAC5oB,GAAG,CAAC,KAAK,CAAC,CAAE,mFAAmF,KAAK;QACtQ,IAAI0pB,iBAAiB,GAAGjD,mBAAmB,CAAC+C,UAAU,EAAEhR,gBAAgB,CAAC;QACzE,IAAImR,aAAa,GAAG,CAACH,UAAU,IAAIhR,gBAAgB;;QAEnD;QACA;QACA,IAAIoR,aAAa,GAAIP,SAAS,IAAI3Z,YAAY,IAAK,CAACA,YAAY;QAChE,IAAIma,aAAa,GAAIL,UAAU,IAAI9Z,YAAY,IAAK,CAACA,YAAY;QACjE,IAAIoa,MAAM,GAAGnB,yBAAyB,CAAC/X,eAAe,EAAE,GAAG,GAAGO,SAAS,EAAE,CAACyY,aAAa,EAAE,CAACC,aAAa,CAAC;;QAExG;QACA,IAAIE,MAAM,GAAGpB,yBAAyB,CAACjY,eAAe,CAAC;;QAEvD;QACA,IAAIsZ,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAIC,qBAAqB,GAAG,CAAC,CAAC;;QAE9B;QACA,IAAIC,WAAW,GAAG,SAAdA,WAAW,GAAe;UAC1B;UACA,OAAO;YACHr4B,CAAC,EAAE+lB,kBAAkB,CAACluB,OAAO,CAACU,EAAE,CAAC;YACjCqf,CAAC,EAAEmO,kBAAkB,CAACluB,OAAO,CAACO,EAAE;UACpC,CAAC;QACL,CAAC;QACD,IAAIkgC,eAAe,GAAG,SAAlBA,eAAe,GAAe;UAC9B;UACA;UACA;UACA,OAAO;YACHt4B,CAAC,EAAEkmB,qBAAqB,CAACruB,OAAO,CAACS,EAAE,CAAC,GAAGiH,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAE2d,qBAAqB,CAACvuB,OAAO,CAACU,EAAE,CAAC,GAAG6tB,qBAAqB,CAACvuB,OAAO,CAACW,EAAE,CAAC,CAAC;YACzHof,CAAC,EAAEsO,qBAAqB,CAACruB,OAAO,CAACM,EAAE,CAAC,GAAGoH,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAE2d,qBAAqB,CAACvuB,OAAO,CAACO,EAAE,CAAC,GAAGguB,qBAAqB,CAACvuB,OAAO,CAACQ,EAAE,CAAC;UAC5H,CAAC;QACL,CAAC;;QAED;QACA,IAAIkgC,gBAAgB,GAAGxa,SAAS,GAAG8Y,OAAO,CAAC7+B,CAAC,GAAG6+B,OAAO,CAAC2B,CAAC;QACxD,IAAIC,gBAAgB,GAAGza,SAAS,GAAG6Y,OAAO,CAAC32B,CAAC,GAAG22B,OAAO,CAACp/B,CAAC;QACxD8gC,gBAAgB,IAAIxnB,eAAe,GAAG,CAAC,GAAG,CAAC;QAC3C0nB,gBAAgB,IAAI1nB,eAAe,GAAG,CAAC,GAAG,CAAC;QAC3C8lB,OAAO,CAAC/+B,CAAC,GAAG88B,mBAAmB,CAACiC,OAAO,EAAEhQ,gBAAgB,CAAC;;QAE1D;QACA5I,QAAQ,GAAGga,MAAM,CAACjgC,CAAC,GAAGigC,MAAM,CAACO,CAAC;QAC9Bta,QAAQ,GAAG+Z,MAAM,CAAC/3B,CAAC,GAAG+3B,MAAM,CAACxgC,CAAC;QAC9BwgC,MAAM,CAACngC,CAAC,GAAG88B,mBAAmB,CAACqD,MAAM,EAAEnR,eAAe,CAAC;;QAEvD;QACA3I,QAAQ,GAAG+Z,MAAM,CAAClgC,CAAC,GAAGkgC,MAAM,CAACM,CAAC;QAC9Bpa,QAAQ,GAAG8Z,MAAM,CAACh4B,CAAC,GAAGg4B,MAAM,CAACzgC,CAAC;QAC9BygC,MAAM,CAACpgC,CAAC,GAAG88B,mBAAmB,CAACsD,MAAM,EAAEnR,eAAe,CAAC;;QAEvD;QACAqB,0BAA0B,GAAGmO,oBAAoB;QACjDvP,kBAAkB,GAAGyP,YAAY;QACjC7P,kBAAkB,GAAG+P,SAAS;QAC9BjQ,eAAe,GAAG8Q,SAAS;QAC3B7Q,gBAAgB,GAAGgR,UAAU;QAC7B9Q,gBAAgB,GAAGgQ,OAAO;QAC1B/P,eAAe,GAAGmR,MAAM;QACxBlR,eAAe,GAAGmR,MAAM;;QAExB;QACA,IAAIxB,mBAAmB,IAAI5Y,sBAAsB,EAC7C+G,wBAAwB,CAACjd,GAAG,CAAC4X,SAAS,EAAEyX,UAAU,CAAC;;QAEvD;QACA,IAAIJ,OAAO,CAAC/+B,CAAC,IAAI4+B,mBAAmB,IAAIhB,sBAAsB,IAAI+B,gBAAgB,IAAII,iBAAiB,IAAIjB,gBAAgB,IAAIhB,sBAAsB,EAAE;UACnJ,IAAI8C,iBAAiB,GAAG,CAAC,CAAC;UAC1B,IAAIC,WAAW,GAAG,CAAC,CAAC;UACpB,IAAIC,aAAa,GAAG,CAAC/B,OAAO,CAAC32B,CAAC,EAAE22B,OAAO,CAAC2B,CAAC,EAAE3B,OAAO,CAACp/B,CAAC,EAAEo/B,OAAO,CAAC7+B,CAAC,CAAC;UAEhE40B,qBAAqB,CAACwL,qBAAqB,EAAEvZ,eAAe,EAAE,CAAC,CAACgY,OAAO,CAAC32B,CAAC,EAAE,CAAC22B,OAAO,CAAC2B,CAAC,EAAE,CAAC3B,OAAO,CAACp/B,CAAC,EAAE,CAACo/B,OAAO,CAAC7+B,CAAC,CAAC,CAAC;UAC/G,IAAI+Y,eAAe,EAAE;YACjB6b,qBAAqB,CAAC8L,iBAAiB,EAAEh2B,SAAS,EAAEk2B,aAAa,CAAC;YAClEhM,qBAAqB,CAACnP,WAAW,GAAGkb,WAAW,GAAGR,iBAAiB,EAAErZ,gBAAgB,CAAC;UAC1F,CAAC,MACI;YACD8N,qBAAqB,CAAC8L,iBAAiB,EAAEh2B,SAAS,CAAC;YACnDkqB,qBAAqB,CAACnP,WAAW,GAAGkb,WAAW,GAAGR,iBAAiB,EAAErZ,gBAAgB,EAAE8Z,aAAa,CAAC;UACzG;UAEA7T,eAAe,CAACnd,GAAG,CAAC8wB,iBAAiB,CAAC;UACtC/T,cAAc,CAAC/c,GAAG,CAAC+wB,WAAW,CAAC;QACnC;;QAEA;QACAja,aAAa,GAAG4Z,eAAe,EAAE;;QAEjC;QACA,IAAIO,YAAY,GAAGpb,WAAW,GAAGuR,cAAc,EAAE,GAAG,KAAK;QACzD,IAAI8J,mBAAmB,GAAGrb,WAAW,IAAImX,mBAAmB,CAACiE,YAAY,EAAEvQ,kBAAkB,CAAC;QAC9F,IAAIyQ,mBAAmB,GAAGtb,WAAW,IAAIob,YAAY,GAAG;UACpD74B,CAAC,EAAEi2B,gBAAgB,GAAG4C,YAAY,CAAC7E,aAAa,GAAG6E,YAAY,CAAC/E,cAAc;UAC9Elc,CAAC,EAAEue,iBAAiB,GAAG0C,YAAY,CAAC5E,cAAc,GAAG4E,YAAY,CAAC9E;QACtE,CAAC,GAAG,CAAC,CAAC;QACNzL,kBAAkB,GAAGuQ,YAAY;;QAEjC;QACA,IAAIlB,UAAU,KAAKE,iBAAiB,IAAInC,sBAAsB,IAAIkB,gBAAgB,IAAIC,OAAO,CAAC/+B,CAAC,IAAImgC,MAAM,CAACngC,CAAC,CAAC,EAAE;UAC1GqgC,iBAAiB,CAAC5Y,UAAU,CAAC,GAAGE,QAAQ;QAC5C,CAAC,MACI,IAAIoY,iBAAiB,IAAInC,sBAAsB,EAAE;UAClDyC,iBAAiB,CAAC5Y,UAAU,CAAC,GAAGK,kBAAkB;QACtD;QACA,IAAI4X,SAAS,KAAKC,gBAAgB,IAAI/B,sBAAsB,IAAIkB,gBAAgB,IAAIC,OAAO,CAAC/+B,CAAC,IAAImgC,MAAM,CAACngC,CAAC,IAAI4+B,mBAAmB,CAAC,EAAE;UAC/HyB,iBAAiB,CAAC7Y,SAAS,CAAC,GAAGG,QAAQ;UACvC2Y,qBAAqB,CAAC/Y,YAAY,GAAGC,SAAS,CAAC,GAAGM,kBAAkB,CAAC,CAAC;QAC1E,CAAC,MACI,IAAI6X,gBAAgB,IAAI/B,sBAAsB,EAAE;UACjDyC,iBAAiB,CAAC7Y,SAAS,CAAC,GAAGM,kBAAkB;UACjDuY,iBAAiB,CAAC3Y,SAAS,CAAC,GAAG9c,SAAS;UACxC01B,qBAAqB,CAAC/Y,YAAY,GAAGC,SAAS,CAAC,GAAG5c,SAAS,CAAC,CAAC;QACjE;;QACA,IAAI80B,SAAS,EAAE;UACX;UACAY,qBAAqB,CAAC9Y,SAAS,CAAC,GAAGG,QAAQ;UAE3C0Y,iBAAiB,CAAC7Y,SAAS,CAAC,GAAG3mB,OAAO,CAACuB,iBAAiB,CAAColB,SAAS,EAAE,uBAAuB,CAAC,IAAIG,QAAQ;UACxG0Y,iBAAiB,CAAC3Y,SAAS,CAAC,GAAGyX,UAAU;QAC7C,CAAC,MACI;UACDmB,qBAAqB,CAAC9Y,SAAS,CAAC,GAAG5c,SAAS;QAChD;QACA,IAAIi1B,UAAU,EAAE;UACZ;UACAS,qBAAqB,CAAC7Y,UAAU,CAAC,GAAGwZ,mBAAmB,CAACnhB,CAAC,IAAIwO,qBAAqB,CAACvuB,OAAO,CAACO,EAAE,CAAC;QAClG,CAAC,MACI;UACDggC,qBAAqB,CAAC7Y,UAAU,CAAC,GAAG7c,SAAS;QACjD;QACA,IAAIkO,eAAe,EACfuU,mBAAmB,CAACvd,GAAG,CAACwwB,qBAAqB,CAAC;QAClDnT,eAAe,CAACrd,GAAG,CAACuwB,iBAAiB,CAAC;;QAEtC;QACAA,iBAAiB,GAAG,CAAC,CAAC;QACtBC,qBAAqB,GAAG,CAAC,CAAC;;QAE1B;QACA,IAAIhE,eAAe,IAAIC,kBAAkB,IAAIyE,mBAAmB,IAAIpC,mBAAmB,IAAIE,gBAAgB,IAAIlB,sBAAsB,IAAI+B,gBAAgB,IAAID,SAAS,IAAIK,iBAAiB,IAAIF,UAAU,IAAI7B,mCAAmC,IAAIE,uBAAuB,IAAIL,iBAAiB,IAAIF,aAAa,IAAIR,2BAA2B,IAAIE,yBAAyB,IAAII,8BAA8B,IAAIF,+BAA+B,IAAIa,uBAAuB,IAAIE,wBAAwB,IAAII,2BAA2B,EAAE;UACtgB,IAAIzgB,WAAW,GAAG,UAAU;UAC5B,IAAIijB,YAAY,GAAGjjB,WAAW,GAAG,IAAI;UACrC,IAAIkjB,YAAY,GAAGljB,WAAW,GAAG,IAAI;UACrC,IAAIC,SAAS,GAAG,QAAQ;UACxB,IAAIkjB,UAAU,GAAG,SAAS;;UAE1B;UACA;UACA,IAAI,CAACpc,uBAAuB,EAAE;YAC1B,IAAIqc,uBAAuB,GAAG,CAAC,CAAC;YAChC,IAAIC,SAAS,GAAG5S,iBAAiB,CAACpoB,CAAC,IAAIqoB,kBAAkB,CAAC4S,EAAE,IAAI,CAACxD,4BAA4B,GAAIpZ,0BAA0B,CAACre,CAAC,GAAG4mB,gBAAgB,CAACpd,GAAG,CAACovB,SAAS,CAAC,GAAG,CAACha,oBAAoB,CAAC5e,CAAC,GAAI,CAAC;YAC9L,IAAIk7B,cAAc,GAAG9S,iBAAiB,CAACtrB,CAAC,IAAIurB,kBAAkB,CAAC8S,EAAE,IAAI,CAAC1D,4BAA4B,GAAIpZ,0BAA0B,CAACvhB,CAAC,GAAG8pB,gBAAgB,CAACpd,GAAG,CAACsX,UAAU,CAAC,GAAG,CAAClC,oBAAoB,CAAC9hB,CAAC,GAAI,CAAC;YACpM0xB,qBAAqB,CAACuM,uBAAuB,EAAEz2B,SAAS,CAAC;YACzDsiB,gBAAgB,CAACpd,GAAG,CAACuxB,uBAAuB,CAAC;UACjD;;UAEA;UACA,IAAI3H,qBAAqB,GAAGC,wBAAwB,EAAE;UACtD;UACA,IAAI+H,WAAW,GAAG;YACd;YACAx5B,CAAC,EAAE+4B,mBAAmB,CAAC/4B,CAAC,IAAIwxB,qBAAqB,CAAC35B,OAAO,CAACU,EAAE,CAAC;YAC7Dqf,CAAC,EAAEmhB,mBAAmB,CAACnhB,CAAC,IAAI4Z,qBAAqB,CAAC35B,OAAO,CAACO,EAAE;UAChE,CAAC;UACD,IAAIuf,UAAU,GAAG;YACb3X,CAAC,EAAEwxB,qBAAqB,CAAC35B,OAAO,CAACW,EAAE,CAAC;YACpCof,CAAC,EAAE4Z,qBAAqB,CAAC35B,OAAO,CAACQ,EAAE;UACvC,CAAC;;UAED;UACA,IAAI,CAACykB,uBAAuB,EAAE;YAC1Bqc,uBAAuB,CAACja,UAAU,CAAC,GAAG4Y,aAAa,GAAGp1B,SAAS,GAAG42B,cAAc;YAChFH,uBAAuB,CAACnC,SAAS,CAAC,GAAGU,YAAY,GAAGh1B,SAAS,GAAG02B,SAAS;YACzEpU,gBAAgB,CAACpd,GAAG,CAACuxB,uBAAuB,CAAC;UACjD;UACAza,aAAa,GAAG4Z,eAAe,EAAE;;UAEjC;UACA,IAAI3I,QAAQ,GAAG0I,WAAW,EAAE;UAC5B,IAAIoB,oBAAoB,GAAG;YACvBz5B,CAAC,EAAE2vB,QAAQ,CAAC3vB,CAAC,GAAGme,QAAQ,GAAGF,QAAQ,IAAIJ,YAAY,GAAG,CAAC,GAAGE,SAAS,CAAC;YACpEnG,CAAC,EAAE+X,QAAQ,CAAC/X,CAAC,GAAGwG,QAAQ,GAAGF,QAAQ,IAAIL,YAAY,GAAG,CAAC,GAAGG,SAAS;UACvE,CAAC;UACD,IAAI0b,eAAe,GAAG;YAClB;YACA;YACA15B,CAAC,EAAET,IAAI,CAACkJ,GAAG,CAAC,CAAC+uB,SAAS,GAAGgC,WAAW,CAACx5B,CAAC,GAAG2X,UAAU,CAAC3X,CAAC,IAAIu4B,gBAAgB,EAAEkB,oBAAoB,CAACz5B,CAAC,CAAC;YAClG4X,CAAC,EAAErY,IAAI,CAACkJ,GAAG,CAAC,CAACkvB,UAAU,GAAG6B,WAAW,CAAC5hB,CAAC,GAAGD,UAAU,CAACC,CAAC,IAAI6gB,gBAAgB,EAAEgB,oBAAoB,CAAC7hB,CAAC;UACtG,CAAC;UACD8hB,eAAe,CAAC5hC,CAAC,GAAG88B,mBAAmB,CAAC8E,eAAe,EAAEtS,qBAAqB,CAAC;UAC/EA,qBAAqB,GAAGsS,eAAe;;UAEvC;UACA,IAAI9oB,eAAe,EAAE;YACjB;YACA,IAAI8oB,eAAe,CAAC5hC,CAAC,IAAK6/B,UAAU,IAAIH,SAAU,EAAE;cAChDY,qBAAqB,CAAC9Y,SAAS,CAAC,GAAGoa,eAAe,CAAC15B,CAAC;cACpDo4B,qBAAqB,CAAC7Y,UAAU,CAAC,GAAGma,eAAe,CAAC9hB,CAAC;;cAErD;cACA,IAAI,CAAC6F,WAAW,EAAE;gBACd+b,WAAW,GAAG;kBACV;kBACAx5B,CAAC,EAAEwxB,qBAAqB,CAAC35B,OAAO,CAACU,EAAE,CAAC;kBACpCqf,CAAC,EAAE4Z,qBAAqB,CAAC35B,OAAO,CAACO,EAAE;gBACvC,CAAC;cACL;YACJ;YACA,IAAIuhC,gBAAgB,GAAG,CAAC,CAAC;YACzB,IAAIC,gCAAgC,GAAG,SAAnCA,gCAAgC,CAAaC,UAAU,EAAE;cACzD,IAAIC,aAAa,GAAGC,gBAAgB,CAACF,UAAU,CAAC;cAChD,IAAIG,EAAE,GAAGF,aAAa,CAACG,IAAI;cAC3B,IAAIC,KAAK,GAAGJ,aAAa,CAACK,aAAa;cACvC,IAAIC,QAAQ,GAAGP,UAAU,GAAGrC,SAAS,GAAGG,UAAU;cAClD,IAAI0C,UAAU,GAAGR,UAAU,GAAG5b,QAAQ,GAAGC,QAAQ;cACjD,IAAIoc,WAAW,GAAGT,UAAU,GAAG9b,SAAS,GAAGC,SAAS;cACpD,IAAIuc,UAAU,GAAGV,UAAU,GAAG1b,QAAQ,GAAGC,QAAQ;cACjD,IAAIoc,YAAY,GAAG9b,aAAa,CAACsb,EAAE,CAAC,GAAGK,UAAU,GAAGE,UAAU,IAAI1c,YAAY,GAAG,CAAC,GAAGyc,WAAW,CAAC;;cAEjG;cACA,IAAI,CAACF,QAAQ,IAAK,CAACA,QAAQ,IAAInC,MAAM,CAACngC,CAAE,EACpCsgC,qBAAqB,CAAC8B,KAAK,CAAC,GAAGT,oBAAoB,CAACO,EAAE,CAAC,GAAG,CAAC;;cAE/D;cACA,IAAII,QAAQ,IAAKZ,WAAW,CAACQ,EAAE,CAAC,GAAGQ,YAAa,KAAKX,UAAU,IAAIpc,WAAW,GAAG,CAAC8Y,oBAAoB,GAAG,IAAI,CAAC,EAAE;gBAC5G,IAAI9Y,WAAW,EACXkc,gBAAgB,CAACO,KAAK,CAAC,GAAGtJ,mBAAmB,CAACxL,qBAAqB,CAACxd,GAAG,CAACsyB,KAAK,CAAC,CAAC,GAAG,CAAC;gBACvF9B,qBAAqB,CAAC8B,KAAK,CAAC,IAAI,CAAC;cACrC;;cAEA;cACA,IAAIV,WAAW,CAACQ,EAAE,CAAC,GAAG,CAAC,EACnB5B,qBAAqB,CAAC8B,KAAK,CAAC,GAAG36B,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAE2vB,qBAAqB,CAAC8B,KAAK,CAAC,CAAC;YAChF,CAAC;YACDN,gCAAgC,CAAC,IAAI,CAAC;YACtCA,gCAAgC,CAAC,KAAK,CAAC;YAEvC,IAAInc,WAAW,EACX2H,qBAAqB,CAACxd,GAAG,CAAC+xB,gBAAgB,CAAC;YAC/CxU,mBAAmB,CAACvd,GAAG,CAACwwB,qBAAqB,CAAC;UAClD;UACA,IAAIZ,SAAS,EACTW,iBAAiB,CAAC7Y,SAAS,CAAC,GAAGM,kBAAkB;UACrD,IAAI4X,SAAS,IAAI,CAAC3Z,YAAY,IAAI,CAACkL,2BAA2B,EAC1DoP,iBAAiB,CAAC3Y,SAAS,CAAC,GAAG,MAAM;;UAEzC;UACAyF,eAAe,CAACrd,GAAG,CAACuwB,iBAAiB,CAAC;UACtCA,iBAAiB,GAAG,CAAC,CAAC;;UAEtB;UACA,IAAIsC,iBAAiB,GAAG;YACpBz6B,CAAC,EAAEwxB,qBAAqB,CAAC35B,OAAO,CAACW,EAAE,CAAC;YACpCof,CAAC,EAAE4Z,qBAAqB,CAAC35B,OAAO,CAACQ,EAAE;UACvC,CAAC;UACDoiC,iBAAiB,CAAC3iC,CAAC,GAAGu8B,kBAAkB,GAAGO,mBAAmB,CAAC6F,iBAAiB,EAAEnU,uBAAuB,CAAC;UAC1GA,uBAAuB,GAAGmU,iBAAiB;;UAE3C;UACA/b,aAAa,GAAG4Z,eAAe,EAAE;UAEjC3I,QAAQ,GAAG0I,WAAW,EAAE;UACxBjE,eAAe,GAAGQ,mBAAmB,CAACjF,QAAQ,EAAEtJ,cAAc,CAAC;UAC/DA,cAAc,GAAGsJ,QAAQ;UAEzB,IAAI+K,yBAAyB,GAAGjd,WAAW,KAAKiB,aAAa,CAAC1e,CAAC,KAAK,CAAC,IAAI0e,aAAa,CAAC9G,CAAC,KAAK,CAAC,CAAC;UAC/F,IAAI+iB,sBAAsB,GAAGrT,oBAAoB;UACjD,IAAIsT,oBAAoB,GAAG,CAAC,CAAC;UAC7B,IAAIC,oBAAoB,GAAG,CAAC,CAAC;UAC7B,IAAIC,mBAAmB,GAAG,CAAC,CAAC;UAC5B,IAAIC,cAAc,GAAG,CAAC,CAAC;UACvB,IAAIC,WAAW,GAAG,CAAC,CAAC;UACpB,IAAIC,YAAY,GAAG,CAAC,CAAC;UACrB,IAAIC,SAAS,GAAG,CAAC,CAAC;UAClB,IAAIC,YAAY,GAAGjV,qBAAqB,CAACruB,OAAO,CAACa,GAAG,CAAC,EAAE;UACvD,IAAI0iC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAavB,UAAU,EAAE;YAC7C,IAAIC,aAAa,GAAGC,gBAAgB,CAACF,UAAU,CAAC;YAChD,IAAIwB,qBAAqB,GAAGtB,gBAAgB,CAAC,CAACF,UAAU,CAAC;YACzD,IAAIyB,GAAG,GAAGD,qBAAqB,CAACE,IAAI;YACpC,IAAIC,EAAE,GAAG1B,aAAa,CAACyB,IAAI;YAC3B,IAAIvB,EAAE,GAAGF,aAAa,CAACG,IAAI;YAC3B,IAAIwB,WAAW,GAAG3B,aAAa,CAACK,aAAa;YAC7C,IAAIuB,SAAS,GAAG/b,UAAU,GAAGma,aAAa,CAAC6B,SAAS,GAAG,KAAK;YAC5D,IAAIC,wBAAwB,GAAGT,YAAY,CAACM,WAAW,CAAC,GAAGl8B,IAAI,CAACc,GAAG,CAAC86B,YAAY,CAACM,WAAW,CAAC,GAAG/c,aAAa,CAACsb,EAAE,CAAC,CAAC,GAAG,CAAC;YACtH,IAAI6B,6BAA6B,GAAGlB,sBAAsB,IAAIA,sBAAsB,CAACa,EAAE,CAAC,GAAG,CAAC,IAAIrV,sBAAsB,CAACuV,SAAS,CAAC,KAAK,CAAC;YACvId,oBAAoB,CAACY,EAAE,CAAC,GAAGlqB,gBAAgB,CAACkqB,EAAE,CAAC,KAAK,KAAK;YACzDX,oBAAoB,CAACW,EAAE,CAAC,GAAGlqB,gBAAgB,CAACkqB,EAAE,CAAC,KAAK,KAAK;YACzDV,mBAAmB,CAACU,EAAE,CAAC,GAAGlqB,gBAAgB,CAACkqB,EAAE,CAAC,KAAK,GAAG;YACtDT,cAAc,CAACS,EAAE,CAAC,GAAGj8B,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAElJ,IAAI,CAAC6Z,KAAK,CAAC,CAACqhB,iBAAiB,CAACT,EAAE,CAAC,GAAGtb,aAAa,CAACsb,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;YACrGe,cAAc,CAACS,EAAE,CAAC,IAAKd,yBAAyB,IAAKmB,6BAA6B,IAAID,wBAAwB,GAAG,CAAC,IAAIA,wBAAwB,GAAG,CAAE,GAAI,CAAC,GAAG,CAAC;YAC5JZ,WAAW,CAACQ,EAAE,CAAC,GAAGT,cAAc,CAACS,EAAE,CAAC,GAAG,CAAC;;YAExC;YACA;YACA;YACAP,YAAY,CAACO,EAAE,CAAC,GAAGZ,oBAAoB,CAACY,EAAE,CAAC,IAAIX,oBAAoB,CAACW,EAAE,CAAC,GAAIR,WAAW,CAACM,GAAG,CAAC,IAAI,CAACV,oBAAoB,CAACU,GAAG,CAAC,IAAI,CAACT,oBAAoB,CAACS,GAAG,CAAC,GAAIN,WAAW,CAACQ,EAAE,CAAC;YAC1KP,YAAY,CAACO,EAAE,GAAG,GAAG,CAAC,GAAGP,YAAY,CAACO,EAAE,CAAC,GAAIV,mBAAmB,CAACU,EAAE,CAAC,IAAIZ,oBAAoB,CAACY,EAAE,CAAC,GAAI,KAAK;YAEzGN,SAAS,CAACM,EAAE,CAAC,GAAGR,WAAW,CAACQ,EAAE,CAAC,IAAIP,YAAY,CAACO,EAAE,GAAG,GAAG,CAAC;UAC7D,CAAC;UACDJ,oBAAoB,CAAC,IAAI,CAAC;UAC1BA,oBAAoB,CAAC,KAAK,CAAC;UAE3BL,cAAc,CAACjjC,CAAC,GAAG88B,mBAAmB,CAACmG,cAAc,EAAEzT,oBAAoB,CAAC;UAC5EA,oBAAoB,GAAGyT,cAAc;UACrCC,WAAW,CAACljC,CAAC,GAAG88B,mBAAmB,CAACoG,WAAW,EAAExU,iBAAiB,CAAC;UACnEA,iBAAiB,GAAGwU,WAAW;UAC/BC,YAAY,CAACnjC,CAAC,GAAG88B,mBAAmB,CAACqG,YAAY,EAAExU,kBAAkB,CAAC;UACtEA,kBAAkB,GAAGwU,YAAY;;UAEjC;UACA,IAAIxe,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAC,EAAE;YAC9D,IAAI09B,YAAY,GAAG,sBAAsB;YACzC,IAAIC,wBAAwB,GAAG,CAAC,CAAC;YACjC,IAAIC,cAAc,GAAG,CAAC,CAAC;YACvB,IAAIC,cAAc,GAAG3H,KAAK;YAC1B,IAAI4H,oBAAoB;YAExB,IAAIlB,WAAW,CAAC9/B,CAAC,IAAI8/B,WAAW,CAAC58B,CAAC,EAAE;cAChC49B,cAAc,CAACh8B,CAAC,GAAGyc,0BAA0B,CAACre,CAAC,IAAI48B,WAAW,CAAC58B,CAAC,GAAGq8B,iBAAiB,CAACz6B,CAAC,GAAG0c,0BAA0B,CAACte,CAAC,GAAGsE,SAAS;cACjIs5B,cAAc,CAACpkB,CAAC,GAAG6E,0BAA0B,CAACvhB,CAAC,IAAI8/B,WAAW,CAAC9/B,CAAC,GAAGu/B,iBAAiB,CAAC7iB,CAAC,GAAG8E,0BAA0B,CAACxhB,CAAC,GAAGwH,SAAS;cACjIu5B,cAAc,GAAGrH,mBAAmB,CAACoH,cAAc,EAAEzV,wBAAwB,CAAC;cAC9EA,wBAAwB,GAAGyV,cAAc;YAC7C;YAEA,IAAIhB,WAAW,CAACljC,CAAC,IAAImjC,YAAY,CAACnjC,CAAC,IAAI2iC,iBAAiB,CAAC3iC,CAAC,IAAI4+B,mBAAmB,IAAIe,gBAAgB,IAAII,iBAAiB,IAAIL,SAAS,IAAIG,UAAU,IAAI7B,mCAAmC,EAAE;cAC1LqC,iBAAiB,CAACtZ,eAAe,GAAGoY,UAAU,CAAC,GAAGkB,iBAAiB,CAACpZ,eAAe,GAAGkY,UAAU,CAAC,GAAGv0B,SAAS;cAC7Gw5B,oBAAoB,GAAG,8BAAUrC,UAAU,EAAE;gBACzC,IAAIC,aAAa,GAAGC,gBAAgB,CAACF,UAAU,CAAC;gBAChD,IAAIwB,qBAAqB,GAAGtB,gBAAgB,CAAC,CAACF,UAAU,CAAC;gBACzD,IAAI2B,EAAE,GAAG1B,aAAa,CAACyB,IAAI;gBAC3B,IAAIY,YAAY,GAAGtC,UAAU,GAAG3a,UAAU,GAAG8X,SAAS;gBACtD,IAAIoF,gBAAgB,GAAGvC,UAAU,GAAGlC,UAAU,GAAGH,SAAS;gBAE1D,IAAI/a,0BAA0B,CAAC+e,EAAE,CAAC,IAAIR,WAAW,CAACQ,EAAE,CAAC,IAAIP,YAAY,CAACO,EAAE,GAAG,GAAG,CAAC,EAAE;kBAC7ErD,iBAAiB,CAACtZ,eAAe,GAAGsd,YAAY,CAAC,GAAGC,gBAAgB,GAAIvG,4BAA4B,GAAGnzB,SAAS,GAAGga,0BAA0B,CAAC8e,EAAE,CAAC,GAAI94B,SAAS;kBAC9Jy1B,iBAAiB,CAACpZ,eAAe,GAAGod,YAAY,CAAC,GAAI,CAACtC,UAAU,GAAG,CAACuC,gBAAgB,GAAG,IAAI,KAAK,CAACvG,4BAA4B,GAAKnZ,0BAA0B,CAAC8e,EAAE,CAAC,GAAGM,YAAY,GAAIp5B,SAAS;gBAChM,CAAC,MACI;kBACDs5B,cAAc,CAACX,qBAAqB,CAACpB,IAAI,CAAC,GACtC9B,iBAAiB,CAACtZ,eAAe,GAAGsd,YAAY,CAAC,GACjDhE,iBAAiB,CAACpZ,eAAe,GAAGod,YAAY,CAAC,GAAGz5B,SAAS;kBACjEu5B,cAAc,GAAG,IAAI;gBACzB;cACJ,CAAC;cAED,IAAInf,uBAAuB,EAAE;gBACzBuf,cAAc,CAACrX,gBAAgB,EAAEjD,2CAA2C,EAAE,CAAC8T,4BAA4B,CAAC;cAChH,CAAC,MACI;gBACDqG,oBAAoB,CAAC,IAAI,CAAC;gBAC1BA,oBAAoB,CAAC,KAAK,CAAC;cAC/B;YACJ;YACA,IAAIrG,4BAA4B,EAAE;cAC9BmG,cAAc,CAACh8B,CAAC,GAAGg8B,cAAc,CAACpkB,CAAC,GAAGlV,SAAS;cAC/Cu5B,cAAc,GAAG,IAAI;YACzB;YACA,IAAIA,cAAc,IAAI,CAACnf,uBAAuB,EAAE;cAC5Cif,wBAAwB,CAACzc,SAAS,CAAC,GAAG2b,YAAY,CAAC78B,CAAC,GAAG49B,cAAc,CAACh8B,CAAC,GAAG0C,SAAS;cACnFq5B,wBAAwB,CAACxc,UAAU,CAAC,GAAG0b,YAAY,CAAC//B,CAAC,GAAG8gC,cAAc,CAACpkB,CAAC,GAAGlV,SAAS;cAEpF,IAAI,CAACwiB,sBAAsB,EAAE;gBACzBA,sBAAsB,GAAG3iB,SAAS,CAACipB,WAAW,CAACtJ,+BAA+B,CAAC,CAAC;gBAChF8C,gBAAgB,CAACta,OAAO,CAACwa,sBAAsB,CAAC;cACpD;cACAA,sBAAsB,CAACtd,GAAG,CAACm0B,wBAAwB,CAAC;YACxD;YACA9W,eAAe,CAACrd,GAAG,CAACuwB,iBAAiB,CAAC;UAC1C;UAEA,IAAImE,kBAAkB,GAAG,CAAC,CAAC;UAC3B,IAAI5D,iBAAiB,GAAG,CAAC,CAAC;UAC1B,IAAI6D,cAAc;UAClB,IAAInI,eAAe,IAAI4G,WAAW,CAACljC,CAAC,IAAImjC,YAAY,CAACnjC,CAAC,IAAI2iC,iBAAiB,CAAC3iC,CAAC,IAAIk+B,uBAAuB,IAAIY,gBAAgB,IAAId,mCAAmC,IAAIY,mBAAmB,IAAIf,iBAAiB,IAAIkC,iBAAiB,EAAE;YAClOyE,kBAAkB,CAACrF,UAAU,CAAC,GAAGv0B,SAAS;YAC1C65B,cAAc,GAAG,wBAAU1C,UAAU,EAAE;cACnC,IAAIC,aAAa,GAAGC,gBAAgB,CAACF,UAAU,CAAC;cAChD,IAAIwB,qBAAqB,GAAGtB,gBAAgB,CAAC,CAACF,UAAU,CAAC;cACzD,IAAI2B,EAAE,GAAG1B,aAAa,CAACyB,IAAI;cAC3B,IAAIiB,EAAE,GAAG1C,aAAa,CAAC2C,IAAI;cAC3B,IAAIN,YAAY,GAAGtC,UAAU,GAAG3a,UAAU,GAAG8X,SAAS;cAEtD,IAAIxK,KAAK,GAAG,SAARA,KAAK,GAAe;gBACpB8P,kBAAkB,CAACH,YAAY,CAAC,GAAGz5B,SAAS;gBAC5C6b,kBAAkB,CAAC8c,qBAAqB,CAACpB,IAAI,CAAC,GAAG,CAAC;cACtD,CAAC;cACD,IAAIe,WAAW,CAACQ,EAAE,CAAC,IAAIP,YAAY,CAACO,EAAE,GAAG,GAAG,CAAC,EAAE;gBAC3Cc,kBAAkB,CAACvmB,WAAW,GAAGymB,EAAE,CAAC,GAAG7c,UAAU;gBACjD,IAAIkW,4BAA4B,IAAI/Y,uBAAuB,EAAE;kBACzD0P,KAAK,EAAE;gBACX,CAAC,MACI;kBACD8P,kBAAkB,CAACH,YAAY,CAAC,GAAG,EAAE1f,0BAA0B,CAAC+e,EAAE,CAAC,GAAG9e,0BAA0B,CAAC8e,EAAE,CAAC,GAAGxe,oBAAoB,CAACwe,EAAE,CAAC,CAAC;kBAChIjd,kBAAkB,CAAC8c,qBAAqB,CAACpB,IAAI,CAAC,GAAGxd,0BAA0B,CAAC+e,EAAE,CAAC,GAAG9e,0BAA0B,CAAC2e,qBAAqB,CAACE,IAAI,CAAC,GAAG,CAAC;gBAChJ;cACJ,CAAC,MAAM;gBACHe,kBAAkB,CAACvmB,WAAW,GAAGymB,EAAE,CAAC,GAAG95B,SAAS;gBAChD8pB,KAAK,EAAE;cACX;YACJ,CAAC;YACD+P,cAAc,CAAC,IAAI,CAAC;YACpBA,cAAc,CAAC,KAAK,CAAC;;YAErB;YACA;YACA;YACA;YACA;YACA,IAAI,CAACzf,uBAAuB,KACpB4B,aAAa,CAAC9G,CAAC,GAAG+G,uBAAuB,CAACzjB,CAAC,IAAIwjB,aAAa,CAAC1e,CAAC,GAAG2e,uBAAuB,CAACvgB,CAAC,CAAC,KAC1F48B,WAAW,CAAC9/B,CAAC,IAAI+/B,YAAY,CAAC//B,CAAC,IAAI,CAACuhB,0BAA0B,CAACvhB,CAAC,IAAM8/B,WAAW,CAAC58B,CAAC,IAAI68B,YAAY,CAAC78B,CAAC,IAAI,CAACqe,0BAA0B,CAACre,CAAE,CAAC,EAAE;cAC/Ik+B,kBAAkB,CAACxd,gBAAgB,GAAGE,OAAO,CAAC,GAAGL,uBAAuB,CAACzjB,CAAC;cAC1EohC,kBAAkB,CAACzd,eAAe,GAAGG,OAAO,CAAC,GAAG,CAACL,uBAAuB,CAACzjB,CAAC;cAE1EohC,kBAAkB,CAACxd,gBAAgB,GAAGmY,UAAU,CAAC,GAAGtY,uBAAuB,CAACvgB,CAAC;cAC7Ek+B,kBAAkB,CAACzd,eAAe,GAAGoY,UAAU,CAAC,GAAG,CAACtY,uBAAuB,CAACvgB,CAAC;YACjF,CAAC,MACI;cACDk+B,kBAAkB,CAACxd,gBAAgB,GAAGE,OAAO,CAAC,GAC1Csd,kBAAkB,CAACzd,eAAe,GAAGG,OAAO,CAAC,GAC7Csd,kBAAkB,CAACxd,gBAAgB,GAAGmY,UAAU,CAAC,GACjDqF,kBAAkB,CAACzd,eAAe,GAAGoY,UAAU,CAAC,GAAGv0B,SAAS;YACpE;YACA45B,kBAAkB,CAACxd,gBAAgB,GAAGkY,SAAS,CAAC,GAC5CsF,kBAAkB,CAACzd,eAAe,GAAGmY,SAAS,CAAC,GAAGt0B,SAAS;;YAE/D;YACA,IAAKs4B,WAAW,CAAC9/B,CAAC,IAAI+/B,YAAY,CAAC//B,CAAC,IAAM8/B,WAAW,CAAC58B,CAAC,IAAI68B,YAAY,CAAC78B,CAAE,IAAIs8B,yBAAyB,EAAE;cACrG;cACA,IAAIjd,WAAW,IAAIid,yBAAyB,EAAE;gBAC1ChC,iBAAiB,CAACM,YAAY,CAAC,GAC3BN,iBAAiB,CAACO,YAAY,CAAC,GAAGjjB,SAAS;cACnD;YACJ,CAAC,MACI;cACD,IAAI,CAACnF,UAAU,IAAKgqB,oBAAoB,CAAC3/B,CAAC,IAAI0/B,oBAAoB,CAAC1/B,CAAC,IAAI2/B,oBAAoB,CAACz8B,CAAC,IAAIw8B,oBAAoB,CAACx8B,CAAE,EAAE;gBACvH;gBACA,IAAIqf,WAAW,EAAE;kBACbib,iBAAiB,CAACM,YAAY,CAAC,GAC3BN,iBAAiB,CAACO,YAAY,CAAC,GAAGv2B,SAAS;gBACnD;gBACA45B,kBAAkB,CAACtD,YAAY,CAAC,GAC5BsD,kBAAkB,CAACrD,YAAY,CAAC,GAAGC,UAAU;cACrD;YACJ;YAEAnU,eAAe,CAACnd,GAAG,CAAC8wB,iBAAiB,CAAC;YACtC1T,gBAAgB,CAACpd,GAAG,CAAC00B,kBAAkB,CAAC;YACxCA,kBAAkB,GAAG,CAAC,CAAC;;YAEvB;YACA,IAAI,CAACtB,WAAW,CAACljC,CAAC,IAAI8+B,gBAAgB,IAAIa,gBAAgB,IAAII,iBAAiB,KAAK,EAAEpb,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAC,CAAC,EAAE;cACjJ,IAAIs+B,YAAY,GAAGtW,qBAAqB,CAACvuB,OAAO,CAACL,CAAC,CAAC;cACnD,IAAImlC,IAAI;cACRD,YAAY,CAACE,eAAe,GAAG,UAAU;cACzCF,YAAY,CAACnvB,OAAO,GAAG,QAAQ;cAC/BovB,IAAI,GAAGvW,qBAAqB,CAACvuB,OAAO,CAACM,EAAE,CAAC;cACxCukC,YAAY,CAACnvB,OAAO,GAAG7K,SAAS,CAAC,CAAC;cAClCg6B,YAAY,CAACE,eAAe,GAAGl6B,SAAS;YAC5C;YACA;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;UACwB;;UAEA;UACA;UACAy1B,iBAAiB,GAAG,CAAC,CAAC;UACtB,IAAIzB,mBAAmB,IAAIe,gBAAgB,IAAII,iBAAiB,EAAE;YAC9D,IAAIxZ,MAAM,IAAImZ,SAAS,EAAE;cACrB,IAAIqF,QAAQ,GAAG5X,eAAe,CAACrd,GAAG,CAAC4X,SAAS,CAAC;cAC7C,IAAIsd,mBAAmB,GAAGv9B,IAAI,CAAC6Z,KAAK,CAAC6L,eAAe,CAACrd,GAAG,CAAC4X,SAAS,EAAE9c,SAAS,CAAC,CAACkF,GAAG,CAACuX,QAAQ,EAAEzc,SAAS,CAAC,CAAC2L,QAAQ,EAAE,CAACD,IAAI,CAAC;cACxH6W,eAAe,CAACrd,GAAG,CAAC4X,SAAS,EAAEqd,QAAQ,CAAC;cACxC,IAAIE,gBAAgB,GAAGx9B,IAAI,CAAC6Z,KAAK,CAAC6L,eAAe,CAAC5W,QAAQ,EAAE,CAACD,IAAI,CAAC;cAElE,IAAI0uB,mBAAmB,KAAKC,gBAAgB,EACxC5E,iBAAiB,CAAChZ,QAAQ,CAAC,GAAG2d,mBAAmB;YACzD,CAAC,MACI;cACD3E,iBAAiB,CAAChZ,QAAQ,CAAC,GAAGzc,SAAS;YAC3C;UACJ;UACAuiB,eAAe,CAACrd,GAAG,CAACuwB,iBAAiB,CAAC;;UAEtC;UACA,IAAI1a,WAAW,IAAI4W,kBAAkB,EAAE;YACnC,IAAI2I,YAAY,GAAGC,eAAe,EAAE;YACpC,IAAID,YAAY,EAAE;cACd,IAAIE,mBAAmB,GAAG7U,kBAAkB,KAAKtxB,SAAS,GAAG,IAAI,GAAGimC,YAAY,CAACG,KAAK,KAAK9U,kBAAkB,CAAC8U,KAAK;cACnH,IAAIC,SAAS,GAAGJ,YAAY,CAACK,UAAU;cACvC,IAAIC,SAAS,GAAGN,YAAY,CAACO,aAAa;cAC1C,IAAIC,SAAS,GAAGR,YAAY,CAACS,UAAU;cACvC,IAAIC,OAAO,GAAGV,YAAY,CAACG,KAAK;cAChC,IAAIQ,OAAO,GAAGX,YAAY,CAACY,QAAQ;cACnC,IAAIC,SAAS,GAAGb,YAAY,CAACc,eAAe;cAC5C,IAAIC,SAAS,GAAGf,YAAY,CAACgB,UAAU;cACvC,IAAIC,oBAAoB,GAAIJ,SAAS,IAAIE,SAAS,IAAI5U,iBAAkB;cACxE,IAAI+U,oBAAoB,GAAG;gBACvBhjC,CAAC,EAAG,CAACq7B,oBAAoB,IAAK+G,SAAS,KAAKK,OAAO,IAAIP,SAAS,KAAKI,SAAU,GAAIlW,oBAAoB,CAACpsB,CAAC,GAAG,CAAC,CAAC;gBAC9GkD,CAAC,EAAE,CAACm4B,oBAAoB,GAAG0H,oBAAoB,IAAIf,mBAAmB,KAAKvC,sBAAsB,GAAI9F,UAAU,CAACz2B,CAAC,KAAKu8B,sBAAsB,CAACv8B,CAAC,GAAI,KAAK,CAAC,GAAG,CAAC6/B,oBAAoB,IAAIf,mBAAmB,KAAKE,SAAS,KAAKM,OAAO,IAAIpW,oBAAoB,CAAClpB,CAAC,GAAG,CAAC;cACnQ,CAAC;cACDy2B,UAAU,CAAC35B,CAAC,GAAGgjC,oBAAoB,CAAChjC,CAAC,GAAG,CAAC,CAAC,GAAImjB,MAAM,IAAI4J,kBAAkB,IAAItL,kBAAkB,CAAC5kB,CAAC,GAAG,CAAC,GAAGmmC,oBAAoB,CAAChjC,CAAC,GAAI25B,UAAU,CAAC35B,CAAC,CAAC,CAAC;cACjJ25B,UAAU,CAACz2B,CAAC,GAAG8/B,oBAAoB,CAAC9/B,CAAC,GAAG,CAAC,CAAC,GAAG8/B,oBAAoB,CAAC9/B,CAAC,GAAGy2B,UAAU,CAACz2B,CAAC;YACtF;YACAiqB,kBAAkB,GAAG2U,YAAY;UACrC;UACA,IAAI3e,MAAM,IAAI1B,kBAAkB,CAAC5kB,CAAC,IAAI0kB,0BAA0B,CAACre,CAAC,IAAI48B,WAAW,CAAC9/B,CAAC,IAAI+sB,kBAAkB,EACrG4M,UAAU,CAAC35B,CAAC,IAAIqjB,kBAAkB,CAACve,CAAC,IAAI,CAAC;UAC7C,IAAIw3B,SAAS,EACT5S,YAAY,CAACjiB,cAAc,CAAC,CAAC,CAAC,CAAC;UACnC,IAAIg1B,UAAU,EACV/S,YAAY,CAAChiB,aAAa,CAAC,CAAC,CAAC,CAAC;UAClCoiB,gBAAgB,CAACriB,cAAc,CAAC,CAACkyB,UAAU,CAAC35B,CAAC,CAAC,CAAC0H,aAAa,CAAC,CAACiyB,UAAU,CAACz2B,CAAC,CAAC;;UAE3E;UACA,IAAI+/B,2BAA2B,GAAGnJ,oBAAoB,KAAK,GAAG;UAC9D,IAAIoJ,0BAA0B,GAAGpJ,oBAAoB,KAAK,GAAG;UAC7D,IAAIqJ,wBAAwB,GAAGrJ,oBAAoB,KAAK,GAAG;UAC3D,IAAIsJ,2BAA2B,GAAG,SAA9BA,2BAA2B,CAAaC,KAAK,EAAEC,KAAK,EAAE;YACtDA,KAAK,GAAGA,KAAK,KAAKznC,SAAS,GAAGwnC,KAAK,GAAGC,KAAK;YAC3CC,0BAA0B,CAAC,IAAI,EAAEF,KAAK,EAAErD,SAAS,CAAChgC,CAAC,CAAC;YACpDujC,0BAA0B,CAAC,KAAK,EAAED,KAAK,EAAEtD,SAAS,CAAC98B,CAAC,CAAC;UACzD,CAAC;;UAED;UACAi+B,cAAc,CAACzX,YAAY,EAAEpD,sBAAsB,EAAEyZ,YAAY,CAAC//B,CAAC,IAAI+/B,YAAY,CAAC78B,CAAC,CAAC;UACtFi+B,cAAc,CAACzX,YAAY,EAAEnD,uBAAuB,EAAEwZ,YAAY,CAAC//B,CAAC,CAAC;UACrEmhC,cAAc,CAACzX,YAAY,EAAElD,uBAAuB,EAAEuZ,YAAY,CAAC78B,CAAC,CAAC;;UAErE;UACA,IAAIs4B,mBAAmB,IAAI,CAAChZ,OAAO,EAAE;YACjC2e,cAAc,CAACzX,YAAY,EAAEvD,iBAAiB,EAAEhD,MAAM,CAAC;UAC3D;;UAEA;UACA,IAAIX,OAAO,EACP9Q,QAAQ,CAACgY,YAAY,EAAEtD,4BAA4B,CAAC;UACxD,IAAImU,aAAa,EAAE;YACf4G,cAAc,CAACzX,YAAY,EAAEtD,4BAA4B,EAAEuI,WAAW,CAAC;YACvEwS,cAAc,CAAChX,uBAAuB,EAAEpC,+BAA+B,EAAE,CAAC4G,WAAW,CAAC;YACtFwS,cAAc,CAAChX,uBAAuB,EAAEnC,gCAAgC,EAAE4G,WAAW,CAAC;YACtFuS,cAAc,CAAChX,uBAAuB,EAAElC,gCAAgC,EAAE4G,iBAAiB,CAAC;YAC5FsS,cAAc,CAAChX,uBAAuB,EAAEjC,gCAAgC,EAAE4G,eAAe,CAAC;UAC9F;;UAEA;UACA,IAAIiL,2BAA2B,IAAIe,uBAAuB,IAAIiF,YAAY,CAACnjC,CAAC,IAAIkjC,WAAW,CAACljC,CAAC,IAAIg+B,mCAAmC,EAAE;YAClI,IAAID,4BAA4B,EAAE;cAC9B,IAAIC,mCAAmC,EAAE;gBACrCzoB,WAAW,CAACuX,YAAY,EAAErD,uBAAuB,CAAC;gBAClD,IAAIsU,4BAA4B,EAAE;kBAC9ByI,2BAA2B,CAAC,KAAK,CAAC;gBACtC;cACJ;YACJ,CAAC,MACI,IAAID,wBAAwB,EAAE;cAC/BC,2BAA2B,CAACpD,SAAS,CAAChgC,CAAC,EAAEggC,SAAS,CAAC98B,CAAC,CAAC;YACzD,CAAC,MACI,IAAI+/B,2BAA2B,EAAE;cAClCG,2BAA2B,CAAC,IAAI,CAAC;YACrC,CAAC,MACI,IAAIF,0BAA0B,EAAE;cACjCE,2BAA2B,CAAC,KAAK,CAAC;YACtC;UACJ;;UAEA;UACA,IAAInJ,yBAAyB,IAAIW,mCAAmC,EAAE;YAClEtF,yBAAyB,CAAC,CAAC9G,wBAAwB,IAAI,CAACD,uBAAuB,CAAC;YAChFsG,yBAAyB,CAACxG,wBAAwB,EAAE,CAACA,wBAAwB,CAAC;UAClF;;UAEA;UACA,IAAI6K,eAAe,IAAI2G,cAAc,CAACjjC,CAAC,IAAI+/B,iBAAiB,IAAIJ,gBAAgB,IAAIhC,aAAa,IAAImB,gBAAgB,IAAIlB,sBAAsB,IAAII,mCAAmC,IAAIY,mBAAmB,EAAE;YAC3MgI,4BAA4B,CAAC,IAAI,CAAC;YAClCC,4BAA4B,CAAC,IAAI,CAAC;YAClCD,4BAA4B,CAAC,KAAK,CAAC;YACnCC,4BAA4B,CAAC,KAAK,CAAC;UACvC;;UAEA;UACA,IAAItJ,+BAA+B,EAC/BuJ,4BAA4B,CAAC,IAAI,EAAExJ,wBAAwB,CAAC;UAChE,IAAIG,8BAA8B,EAC9BqJ,4BAA4B,CAAC,KAAK,EAAEtJ,uBAAuB,CAAC;;UAEhE;UACAuJ,gBAAgB,CAAC,oBAAoB,EAAE;YACnCC,KAAK,EAAEzgB,MAAM;YACbsN,GAAG,EAAE8K;UACT,CAAC,EAAEC,mBAAmB,CAAC;UACvBmI,gBAAgB,CAAC,mBAAmB,EAAE;YAClClL,KAAK,EAAEtN,cAAc,CAACrmB,CAAC;YACvB6zB,MAAM,EAAExN,cAAc,CAACzO;UAC3B,CAAC,EAAEwc,eAAe,CAAC;UACnByK,gBAAgB,CAAC,sBAAsB,EAAE;YACrClL,KAAK,EAAErN,uBAAuB,CAACtmB,CAAC;YAChC6zB,MAAM,EAAEvN,uBAAuB,CAAC1O;UACpC,CAAC,EAAEyc,kBAAkB,CAAC;UACtBwK,gBAAgB,CAAC,mBAAmB,EAAE;YAClC3jC,CAAC,EAAE8/B,WAAW,CAAC9/B,CAAC;YAChBkD,CAAC,EAAE48B,WAAW,CAAC58B,CAAC;YAChB2gC,WAAW,EAAE9D,YAAY,CAAC1B,EAAE;YAC5ByF,WAAW,EAAE/D,YAAY,CAAC5B,EAAE;YAC5B4F,OAAO,EAAEhE,YAAY,CAAC//B,CAAC,IAAI+/B,YAAY,CAAC78B;UAC5C,CAAC,EAAE48B,WAAW,CAACljC,CAAC,IAAImjC,YAAY,CAACnjC,CAAC,CAAC;UACnC+mC,gBAAgB,CAAC,yBAAyB,EAAE;YACxC3jC,CAAC,EAAE6/B,cAAc,CAAC7/B,CAAC;YACnBkD,CAAC,EAAE28B,cAAc,CAAC38B;UACtB,CAAC,EAAE28B,cAAc,CAACjjC,CAAC,CAAC;QACxB;;QAEA;QACA,IAAI4lB,OAAO,IAAI+K,iBAAiB,KAAKjC,iBAAiB,CAAC1uB,CAAC,IAAI2wB,iBAAiB,CAAC3wB,CAAC,CAAC,EAAE;UAC9E;UACA,IAAI,CAAC2wB,iBAAiB,CAACnxB,CAAC,EACpBo5B,kBAAkB,EAAE;UACxB,IAAIjU,0BAA0B,CAACre,CAAC,IAAIooB,iBAAiB,CAACtrB,CAAC,EACnD+pB,eAAe,CAACrd,GAAG,CAACwX,YAAY,GAAGE,SAAS,EAAEmJ,iBAAiB,CAACzoB,CAAC,GAAG0c,0BAA0B,CAACte,CAAC,CAAC;UACrG,IAAIqe,0BAA0B,CAACvhB,CAAC,IAAIsrB,iBAAiB,CAACpoB,CAAC,EACnD6mB,eAAe,CAACrd,GAAG,CAACwX,YAAY,GAAGG,UAAU,EAAEkJ,iBAAiB,CAAC7Q,CAAC,GAAG8E,0BAA0B,CAACxhB,CAAC,CAAC;UACtGutB,iBAAiB,CAAC3wB,CAAC,GAAG,KAAK;QAC/B;QAEA,IAAIylB,YAAY,IAAIgX,cAAc,CAACrjB,YAAY,EAAE;UAC7CguB,oBAAoB,EAAE;QAC1B;;QAEA;QACA;;QAEAL,gBAAgB,CAAC,WAAW,EAAE;UAAEM,MAAM,EAAE7K;QAAM,CAAC,CAAC;MACpD;;MAEA;AAChB;AACA;MACgB,SAAS4K,oBAAoB,GAAG;QAC5B,IAAI,CAACzhB,WAAW,EAAE;UACd4S,gBAAgB,CAAC,UAAUt4B,CAAC,EAAEu4B,oBAAoB,EAAE;YAChDrL,eAAe,CAACtW,IAAI,CAAC2hB,oBAAoB,CAAC,CAACvrB,IAAI,CAAC,UAAUhN,CAAC,EAAE+N,EAAE,EAAE;cAC7D;cACA,IAAI9K,aAAa,CAAC4D,GAAG,CAACkH,EAAE,EAAEwe,iBAAiB,CAAC,GAAG,CAAC,EAAE;gBAC9CA,iBAAiB,CAAC3c,IAAI,CAAC7B,EAAE,CAAC;gBAC1BvD,SAAS,CAACuD,EAAE,CAAC,CACRiE,GAAG,CAACsa,sBAAsB,EAAE8L,oBAAoB,CAAC,CACjD3mB,EAAE,CAAC6a,sBAAsB,EAAE8L,oBAAoB,CAAC;cACzD;YACJ,CAAC,CAAC;UACN,CAAC,CAAC;QACN;MACJ;;MAEA;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASiP,UAAU,CAACC,UAAU,EAAE;QAC5B,IAAIC,aAAa,GAAG5vB,eAAe,CAAC4D,SAAS,CAAC+rB,UAAU,EAAE3vB,eAAe,CAAC2D,SAAS,EAAE,IAAI,EAAEwQ,eAAe,CAAC;QAE3GA,eAAe,GAAG8Q,UAAU,CAAC,CAAC,CAAC,EAAE9Q,eAAe,EAAEyb,aAAa,CAAC9pB,QAAQ,CAAC;QACzEsO,uBAAuB,GAAG6Q,UAAU,CAAC,CAAC,CAAC,EAAE7Q,uBAAuB,EAAEwb,aAAa,CAAC7pB,SAAS,CAAC;QAE1F,OAAO6pB,aAAa,CAAC7pB,SAAS;MAClC;;MAGA;;MAEA;AAChB;AACA;AACA;MACgB;AAChB;AACA;AACA;MACgB,SAAS8pB,iBAAiB,CAAC9O,OAAO,EAAE;QAChC,IAAI+O,SAAS,GAAG,QAAQ;QACxB,IAAIC,2BAA2B,GAAG,yBAAyB;QAC3D,IAAIC,4BAA4B,GAAG/d,yBAAyB,GAAGlf,SAAS,GAAG+f,qBAAqB;QAChG,IAAImd,aAAa,GAAGliB,WAAW,GAAGhb,SAAS,GAAG+f,qBAAqB,GAAG9f,SAAS;QAC/E,IAAIk9B,UAAU,GAAG9b,uBAAuB,CAAC/R,QAAQ,CAACG,cAAc;QAChE,IAAI2tB,aAAa,GAAG,CAAC,CAAC;QACtB,IAAIC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAe;UAChC,IAAIC,oBAAoB,GAAGtP,OAAO,GAAG9L,cAAc,GAAGC,YAAY;UAClE7f,IAAI,CAAC86B,aAAa,EAAE,UAAUn7B,GAAG,EAAES,KAAK,EAAE;YACtC,IAAIhG,IAAI,CAACgG,KAAK,CAAC,IAAI/N,KAAK,CAACI,CAAC,EAAE;cACxB,IAAIkN,GAAG,IAAI7M,OAAO,CAACC,CAAC,EAChBioC,oBAAoB,CAACnzB,QAAQ,CAACzH,KAAK,CAAC,CAAC,KAErC46B,oBAAoB,CAACtyB,IAAI,CAAC/I,GAAG,EAAES,KAAK,CAAC;YAC7C;UACJ,CAAC,CAAC;QACN,CAAC;QACD,IAAI66B,qBAAqB,GAAG,CACxBjf,qBAAqB,EACrBC,4BAA4B,EAC5BC,6BAA6B,EAC7BK,4BAA4B,EAC5BD,iBAAiB,EACjBH,uCAAuC,EACvCC,qCAAqC,EACrCC,wBAAwB,EACxBG,uBAAuB,EACvBC,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvB8B,mBAAmB,EACnB7B,yBAAyB,EACzBa,qBAAqB,EACrB0F,eAAe,CAAC,CAAC5iB,IAAI,CAAC7C,SAAS,CAAC;QACpC,IAAIw9B,cAAc,GAAG,CAAC,CAAC;;QAEvB;QACArb,YAAY,GAAGA,YAAY,KAAKnH,WAAW,GAAIG,UAAU,GAAG+G,cAAc,CAAC6a,SAAS,CAAC,EAAE,CAACA,SAAS,CAAC,EAAE,CAACA,SAAS,CAAC,EAAE,CAACA,SAAS,CAAC,EAAE,GAAGj9B,SAAS,CAACipB,WAAW,CAACvK,6BAA6B,CAAC,CAAC,GAAI0D,cAAc,CAAC;QACzMM,eAAe,GAAGA,eAAe,IAAIib,0BAA0B,CAACje,wBAAwB,GAAG0d,aAAa,CAAC;QACzG3a,gBAAgB,GAAGA,gBAAgB,IAAIkb,0BAA0B,CAACpe,yBAAyB,GAAG6d,aAAa,CAAC;QAC5G5a,eAAe,GAAGA,eAAe,IAAImb,0BAA0B,CAACre,wBAAwB,GAAG8d,aAAa,CAAC;QACzG7a,oBAAoB,GAAGA,oBAAoB,IAAIob,0BAA0B,CAACT,2BAA2B,CAAC;QACtGra,qBAAqB,GAAGA,qBAAqB,KAAK3H,WAAW,GAAGyiB,0BAA0B,CAACte,8BAA8B,CAAC,GAAG7qB,SAAS,CAAC;;QAEvI;QACA,IAAI6mB,UAAU,EACVhR,QAAQ,CAACgY,YAAY,EAAE5D,4BAA4B,CAAC;;QAExD;QACA;QACA,IAAIyP,OAAO,EACPpjB,WAAW,CAACuX,YAAY,EAAEob,qBAAqB,CAAC;;QAEpD;QACAJ,UAAU,GAAGzgC,IAAI,CAACygC,UAAU,CAAC,IAAIxoC,KAAK,CAACI,CAAC,GAAGooC,UAAU,CAACplC,KAAK,CAACiI,SAAS,CAAC,GAAGm9B,UAAU;QACnF,IAAI5kC,aAAa,CAACgE,GAAG,CAAC4gC,UAAU,CAAC,IAAIniB,WAAW,EAAE;UAC9C1Y,IAAI,CAAC66B,UAAU,EAAE,UAAU7nC,CAAC,EAAE+B,CAAC,EAAE;YAC7B,IAAIqF,IAAI,CAACrF,CAAC,CAAC,IAAI1C,KAAK,CAACI,CAAC,EAAE;cACpBqoC,aAAa,CAAC/lC,CAAC,CAAC,GAAG22B,OAAO,GAAG7L,YAAY,CAACnX,IAAI,CAAC3T,CAAC,CAAC,GAAG6qB,cAAc,CAAClX,IAAI,CAAC3T,CAAC,CAAC;YAC9E;UACJ,CAAC,CAAC;QACN;QAEA,IAAI,CAAC22B,OAAO,EAAE;UACV,IAAIhT,WAAW,EAAE;YACb,IAAI,CAACqG,uBAAuB,CAAClT,eAAe,EAAE;cAC1CqvB,cAAc,CAAC3gB,SAAS,CAAC,GAAGqF,cAAc,CAAC/c,GAAG,CAAC0X,SAAS,CAAC;cACzD2gB,cAAc,CAAC1gB,UAAU,CAAC,GAAGoF,cAAc,CAAC/c,GAAG,CAAC2X,UAAU,CAAC;YAC/D;YAEA,IAAI,CAAC3B,UAAU,EACX+G,cAAc,CAAC/X,QAAQ,CAAC4V,qBAAqB,CAAC,CAACzW,IAAI,CAAC6Y,YAAY,CAAC;;YAErE;YACAA,YAAY,GAAGD,cAAc,CAAC6a,SAAS,CAAC,EAAE,CAAC53B,GAAG,CAACq4B,cAAc,CAAC;UAClE;UAEA,IAAI,CAACriB,UAAU,EAAE;YACb;YACAhR,QAAQ,CAAC+X,cAAc,EAAElH,WAAW,GAAGiiB,4BAA4B,GAAG3e,qBAAqB,CAAC;;YAE5F;YACA6D,YAAY,CAAC/Y,SAAS,CAACoZ,eAAe,CAAC,CAClCpZ,SAAS,CAACmZ,gBAAgB,CAAC,CAC3BnZ,SAAS,CAACkZ,eAAe,CAAC,CAC1Bra,OAAO,CAACoa,oBAAoB,CAAC;;YAElC;YACAG,eAAe,GAAG6H,SAAS,CAAClI,YAAY,EAAE7E,OAAO,GAAGkC,wBAAwB,CAAC;YAC7E+C,gBAAgB,GAAG8H,SAAS,CAAClI,YAAY,EAAE7E,OAAO,GAAG+B,yBAAyB,CAAC;YAC/EiD,eAAe,GAAG+H,SAAS,CAAClI,YAAY,EAAE7E,OAAO,GAAG8B,wBAAwB,CAAC;YAE7E,IAAIpE,WAAW,EAAE;cACbwH,eAAe,CAACva,OAAO,CAAC0a,qBAAqB,CAAC;cAC9C0a,iBAAiB,EAAE;YACvB;UACJ;UAEA,IAAIhjB,uBAAuB,EACvBlQ,QAAQ,CAACoY,gBAAgB,EAAEjD,2CAA2C,CAAC;UAC3E,IAAItF,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAC,EAC5DwO,QAAQ,CAACoY,gBAAgB,EAAEhD,0CAA0C,CAAC;UAC1E,IAAItE,OAAO,EACP9Q,QAAQ,CAAC6X,YAAY,EAAE3D,qBAAqB,CAAC;UAEjDmF,0BAA0B,GAAGnB,oBAAoB,CAAC,CAAC,CAAC;UACpDiB,kBAAkB,GAAGnB,YAAY,CAAC,CAAC,CAAC;UACpCsB,qBAAqB,GAAGnB,eAAe,CAAC,CAAC,CAAC;UAC1CoB,sBAAsB,GAAGnB,gBAAgB,CAAC,CAAC,CAAC;UAC5CoB,qBAAqB,GAAGnB,eAAe,CAAC,CAAC,CAAC;UAE1C6J,6BAA6B,EAAE;QACnC,CAAC,MACI;UACD,IAAIlR,UAAU,IAAIL,YAAY,EAAE;YAC5B;YACAuH,oBAAoB,CAACxb,QAAQ,EAAE,CAACuB,MAAM,EAAE;;YAExC;YACA9F,IAAI,CAAC,CAACggB,eAAe,EAAEC,gBAAgB,EAAEC,eAAe,EAAEG,qBAAqB,CAAC,EAAE,UAAUrtB,CAAC,EAAEq4B,GAAG,EAAE;cAChG,IAAIA,GAAG,EAAE;gBACL/iB,WAAW,CAAC+iB,GAAG,CAACviB,UAAU,CAAChW,OAAO,CAACL,CAAC,CAAC,EAAEisB,yBAAyB,CAAC;cACrE;YACJ,CAAC,CAAC;;YAEF;YACA7W,QAAQ,CAACgY,YAAY,EAAEnH,WAAW,GAAGwD,6BAA6B,GAAGF,qBAAqB,CAAC;UAC/F,CAAC,MACI;YACD;YACAlW,MAAM,CAACia,oBAAoB,CAAC;;YAE5B;YACAG,eAAe,CAACnZ,QAAQ,EAAE,CACrBf,MAAM,EAAE,CACRA,MAAM,EAAE,CACRA,MAAM,EAAE;YAEb,IAAI0S,WAAW,EAAE;cACbkH,cAAc,CAAC5Z,MAAM,EAAE;cACvBF,MAAM,CAAC+Z,YAAY,CAAC;cACpB/Z,MAAM,CAACua,qBAAqB,CAAC;cAC7B0a,iBAAiB,EAAE;YACvB;UACJ;UAEA,IAAIriB,WAAW,EACXkH,cAAc,CAAC9W,UAAU,CAAChW,OAAO,CAACL,CAAC,CAAC;UAExC,IAAIkmB,OAAO,EACPrQ,WAAW,CAACoX,YAAY,EAAE3D,qBAAqB,CAAC;QACxD;MACJ;;MAEA;AAChB;AACA;AACA;MACgB,SAASqf,oBAAoB,GAAG;QAC5B,IAAIC,iCAAiC,GAAG,CACpC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;QAAK;QAC1D,EAAE,EAAE,EAAE;QAAoD;QAC1D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAA4C;QAC1D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAmC;QAAA,CAC7D;;QACD,IAAIC,2BAA2B,GAAG,EAAE;QACpC,IAAIC,wBAAwB;QAC5B,IAAIC,mBAAmB;QACvB,IAAIC,eAAe,GAAG,GAAG;QACzB,IAAIC,QAAQ,GAAG,OAAO;QAEtB,SAASC,cAAc,CAACC,eAAe,EAAE;UACrC3R,cAAc,EAAE;UAChBlZ,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;UACtB,IAAIkhB,eAAe,IAAI/jB,sBAAsB,EACzCgkB,aAAa,CAACN,wBAAwB,CAAC;QAC/C;QACA,SAASO,gBAAgB,CAAC7jC,KAAK,EAAE;UAC7B2nB,cAAc,CAAChiB,cAAc,CAAC,CAACga,kBAAkB,CAAC5kB,CAAC,IAAIkwB,kBAAkB,GAAG,OAAO,GAAG,CAAC,CAAC;UACxFtD,cAAc,CAAC/hB,aAAa,CAAC,CAAC,CAAC,CAAC;UAChC5H,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;UACzBhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;UACzB,OAAO,KAAK;QAChB;QACA,SAAS8jC,cAAc,CAAC9jC,KAAK,EAAE;UAC3BR,UAAU,CAAC,YAAY;YACnB,IAAI,CAACghB,UAAU,EACXkjB,cAAc,EAAE;UACxB,CAAC,EAAE,EAAE,CAAC;QACV;QACA,SAASK,eAAe,GAAG;UACvB5X,iBAAiB,GAAG,IAAI;UACxBvc,QAAQ,CAACgY,YAAY,EAAE6b,QAAQ,CAAC;QACpC;QACA,SAASO,kBAAkB,GAAG;UAC1B7X,iBAAiB,GAAG,KAAK;UACzBkX,2BAA2B,GAAG,EAAE;UAChChzB,WAAW,CAACuX,YAAY,EAAE6b,QAAQ,CAAC;UACnCC,cAAc,CAAC,IAAI,CAAC;QACxB;QACA,SAASO,iBAAiB,CAACjkC,KAAK,EAAE;UAC9B,IAAIkkC,OAAO,GAAGlkC,KAAK,CAACkkC,OAAO;UAE3B,IAAI58B,OAAO,CAAC48B,OAAO,EAAEd,iCAAiC,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI,CAACC,2BAA2B,CAACxoC,OAAO,CAACG,CAAC,CAAC,EAAE;cACzC0oC,cAAc,EAAE;cAChBJ,wBAAwB,GAAGa,WAAW,CAACT,cAAc,EAAE,IAAI,GAAG,EAAE,CAAC;YACrE;YACA,IAAIp8B,OAAO,CAAC48B,OAAO,EAAEb,2BAA2B,CAAC,GAAG,CAAC,EACjDA,2BAA2B,CAAC14B,IAAI,CAACu5B,OAAO,CAAC;UACjD;QACJ;QACA,SAASE,eAAe,CAACpkC,KAAK,EAAE;UAC5B,IAAIkkC,OAAO,GAAGlkC,KAAK,CAACkkC,OAAO;UAC3B,IAAIz6B,KAAK,GAAGnC,OAAO,CAAC48B,OAAO,EAAEb,2BAA2B,CAAC;UAEzD,IAAI/7B,OAAO,CAAC48B,OAAO,EAAEd,iCAAiC,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI35B,KAAK,GAAG,CAAC,CAAC,EACV45B,2BAA2B,CAACz5B,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;YAChD,IAAI,CAAC45B,2BAA2B,CAACxoC,OAAO,CAACG,CAAC,CAAC,EACvC0oC,cAAc,CAAC,IAAI,CAAC;UAC5B;QACJ;QACA,SAASW,sBAAsB,CAACrkC,KAAK,EAAE;UACnC,IAAIwqB,gBAAgB,KAAK,IAAI,EACzB;UACJxqB,KAAK,GAAGA,KAAK,CAACQ,aAAa,IAAIR,KAAK;UACpC,IAAIu1B,0BAA0B,CAACv1B,KAAK,CAACw1B,YAAY,CAAC,EAC9C1c,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;QAC9B;QACA,SAAS6hB,gBAAgB,CAACtkC,KAAK,EAAE;UAC7B,IAAI,CAACshB,SAAS,EAAE;YACZ,IAAIiiB,mBAAmB,KAAKxpC,SAAS,EACjC4F,YAAY,CAAC4jC,mBAAmB,CAAC,CAAC,KACjC;cACD,IAAI/W,yBAAyB,IAAIC,uBAAuB,EACpDsG,yBAAyB,CAAC,IAAI,CAAC;cAEnC,IAAI,CAACwR,gCAAgC,EAAE,EACnC30B,QAAQ,CAACgY,YAAY,EAAErD,uBAAuB,CAAC;cAEnDsd,gBAAgB,CAAC,eAAe,EAAE7hC,KAAK,CAAC;YAC5C;;YAEA;YACA;YACA;YACA,IAAI,CAAC4sB,iCAAiC,EAAE;cACpC+U,4BAA4B,CAAC,IAAI,CAAC;cAClCA,4BAA4B,CAAC,KAAK,CAAC;YACvC;YACAE,gBAAgB,CAAC,UAAU,EAAE7hC,KAAK,CAAC;YAEnCujC,mBAAmB,GAAG/jC,UAAU,CAAC,YAAY;cACzC,IAAI,CAACghB,UAAU,EAAE;gBACb;gBACA7gB,YAAY,CAAC4jC,mBAAmB,CAAC;gBACjCA,mBAAmB,GAAGxpC,SAAS;gBAE/B,IAAIyyB,yBAAyB,IAAIC,uBAAuB,EACpDsG,yBAAyB,CAAC,KAAK,CAAC;gBAEpC,IAAI,CAACwR,gCAAgC,EAAE,EACnCl0B,WAAW,CAACuX,YAAY,EAAErD,uBAAuB,CAAC;gBAEtDsd,gBAAgB,CAAC,cAAc,EAAE7hC,KAAK,CAAC;cAC3C;YACJ,CAAC,EAAEwjC,eAAe,CAAC;UACvB;QACJ;QAGA,IAAI/iB,WAAW,EAAE;UACb,IAAIZ,YAAY,GAAG,CAAC,IAAI,CAACD,sBAAsB,EAAE;YAC7CoO,uBAAuB,CAACrG,cAAc,EAAE,OAAO,EAAE+b,cAAc,CAAC;UACpE,CAAC,MACI;YACD1V,uBAAuB,CAACrG,cAAc,EAClC,CAACnE,gBAAgB,EAAEC,cAAc,CAAC,EAClC,CAACwgB,iBAAiB,EAAEG,eAAe,CAAC,CAAC;UAC7C;UAEApW,uBAAuB,CAACrG,cAAc,EAClC,CAAChF,UAAU,EAAE,MAAM,EAAE8gB,QAAQ,EAAEA,QAAQ,GAAG,KAAK,CAAC,EAChD,CAACI,gBAAgB,EAAEC,cAAc,EAAEC,eAAe,EAAEC,kBAAkB,CAAC,CAAC;QAChF,CAAC,MACI;UACDhW,uBAAuB,CAAC/F,eAAe,EAAEtE,sBAAsB,EAAE0gB,sBAAsB,CAAC;QAC5F;QACArW,uBAAuB,CAAChG,gBAAgB,EAAErF,UAAU,EAAE2hB,gBAAgB,EAAE,IAAI,CAAC;MACjF;;MAGA;;MAEA;AAChB;AACA;AACA;MACgB,SAASE,kBAAkB,CAAC/Q,OAAO,EAAE;QACjC,IAAIgR,4BAA4B,GAAG,SAA/BA,4BAA4B,CAAaC,YAAY,EAAE;UACvD,IAAIC,kBAAkB,GAAGD,YAAY,GAAGre,6BAA6B,GAAGC,2BAA2B;UACnG,IAAIse,SAAS,GAAG1B,0BAA0B,CAACzd,mBAAmB,GAAGhgB,SAAS,GAAGk/B,kBAAkB,EAAE,IAAI,CAAC;UACtG,IAAIE,KAAK,GAAG3B,0BAA0B,CAACxd,wBAAwB,EAAEkf,SAAS,CAAC;UAC3E,IAAIE,MAAM,GAAG5B,0BAA0B,CAACtd,yBAAyB,EAAEgf,SAAS,CAAC;UAE7E,IAAI,CAAChkB,UAAU,IAAI,CAAC6S,OAAO,EAAE;YACzBmR,SAAS,CAACn3B,MAAM,CAACo3B,KAAK,CAAC;YACvBA,KAAK,CAACp3B,MAAM,CAACq3B,MAAM,CAAC;UACxB;UAEA,OAAO;YACHC,UAAU,EAAEH,SAAS;YACrBI,MAAM,EAAEH,KAAK;YACbI,OAAO,EAAEH;UACb,CAAC;QACL,CAAC;QACD,SAASI,iBAAiB,CAACR,YAAY,EAAE;UACrC,IAAI5H,aAAa,GAAGC,gBAAgB,CAAC2H,YAAY,CAAC;UAClD,IAAIE,SAAS,GAAG9H,aAAa,CAACiI,UAAU;UACxC,IAAIF,KAAK,GAAG/H,aAAa,CAACkI,MAAM;UAChC,IAAIF,MAAM,GAAGhI,aAAa,CAACmI,OAAO;UAElC,IAAIrkB,UAAU,IAAIL,YAAY,EAAE;YAC5BxY,IAAI,CAAC,CAAC68B,SAAS,EAAEC,KAAK,EAAEC,MAAM,CAAC,EAAE,UAAU/pC,CAAC,EAAEq4B,GAAG,EAAE;cAC/C/iB,WAAW,CAAC+iB,GAAG,CAACviB,UAAU,CAAChW,OAAO,CAACL,CAAC,CAAC,EAAEisB,yBAAyB,CAAC;YACrE,CAAC,CAAC;UACN,CAAC,MACI;YACD5Y,MAAM,CAAC+2B,SAAS,IAAIH,4BAA4B,CAACC,YAAY,CAAC,CAACK,UAAU,CAAC;UAC9E;QACJ;QACA,IAAII,kBAAkB;QACtB,IAAIC,gBAAgB;QAEpB,IAAI,CAAC3R,OAAO,EAAE;UACV0R,kBAAkB,GAAGV,4BAA4B,CAAC,IAAI,CAAC;UACvDW,gBAAgB,GAAGX,4BAA4B,EAAE;UAEjDnc,2BAA2B,GAAG6c,kBAAkB,CAACJ,UAAU;UAC3Dxc,gCAAgC,GAAG4c,kBAAkB,CAACH,MAAM;UAC5Dxc,iCAAiC,GAAG2c,kBAAkB,CAACF,OAAO;UAC9Dxc,yBAAyB,GAAG2c,gBAAgB,CAACL,UAAU;UACvDrc,8BAA8B,GAAG0c,gBAAgB,CAACJ,MAAM;UACxDrc,+BAA+B,GAAGyc,gBAAgB,CAACH,OAAO;UAE1D,IAAI,CAACrkB,UAAU,EAAE;YACbmH,eAAe,CAACna,KAAK,CAAC6a,yBAAyB,CAAC;YAChDV,eAAe,CAACna,KAAK,CAAC0a,2BAA2B,CAAC;UACtD;QACJ,CAAC,MACI;UACD4c,iBAAiB,CAAC,IAAI,CAAC;UACvBA,iBAAiB,EAAE;QACvB;MACJ;;MAEA;AAChB;AACA;AACA;MACgB,SAASG,oBAAoB,CAACX,YAAY,EAAE;QACxC,IAAI5H,aAAa,GAAGC,gBAAgB,CAAC2H,YAAY,CAAC;QAClD,IAAIY,iBAAiB,GAAGxI,aAAa,CAACyI,KAAK;QAC3C,IAAIC,YAAY,GAAG5c,oBAAoB,CAACzX,GAAG,KAAKyX,oBAAoB;QACpE,IAAI4V,EAAE,GAAG1B,aAAa,CAACyB,IAAI;QAC3B,IAAIiB,EAAE,GAAG1C,aAAa,CAAC2C,IAAI;QAC3B,IAAIgG,MAAM,GAAG9iB,UAAU,GAAGma,aAAa,CAAC6B,SAAS;QACjD,IAAI+G,SAAS,GAAG,QAAQ;QACxB,IAAIC,aAAa,GAAG,YAAY;QAChC,IAAIC,aAAa,GAAG,OAAO;QAC3B,IAAIC,oBAAoB,GAAG,CAAC;QAC5B,IAAIC,oCAAoC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QACrD,IAAIC,YAAY;QAChB,IAAIC,eAAe;QACnB,IAAIC,eAAe;QACnB,IAAIC,sBAAsB;QAE1B,SAASC,kBAAkB,CAACnmC,KAAK,EAAE;UAC/B,OAAO6f,YAAY,IAAI2lB,YAAY,GAAGxlC,KAAK,CAAC,QAAQ,GAAGw/B,EAAE,CAAC,GAAGxhC,aAAa,CAACuC,IAAI,CAACP,KAAK,CAAC,CAACw+B,EAAE,CAAC,CAAC,CAAC;QAChG;;QACA,SAAS4H,2BAA2B,CAAC5pC,IAAI,EAAE;UACvC,OAAOsqB,uBAAuB,CAACvS,UAAU,CAAC/X,IAAI,CAAC;QACnD;QACA,SAAS6pC,yBAAyB,GAAG;UACjCR,oBAAoB,GAAG,GAAG;QAC9B;QACA,SAASS,yBAAyB,GAAG;UACjCT,oBAAoB,GAAG,CAAC;QAC5B;QACA,SAASU,yBAAyB,CAACvmC,KAAK,EAAE;UACtChC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;QAC7B;QACA,SAASwmC,eAAe,CAACxmC,KAAK,EAAE;UAC5B,IAAIsH,OAAO,CAACtH,KAAK,CAACkkC,OAAO,EAAE4B,oCAAoC,CAAC,GAAG,CAAC,CAAC,EACjEO,yBAAyB,EAAE;QACnC;QACA,SAASI,aAAa,CAACzmC,KAAK,EAAE;UAC1B,IAAIsH,OAAO,CAACtH,KAAK,CAACkkC,OAAO,EAAE4B,oCAAoC,CAAC,GAAG,CAAC,CAAC,EACjEQ,yBAAyB,EAAE;QACnC;QACA,SAASI,wBAAwB,CAAC1mC,KAAK,EAAE;UACrC,IAAIQ,aAAa,GAAGR,KAAK,CAACQ,aAAa,IAAIR,KAAK;UAChD,IAAI2mC,YAAY,GAAGnmC,aAAa,CAACU,OAAO,KAAKnH,SAAS;UACtD,OAAOunB,SAAS,IAAId,UAAU,IAAI+jB,gCAAgC,EAAE,IAAI,CAACxZ,6BAA6B,IAAK4b,YAAY,IAAI,CAACP,2BAA2B,CAAC,cAAc,CAAE,GAAG,KAAK,GAAGpoC,aAAa,CAACyD,IAAI,CAACzB,KAAK,CAAC,KAAK,CAAC,IAAI2mC,YAAY;QACtO;QACA,SAASC,gBAAgB,CAAC5mC,KAAK,EAAE;UAC7B,IAAI0mC,wBAAwB,CAAC1mC,KAAK,CAAC,EAAE;YACjC,IAAI6mC,WAAW,GAAGvB,iBAAiB,CAACwB,YAAY;YAChD,IAAIC,YAAY,GAAGzB,iBAAiB,CAAC0B,aAAa;YAClD,IAAIC,WAAW,GAAG3B,iBAAiB,CAAC4B,UAAU;YAC9C,IAAIC,SAAS,GAAG,CAAChB,kBAAkB,CAACnmC,KAAK,CAAC,GAAGimC,eAAe,IAAIC,sBAAsB;YACtF,IAAIkB,kBAAkB,GAAGD,SAAS,IAAIN,WAAW,GAAGE,YAAY,CAAC;YACjE,IAAIM,WAAW,GAAIJ,WAAW,GAAGG,kBAAmB;YACpDC,WAAW,GAAGC,QAAQ,CAACD,WAAW,CAAC,GAAGA,WAAW,GAAG,CAAC;YACrD,IAAIhmB,MAAM,IAAIqjB,YAAY,IAAI,CAAC/kB,kBAAkB,CAAC5kB,CAAC,EAC/CssC,WAAW,IAAI,CAAC,CAAC;YAErBrf,gBAAgB,CAACyd,MAAM,CAAC,CAACljC,IAAI,CAAC6Z,KAAK,CAAC4pB,eAAe,GAAGqB,WAAW,CAAC,CAAC;YAEnE,IAAIza,iCAAiC,EACjC+U,4BAA4B,CAAC+C,YAAY,EAAEsB,eAAe,GAAGqB,WAAW,CAAC;YAE7E,IAAI,CAAClnB,qBAAqB,EACtBniB,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;UACjC,CAAC,MAEGunC,oBAAoB,CAACvnC,KAAK,CAAC;QACnC;QACA,SAASunC,oBAAoB,CAACvnC,KAAK,EAAE;UACjCA,KAAK,GAAGA,KAAK,IAAIA,KAAK,CAACQ,aAAa;UAEpCysB,4BAA4B,CAACzF,gBAAgB,EACzC,CAACnE,uBAAuB,EAAED,qBAAqB,EAAEI,gBAAgB,EAAEC,cAAc,EAAEC,oBAAoB,CAAC,EACxG,CAACkjB,gBAAgB,EAAEW,oBAAoB,EAAEf,eAAe,EAAEC,aAAa,EAAEvT,qBAAqB,CAAC,EAC/F,IAAI,CAAC;UACTl1B,aAAa,CAACuB,GAAG,EAAE,CAAC,YAAW;YAC3B0tB,4BAA4B,CAACzF,gBAAgB,EAAEoe,aAAa,EAAEW,yBAAyB,EAAE,IAAI,EAAE;cAAEzY,QAAQ,EAAE;YAAK,CAAC,CAAC;UACtH,CAAC,CAAC;UAGF,IAAIlB,iCAAiC,EACjC+U,4BAA4B,CAAC+C,YAAY,EAAE,IAAI,CAAC;UAEpD9X,iCAAiC,GAAG,KAAK;UACzCvc,WAAW,CAACqX,YAAY,EAAEnB,kBAAkB,CAAC;UAC7ClW,WAAW,CAACysB,aAAa,CAACmI,OAAO,EAAES,SAAS,CAAC;UAC7Cr1B,WAAW,CAACysB,aAAa,CAACkI,MAAM,EAAEU,SAAS,CAAC;UAC5Cr1B,WAAW,CAACysB,aAAa,CAACiI,UAAU,EAAEW,SAAS,CAAC;UAEhDM,eAAe,GAAGjsC,SAAS;UAC3BksC,eAAe,GAAGlsC,SAAS;UAC3BmsC,sBAAsB,GAAG,CAAC;UAE1BI,yBAAyB,EAAE;UAE3B,IAAIP,YAAY,KAAKhsC,SAAS,EAAE;YAC5B+e,KAAK,CAAC0uB,UAAU,EAAE;YAClB7nC,YAAY,CAAComC,YAAY,CAAC;YAC1BA,YAAY,GAAGhsC,SAAS;UAC5B;UAEA,IAAIiG,KAAK,EAAE;YACP,IAAIgR,IAAI,GAAG+X,kBAAkB,CAACluB,OAAO,CAACa,GAAG,CAAC,EAAE;YAC5C,IAAI+rC,eAAe,GAAGznC,KAAK,CAAC0nC,OAAO,IAAI12B,IAAI,CAACI,IAAI,IAAIpR,KAAK,CAAC0nC,OAAO,IAAI12B,IAAI,CAACopB,KAAK,IAAIp6B,KAAK,CAAC2nC,OAAO,IAAI32B,IAAI,CAACG,GAAG,IAAInR,KAAK,CAAC2nC,OAAO,IAAI32B,IAAI,CAAC4pB,MAAM;;YAE5I;YACA,IAAI,CAAC6M,eAAe,EAChBzU,gBAAgB,EAAE;YAEtB,IAAIxG,yBAAyB,IAAIC,uBAAuB,EACpDsG,yBAAyB,CAAC,KAAK,CAAC;UACxC;QACJ;QACA,SAAS6U,sBAAsB,CAAC5nC,KAAK,EAAE;UACnC,IAAI0mC,wBAAwB,CAAC1mC,KAAK,CAAC,EAC/B6nC,4BAA4B,CAAC7nC,KAAK,CAAC;QAC3C;QACA,SAAS6nC,4BAA4B,CAAC7nC,KAAK,EAAE;UACzCgmC,eAAe,GAAGhe,gBAAgB,CAACyd,MAAM,CAAC,EAAE;UAC5CO,eAAe,GAAG8B,KAAK,CAAC9B,eAAe,CAAC,GAAG,CAAC,GAAGA,eAAe;UAC9D,IAAI3kB,MAAM,IAAIqjB,YAAY,IAAI,CAAC/kB,kBAAkB,CAACjlB,CAAC,IAAI,CAAC2mB,MAAM,EAC1D2kB,eAAe,GAAGA,eAAe,GAAG,CAAC,GAAG,CAAC,GAAGA,eAAe;UAE/DE,sBAAsB,GAAG6B,2BAA2B,EAAE,CAACvJ,EAAE,CAAC;UAC1DyH,eAAe,GAAGE,kBAAkB,CAACnmC,KAAK,CAAC;UAE3C4sB,iCAAiC,GAAG,CAACwZ,2BAA2B,CAACT,aAAa,CAAC;UAC/E/1B,QAAQ,CAAC8X,YAAY,EAAEnB,kBAAkB,CAAC;UAC1C3W,QAAQ,CAACktB,aAAa,CAACmI,OAAO,EAAES,SAAS,CAAC;UAC1C91B,QAAQ,CAACktB,aAAa,CAACiI,UAAU,EAAEW,SAAS,CAAC;UAE7CzY,4BAA4B,CAACzF,gBAAgB,EACzC,CAACnE,uBAAuB,EAAED,qBAAqB,EAAEM,oBAAoB,CAAC,EACtE,CAACkjB,gBAAgB,EAAEW,oBAAoB,EAAErU,qBAAqB,CAAC,CAAC;UACpEl1B,aAAa,CAACuB,GAAG,EAAE,CAAC,YAAW;YAC3B0tB,4BAA4B,CAACzF,gBAAgB,EAAEoe,aAAa,EAAEW,yBAAyB,EAAE,KAAK,EAAE;cAAEzY,QAAQ,EAAE;YAAK,CAAC,CAAC;UACvH,CAAC,CAAC;UAGF,IAAIjO,YAAY,IAAI,CAACc,cAAc,EAC/B3iB,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;UAC7BhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;QAC7B;QACA,SAASgoC,qBAAqB,CAAChoC,KAAK,EAAE;UAClC,IAAI0mC,wBAAwB,CAAC1mC,KAAK,CAAC,EAAE;YACjC,IAAIioC,qBAAqB,GAAGnL,aAAa,CAACyI,KAAK,CAACyB,aAAa,GAAGxkC,IAAI,CAAC4Z,KAAK,CAAC7Z,IAAI,CAAC2c,GAAG,CAAC,CAAC,EAAEwC,aAAa,CAACob,aAAa,CAACG,IAAI,CAAC,GAAG3T,uBAAuB,CAACwT,aAAa,CAACG,IAAI,CAAC,CAAC,GAAGH,aAAa,CAACyI,KAAK,CAACuB,YAAY,CAAC;YAC3M,IAAIoB,cAAc,GAAG3lC,IAAI,CAAC6Z,KAAK,CAACsF,aAAa,CAACob,aAAa,CAACG,IAAI,CAAC,GAAGgL,qBAAqB,CAAC;YAC1F,IAAIE,kBAAkB,GAAG,GAAG,GAAGF,qBAAqB;YACpD,IAAIG,yBAAyB,GAAG,GAAG,GAAGH,qBAAqB;YAC3D,IAAII,WAAW,GAAGvL,aAAa,CAACkI,MAAM,CAACj0B,MAAM,EAAE,CAAC+rB,aAAa,CAACwL,SAAS,CAAC;YACxE,IAAIC,OAAO,GAAGvoC,KAAK,CAACuoC,OAAO;YAC3B,IAAIC,aAAa,GAAGxoC,KAAK,CAACyoC,QAAQ;YAClC,IAAIC,uBAAuB,GAAGF,aAAa,IAAID,OAAO;YACtD,IAAII,gBAAgB,GAAG,IAAI;YAC3B,IAAI3+B,MAAM,GAAG,QAAQ;YACrB,IAAI4+B,cAAc;YAClB,IAAIC,iBAAiB;YACrB,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAaC,UAAU,EAAE;cAC9C,IAAInc,iCAAiC,EACjC+U,4BAA4B,CAAC+C,YAAY,EAAEqE,UAAU,CAAC;YAC9D,CAAC;YACD,IAAIC,2BAA2B,GAAG,SAA9BA,2BAA2B,GAAe;cAC1CF,qBAAqB,EAAE;cACvBjB,4BAA4B,CAAC7nC,KAAK,CAAC;YACvC,CAAC;YACD,IAAIipC,YAAY,GAAG,SAAfA,YAAY,GAAe;cAC3B,IAAI,CAACzoB,UAAU,EAAE;gBACb,IAAI0oB,WAAW,GAAG,CAACjD,eAAe,GAAGoC,WAAW,IAAInC,sBAAsB;gBAC1E,IAAIiD,YAAY,GAAG7D,iBAAiB,CAAC8D,aAAa;gBAClD,IAAIvC,WAAW,GAAGvB,iBAAiB,CAACwB,YAAY;gBAChD,IAAIC,YAAY,GAAGzB,iBAAiB,CAAC0B,aAAa;gBAClD,IAAIC,WAAW,GAAG3B,iBAAiB,CAAC4B,UAAU;gBAC9C,IAAIrP,UAAU,GAAGyN,iBAAiB,CAAC+D,cAAc;gBACjD,IAAIC,cAAc,GAAGnB,kBAAkB,GAAGtC,oBAAoB;gBAC9D,IAAI0D,YAAY,GAAGZ,gBAAgB,GAAGpmC,IAAI,CAACkJ,GAAG,CAAC28B,yBAAyB,EAAEkB,cAAc,CAAC,GAAGA,cAAc;gBAC1G,IAAIE,qBAAqB,GAAGvC,WAAW,IAAI,CAACiC,WAAW,GAAInC,YAAY,GAAG,CAAE,KAAKF,WAAW,GAAGE,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC/G,IAAI0C,WAAW,GAAGpoB,MAAM,IAAIqjB,YAAY,KAAM,CAAC/kB,kBAAkB,CAAC5kB,CAAC,IAAI,CAAC4kB,kBAAkB,CAACjlB,CAAC,IAAKuwB,kBAAkB,CAAC;gBACpH,IAAIye,uBAAuB,GAAGD,WAAW,GAAGN,YAAY,GAAGD,WAAW,GAAGC,YAAY,GAAGD,WAAW;gBACnG,IAAIS,SAAS,GAAG,CAAC,CAAC;gBAClB,IAAIC,YAAY,GAAG;kBACf5/B,MAAM,EAAEA,MAAM;kBACdS,IAAI,EAAE,cAAU7K,GAAG,EAAE;oBACjB,IAAIgtB,iCAAiC,EAAE;sBACnC5E,gBAAgB,CAACyd,MAAM,CAAC,CAAC7lC,GAAG,CAAC,CAAC,CAAC;sBAC/B+hC,4BAA4B,CAAC+C,YAAY,EAAE9kC,GAAG,CAAC;oBACnD;kBACJ;gBACJ,CAAC;gBACD4pC,qBAAqB,GAAGlC,QAAQ,CAACkC,qBAAqB,CAAC,GAAGA,qBAAqB,GAAG,CAAC;gBACnFA,qBAAqB,GAAGnoB,MAAM,IAAIqjB,YAAY,IAAI,CAAC/kB,kBAAkB,CAAC5kB,CAAC,GAAIksC,WAAW,GAAGuC,qBAAqB,GAAIA,qBAAqB;;gBAEvI;;gBAEA,IAAIhB,aAAa,EAAE;kBACfxgB,gBAAgB,CAACyd,MAAM,CAAC,CAAC+D,qBAAqB,CAAC,CAAC,CAAC;kBACjD,IAAId,uBAAuB,EAAE;oBACzB;oBACA;oBACAc,qBAAqB,GAAGxhB,gBAAgB,CAACyd,MAAM,CAAC,EAAE;oBAClD;oBACAzd,gBAAgB,CAACyd,MAAM,CAAC,CAAC5N,UAAU,CAAC;oBAEpC2R,qBAAqB,GAAGC,WAAW,IAAI9pB,kBAAkB,CAAC5kB,CAAC,GAAIksC,WAAW,GAAGuC,qBAAqB,GAAIA,qBAAqB;oBAC3HA,qBAAqB,GAAGC,WAAW,IAAI9pB,kBAAkB,CAACjlB,CAAC,GAAG,CAAC8uC,qBAAqB,GAAGA,qBAAqB;oBAE5GG,SAAS,CAACnL,EAAE,CAAC,GAAGgL,qBAAqB;oBACrC1wB,KAAK,CAAC2sB,MAAM,CAACkE,SAAS,EAAEhS,UAAU,CAACiS,YAAY,EAAE;sBAC7C7/B,QAAQ,EAAE,GAAG;sBACbE,QAAQ,EAAE++B;oBACd,CAAC,CAAC,CAAC;kBACP,CAAC,MAEGA,2BAA2B,EAAE;gBACrC,CAAC,MACI;kBACDJ,cAAc,GAAGD,gBAAgB,GAAGe,uBAAuB,GAAGd,cAAc;kBAC5EC,iBAAiB,GAAGY,WAAW,GACxBb,cAAc,GAAGO,YAAY,GAAGpC,YAAY,IAAImC,WAAW,GAAGC,YAAY,IAAID,WAAW,GACzFN,cAAc,GAAGO,YAAY,IAAID,WAAW,GAAGC,YAAY,GAAGpC,YAAY,IAAImC,WAAY;kBAEjG,IAAIL,iBAAiB,EAAE;oBACnBlpC,YAAY,CAAComC,YAAY,CAAC;oBAC1BjtB,KAAK,CAAC0uB,UAAU,EAAE;oBAClBzB,YAAY,GAAGhsC,SAAS;oBACxB+uC,qBAAqB,CAAC,IAAI,CAAC;kBAC/B,CAAC,MACI;oBACD/C,YAAY,GAAGvmC,UAAU,CAACypC,YAAY,EAAEM,YAAY,CAAC;oBAErDI,SAAS,CAACnL,EAAE,CAAC,GAAG,CAACoK,cAAc,GAAG,IAAI,GAAG,IAAI,IAAIV,cAAc;oBAC/DpvB,KAAK,CAAC2sB,MAAM,CAACkE,SAAS,EAAEhS,UAAU,CAACiS,YAAY,EAAE;sBAC7C7/B,QAAQ,EAAEu/B;oBACd,CAAC,CAAC,CAAC;kBACP;kBACAX,gBAAgB,GAAG,KAAK;gBAC5B;cACJ;YACJ,CAAC;YACD,IAAIJ,OAAO,EACPlC,yBAAyB,EAAE;YAE/BH,sBAAsB,GAAG6B,2BAA2B,EAAE,CAACvJ,EAAE,CAAC;YAC1DyH,eAAe,GAAGjoC,aAAa,CAACuC,IAAI,CAACP,KAAK,CAAC,CAACw+B,EAAE,CAAC;YAE/C5R,iCAAiC,GAAG,CAACwZ,2BAA2B,CAACT,aAAa,CAAC;YAC/E/1B,QAAQ,CAAC8X,YAAY,EAAEnB,kBAAkB,CAAC;YAC1C3W,QAAQ,CAACktB,aAAa,CAACkI,MAAM,EAAEU,SAAS,CAAC;YACzC91B,QAAQ,CAACktB,aAAa,CAACiI,UAAU,EAAEW,SAAS,CAAC;YAE7CzY,4BAA4B,CAACzF,gBAAgB,EACzC,CAACpE,qBAAqB,EAAEI,gBAAgB,EAAEC,cAAc,EAAEC,oBAAoB,CAAC,EAC/E,CAAC6jB,oBAAoB,EAAEf,eAAe,EAAEC,aAAa,EAAEvT,qBAAqB,CAAC,CAAC;YAElF+V,YAAY,EAAE;YACdjrC,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;YACzBhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;UAC7B;QACJ;QACA,SAAS6pC,sBAAsB,CAAC7pC,KAAK,EAAE;UACnC;UACA2sB,wBAAwB,GAAG,IAAI;UAC/B,IAAIH,yBAAyB,IAAIC,uBAAuB,EACpDsG,yBAAyB,CAAC,IAAI,CAAC;QACvC;QACA,SAAS+W,sBAAsB,CAAC9pC,KAAK,EAAE;UACnC2sB,wBAAwB,GAAG,KAAK;UAChC,IAAIH,yBAAyB,IAAIC,uBAAuB,EACpDsG,yBAAyB,CAAC,KAAK,CAAC;QACxC;QACA,SAASgX,yBAAyB,CAAC/pC,KAAK,EAAE;UACtChC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;QAC7B;QAEAguB,uBAAuB,CAAC8O,aAAa,CAACmI,OAAO,EACzC9hB,uBAAuB,EACvBykB,sBAAsB,CAAC;QAC3B5Z,uBAAuB,CAAC8O,aAAa,CAACkI,MAAM,EACxC,CAAC7hB,uBAAuB,EAAEG,cAAc,EAAEC,cAAc,CAAC,EACzD,CAACykB,qBAAqB,EAAE6B,sBAAsB,EAAEC,sBAAsB,CAAC,CAAC;QAC5E9b,uBAAuB,CAAC8O,aAAa,CAACiI,UAAU,EAC5C5hB,uBAAuB,EACvB4mB,yBAAyB,CAAC;QAE9B,IAAI9pB,kBAAkB,EAAE;UACpB+N,uBAAuB,CAAC8O,aAAa,CAACiI,UAAU,EAAEphB,sBAAsB,EAAE,UAAU3jB,KAAK,EAAE;YACvF,IAAIA,KAAK,CAACa,MAAM,KAAKi8B,aAAa,CAACiI,UAAU,CAAC,CAAC,CAAC,EAC5C;YACJrD,4BAA4B,CAACgD,YAAY,CAAC;YAC1C/C,4BAA4B,CAAC+C,YAAY,CAAC;UAC9C,CAAC,CAAC;QACN;MACJ;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAASjD,0BAA0B,CAACiD,YAAY,EAAEsF,cAAc,EAAE9L,SAAS,EAAE;QACzE,IAAI+L,wBAAwB,GAAGvF,YAAY,GAAGxgB,uCAAuC,GAAGC,qCAAqC;QAC7H,IAAI+lB,gBAAgB,GAAGxF,YAAY,GAAGpc,2BAA2B,GAAGG,yBAAyB;QAE7F4W,cAAc,CAACzX,YAAY,EAAEqiB,wBAAwB,EAAE,CAACD,cAAc,CAAC;QACvE3K,cAAc,CAAC6K,gBAAgB,EAAEpkB,2BAA2B,EAAE,CAACoY,SAAS,CAAC;MAC7E;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASnL,yBAAyB,CAACiX,cAAc,EAAEG,SAAS,EAAE;QAC1DxqC,YAAY,CAACysB,4BAA4B,CAAC;QAC1C,IAAI4d,cAAc,EAAE;UAChB;UACA35B,WAAW,CAACiY,2BAA2B,EAAEvC,6BAA6B,CAAC;UACvE;UACA1V,WAAW,CAACoY,yBAAyB,EAAE1C,6BAA6B,CAAC;QACzE,CAAC,MACI;UACD,IAAIqkB,SAAS;UACb,IAAI1E,SAAS,GAAG,QAAQ;UACxB,IAAIp1B,IAAI,GAAG,SAAPA,IAAI,GAAe;YACnB,IAAI,CAACqc,wBAAwB,IAAI,CAACnM,UAAU,EAAE;cAC1C4pB,SAAS,GAAG5hB,iCAAiC,CAAClZ,QAAQ,CAACo2B,SAAS,CAAC,IAAI/c,+BAA+B,CAACrZ,QAAQ,CAACo2B,SAAS,CAAC;cACxH,IAAI,CAAC0E,SAAS,KAAK5d,yBAAyB,IAAIC,uBAAuB,IAAIC,wBAAwB,CAAC,EAChG9c,QAAQ,CAAC0Y,2BAA2B,EAAEvC,6BAA6B,CAAC;cACxE,IAAI,CAACqkB,SAAS,KAAK5d,yBAAyB,IAAIC,uBAAuB,IAAIC,wBAAwB,CAAC,EAChG9c,QAAQ,CAAC6Y,yBAAyB,EAAE1C,6BAA6B,CAAC;YAC1E;UACJ,CAAC;UACD,IAAIuG,wBAAwB,GAAG,CAAC,IAAI6d,SAAS,KAAK,IAAI,EAClD/d,4BAA4B,GAAG5sB,UAAU,CAAC8Q,IAAI,EAAEgc,wBAAwB,CAAC,CAAC,KAE1Ehc,IAAI,EAAE;QACd;MACJ;;MAEA;AAChB;AACA;AACA;MACgB,SAASoxB,4BAA4B,CAACgD,YAAY,EAAE;QAChD,IAAI2F,SAAS,GAAG,CAAC,CAAC;QAClB,IAAIvN,aAAa,GAAGC,gBAAgB,CAAC2H,YAAY,CAAC;QAClD,IAAIY,iBAAiB,GAAGxI,aAAa,CAACyI,KAAK;QAC3C,IAAI+E,KAAK,GAAG,OAAO;QACnB;QACA,IAAIC,WAAW,GAAGhoC,IAAI,CAAC2c,GAAG,CAAC,CAAC,EAAEwC,aAAa,CAACob,aAAa,CAACG,IAAI,CAAC,GAAG3T,uBAAuB,CAACwT,aAAa,CAACG,IAAI,CAAC,CAAC;QAC9GoN,SAAS,CAACvN,aAAa,CAACK,aAAa,CAAC,GAAI56B,IAAI,CAACioC,KAAK,CAACD,WAAW,GAAG,GAAG,GAAGD,KAAK,CAAC,GAAGA,KAAK,GAAI,GAAG,CAAC,CAAC;;QAEhG,IAAI,CAAC/F,gCAAgC,EAAE,EACnCzH,aAAa,CAACmI,OAAO,CAACr6B,GAAG,CAACy/B,SAAS,CAAC;;QAExC;QACA/E,iBAAiB,CAAC0B,aAAa,GAAGlK,aAAa,CAACmI,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGnI,aAAa,CAAC2N,aAAa,CAAC;QAClGnF,iBAAiB,CAACoF,kBAAkB,GAAGH,WAAW;MACtD;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAAS5I,4BAA4B,CAAC+C,YAAY,EAAEiG,kBAAkB,EAAE;QACpE,IAAI5B,UAAU,GAAG5mC,IAAI,CAACwoC,kBAAkB,CAAC,IAAIvwC,KAAK,CAACK,CAAC;QACpD,IAAImwC,kBAAkB,GAAG,GAAG;QAC5B,IAAIC,iBAAiB,GAAGxpB,MAAM,IAAIqjB,YAAY;QAC9C,IAAI5H,aAAa,GAAGC,gBAAgB,CAAC2H,YAAY,CAAC;QAClD,IAAIY,iBAAiB,GAAGxI,aAAa,CAACyI,KAAK;QAC3C,IAAIuF,iBAAiB,GAAG,YAAY;QACpC,IAAIC,YAAY,GAAGpvC,OAAO,CAACY,YAAY,CAAC,WAAW,CAAC;QACpD,IAAIyuC,aAAa,GAAGrvC,OAAO,CAACY,YAAY,CAAC,YAAY,CAAC;QACtD,IAAI0uC,YAAY,GAAGvG,YAAY,GAAG1c,gBAAgB,CAACriB,cAAc,CAAC,EAAE,GAAGqiB,gBAAgB,CAACpiB,aAAa,CAAC,EAAE;QACxG,IAAIslC,aAAa,GAAGP,kBAAkB,KAAK5wC,SAAS,IAAIgvC,UAAU,GAAGkC,YAAY,GAAGN,kBAAkB;;QAEtG;QACA,IAAI5D,YAAY,GAAGzB,iBAAiB,CAAC0B,aAAa;QAClD,IAAIH,WAAW,GAAG/J,aAAa,CAACkI,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAGlI,aAAa,CAAC2N,aAAa,CAAC;QACjF,IAAIU,eAAe,GAAGtE,WAAW,GAAGE,YAAY;QAChD,IAAIsD,SAAS,GAAG,CAAC,CAAC;QAClB,IAAIe,eAAe;QACnB,IAAIC,cAAc;;QAElB;QACA;QACA;QACA,IAAIC,SAAS,GAAG,CAACniB,sBAAsB,CAACxG,UAAU,GAAGma,aAAa,CAAC2N,aAAa,CAAC,GAAGthB,sBAAsB,CAAC,QAAQ,GAAG2T,aAAa,CAAC2N,aAAa,CAAC,KAAK9qB,kBAAkB,CAACjlB,CAAC,IAAImwC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5M,IAAIU,cAAc,GAAG,SAAjBA,cAAc,CAAar/B,IAAI,EAAE;UACjC,OAAO47B,KAAK,CAAC57B,IAAI,GAAGo/B,SAAS,CAAC,GAAG,CAAC,GAAG/oC,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAElJ,IAAI,CAAC2c,GAAG,CAAC,CAAC,EAAEhT,IAAI,GAAGo/B,SAAS,CAAC,CAAC;QACnF,CAAC;QACD,IAAIE,eAAe,GAAG,SAAlBA,eAAe,CAAaC,WAAW,EAAE;UACzC,IAAI16B,MAAM,GAAGo6B,eAAe,GAAGM,WAAW;UAC1C16B,MAAM,GAAG+2B,KAAK,CAAC/2B,MAAM,CAAC,GAAG,CAAC,GAAGA,MAAM;UACnCA,MAAM,GAAI85B,iBAAiB,IAAI,CAAClrB,kBAAkB,CAAC5kB,CAAC,GAAK8rC,WAAW,GAAGE,YAAY,GAAGh2B,MAAM,GAAIA,MAAM;UACtGA,MAAM,GAAGxO,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAEsF,MAAM,CAAC;UAC5B,OAAOA,MAAM;QACjB,CAAC;QACD,IAAI06B,WAAW,GAAGF,cAAc,CAACN,YAAY,CAAC;QAC9C,IAAIS,oBAAoB,GAAGH,cAAc,CAACL,aAAa,CAAC;QACxD,IAAI/B,YAAY,GAAGqC,eAAe,CAACE,oBAAoB,CAAC;QACxD,IAAIC,mBAAmB,GAAGH,eAAe,CAACC,WAAW,CAAC;QAEtDnG,iBAAiB,CAAC4B,UAAU,GAAGoE,SAAS;QACxChG,iBAAiB,CAAC+D,cAAc,GAAG4B,YAAY;QAC/C3F,iBAAiB,CAACsG,mBAAmB,GAAGH,WAAW;QAEnD,IAAIvrB,iBAAiB,EAAE;UACnBkrB,eAAe,GAAGP,iBAAiB,GAAG,EAAEhE,WAAW,GAAGE,YAAY,GAAGoC,YAAY,CAAC,GAAGA,YAAY,CAAC,CAAC;UACnG;UACAkC,cAAc,GAAG3G,YAAY,GAAGoG,iBAAiB,GAAGM,eAAe,GAAG,QAAQ,GAAGN,iBAAiB,GAAG,KAAK,GAAGM,eAAe,GAAG,KAAK;UAEpIf,SAAS,CAACU,YAAY,CAAC,GAAGM,cAAc;;UAExC;UACA,IAAIprB,kBAAkB,EAClBoqB,SAAS,CAACW,aAAa,CAAC,GAAGjC,UAAU,IAAIxmC,IAAI,CAACc,GAAG,CAAC8lC,YAAY,GAAG7D,iBAAiB,CAAC8D,aAAa,CAAC,GAAG,CAAC,GAAGyC,sBAAsB,CAAC/O,aAAa,CAACmI,OAAO,CAAC,GAAG,IAAI,IAAI8F,YAAY,GAAGtlC,SAAS,GAAGmlC,kBAAkB,GAAG,IAAI,CAAC,GAAGllC,SAAS;QACzO,CAAC,MAEG2kC,SAAS,CAACvN,aAAa,CAACwL,SAAS,CAAC,GAAGa,YAAY;;QAGrD;QACA,IAAI,CAAC5E,gCAAgC,EAAE,EAAE;UACrCzH,aAAa,CAACmI,OAAO,CAACr6B,GAAG,CAACy/B,SAAS,CAAC;;UAEpC;UACA,IAAInqB,iBAAiB,IAAID,kBAAkB,IAAI8oB,UAAU,EAAE;YACvDjM,aAAa,CAACmI,OAAO,CAACh4B,GAAG,CAAC0W,sBAAsB,EAAE,YAAY;cAC1D,IAAI,CAACnD,UAAU,EACXsc,aAAa,CAACmI,OAAO,CAACr6B,GAAG,CAACogC,aAAa,EAAEtlC,SAAS,CAAC;YAC3D,CAAC,CAAC;UACN;QACJ;QAEA4/B,iBAAiB,CAAC8D,aAAa,GAAGD,YAAY;QAC9C7D,iBAAiB,CAACwG,oBAAoB,GAAGH,mBAAmB;QAC5DrG,iBAAiB,CAACwB,YAAY,GAAGD,WAAW;MAChD;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASjF,4BAA4B,CAACmK,OAAO,EAAE5jC,KAAK,EAAE;QAClD,IAAIgpB,MAAM,GAAGhpB,KAAK,GAAG,aAAa,GAAG,UAAU;QAC/C,IAAI6jC,QAAQ,GAAGD,OAAO,GAAGxjB,gCAAgC,GAAGC,iCAAiC;QAC7F,IAAIyjB,QAAQ,GAAGF,OAAO,GAAGrjB,8BAA8B,GAAGC,+BAA+B;QACzF,IAAIpZ,SAAS,GAAGw8B,OAAO,GAAGpmB,2BAA2B,GAAGE,4BAA4B;QAEpFmmB,QAAQ,CAAC7a,MAAM,CAAC,CAAC5hB,SAAS,CAAC;QAC3B08B,QAAQ,CAAC9a,MAAM,CAAC,CAAC5hB,SAAS,CAAC;MAC/B;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASwtB,gBAAgB,CAAC2H,YAAY,EAAE;QACpC,OAAO;UACHvH,aAAa,EAAEuH,YAAY,GAAGpiB,SAAS,GAAGC,UAAU;UACpDkoB,aAAa,EAAE/F,YAAY,GAAG,OAAO,GAAG,QAAQ;UAChD4D,SAAS,EAAE5D,YAAY,GAAGviB,QAAQ,GAAGH,OAAO;UAC5C2c,SAAS,EAAE+F,YAAY,GAAG,MAAM,GAAG,KAAK;UACxCnG,IAAI,EAAEmG,YAAY,GAAG7hB,KAAK,GAAGC,KAAK;UAClC2c,IAAI,EAAEiF,YAAY,GAAG,GAAG,GAAG,GAAG;UAC9BzH,IAAI,EAAEyH,YAAY,GAAG,GAAG,GAAG,GAAG;UAC9BwH,IAAI,EAAExH,YAAY,GAAG,GAAG,GAAG,GAAG;UAC9BM,MAAM,EAAEN,YAAY,GAAGnc,gCAAgC,GAAGG,8BAA8B;UACxFuc,OAAO,EAAEP,YAAY,GAAGlc,iCAAiC,GAAGG,+BAA+B;UAC3Foc,UAAU,EAAEL,YAAY,GAAGpc,2BAA2B,GAAGG,yBAAyB;UAClF8c,KAAK,EAAEb,YAAY,GAAGljB,qBAAqB,GAAGC;QAClD,CAAC;MACL;;MAGA;;MAEA;AAChB;AACA;AACA;MACgB,SAAS0qB,uBAAuB,CAAC1Y,OAAO,EAAE;QACtCpL,uBAAuB,GAAGA,uBAAuB,IAAI6a,0BAA0B,CAACld,yBAAyB,EAAE,IAAI,CAAC;QAEhH,IAAI,CAACyN,OAAO,EAAE;UACV,IAAI,CAAC7S,UAAU,EAAE;YACbgH,YAAY,CAACna,MAAM,CAAC4a,uBAAuB,CAAC;UAChD;QACJ,CAAC,MACI;UACD,IAAIzH,UAAU,IAAIL,YAAY,EAAE;YAC5BlQ,WAAW,CAACgY,uBAAuB,CAACxX,UAAU,CAAChW,OAAO,CAACL,CAAC,CAAC,EAAEisB,yBAAyB,CAAC;UACzF,CAAC,MACI;YACD5Y,MAAM,CAACwa,uBAAuB,CAAC;UACnC;QACJ;MACJ;;MAEA;AAChB;AACA;MACgB,SAAS+jB,0BAA0B,GAAG;QAClC,IAAI5G,YAAY,GAAG5c,oBAAoB,CAACzX,GAAG,KAAKyX,oBAAoB;QACpE,IAAIyjB,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAIC,aAAa,GAAG,CAAC,CAAC;QACtB,IAAIpG,sBAAsB,GAAG,CAAC,CAAC;QAC/B,IAAIqG,yBAAyB;QAE7B,SAAS3F,gBAAgB,CAAC5mC,KAAK,EAAE;UAC7B,IAAI0mC,wBAAwB,CAAC1mC,KAAK,CAAC,EAAE;YACjC,IAAIwsC,UAAU,GAAGC,cAAc,CAACzsC,KAAK,CAAC;YACtC,IAAIijC,cAAc,GAAG,CAAC,CAAC;YACvB,IAAIlW,iBAAiB,IAAID,WAAW,EAChCmW,cAAc,CAAC3gB,SAAS,CAAC,GAAIgqB,aAAa,CAACtpC,CAAC,GAAG,CAACwpC,UAAU,CAACtuC,CAAC,GAAGmuC,iBAAiB,CAACnuC,CAAC,IAAIgoC,sBAAsB,CAAChoC,CAAE;YACnH,IAAI8uB,eAAe,IAAIF,WAAW,EAC9BmW,cAAc,CAAC1gB,UAAU,CAAC,GAAI+pB,aAAa,CAAC1xB,CAAC,GAAG,CAAC4xB,UAAU,CAACprC,CAAC,GAAGirC,iBAAiB,CAACjrC,CAAC,IAAI8kC,sBAAsB,CAAC9kC,CAAE;YACpHwmB,YAAY,CAAChd,GAAG,CAACq4B,cAAc,CAAC;YAChCjlC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;UAC7B,CAAC,MACI;YACDunC,oBAAoB,CAACvnC,KAAK,CAAC;UAC/B;QACJ;QACA,SAASunC,oBAAoB,CAACvnC,KAAK,EAAE;UACjC,IAAI0sC,cAAc,GAAG1sC,KAAK,KAAKjG,SAAS;UAExCkzB,4BAA4B,CAACzF,gBAAgB,EACzC,CAAC9D,oBAAoB,EAAEL,uBAAuB,EAAED,qBAAqB,CAAC,EACtE,CAAC8P,qBAAqB,EAAE0T,gBAAgB,EAAEW,oBAAoB,CAAC,EAC/D,IAAI,CAAC;UAETl3B,WAAW,CAACqX,YAAY,EAAEnB,kBAAkB,CAAC;UAC7C,IAAI8B,uBAAuB,CAACskB,cAAc,EACtCtkB,uBAAuB,CAACskB,cAAc,EAAE;UAE5C,IAAID,cAAc,EAAE;YAChB,IAAIH,yBAAyB,EACzBta,wBAAwB,EAAE;YAC9BnZ,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;UAC1B;UACA8pB,yBAAyB,GAAG,KAAK;QACrC;QACA,SAAS7F,wBAAwB,CAAC1mC,KAAK,EAAE;UACrC,IAAIQ,aAAa,GAAGR,KAAK,CAACQ,aAAa,IAAIR,KAAK;UAChD,IAAI2mC,YAAY,GAAGnmC,aAAa,CAACU,OAAO,KAAKnH,SAAS;UACtD,OAAOunB,SAAS,IAAId,UAAU,GAAG,KAAK,GAAGxiB,aAAa,CAACyD,IAAI,CAACzB,KAAK,CAAC,KAAK,CAAC,IAAI2mC,YAAY;QAC5F;QACA,SAAS8F,cAAc,CAACzsC,KAAK,EAAE;UAC3B,OAAO6f,YAAY,IAAI2lB,YAAY,GAAG;YAAEtnC,CAAC,EAAE8B,KAAK,CAAC4sC,OAAO;YAAExrC,CAAC,EAAEpB,KAAK,CAAC6sC;UAAQ,CAAC,GAAG7uC,aAAa,CAACuC,IAAI,CAACP,KAAK,CAAC;QAC5G;QAEAguB,uBAAuB,CAAC3F,uBAAuB,EAAElF,uBAAuB,EAAE,UAAUnjB,KAAK,EAAE;UACvF,IAAI0mC,wBAAwB,CAAC1mC,KAAK,CAAC,IAAI,CAAC6sB,WAAW,EAAE;YACjD,IAAId,2BAA2B,EAAE;cAC7BwgB,yBAAyB,GAAG,IAAI;cAChC/Z,2BAA2B,EAAE;YACjC;YAEA6Z,iBAAiB,GAAGI,cAAc,CAACzsC,KAAK,CAAC;YAEzCssC,aAAa,CAACtpC,CAAC,GAAG+lB,kBAAkB,CAACluB,OAAO,CAACS,EAAE,CAAC,IAAI,CAACulB,YAAY,GAAGE,SAAS,GAAG,CAAC,CAAC;YAClFurB,aAAa,CAAC1xB,CAAC,GAAGmO,kBAAkB,CAACluB,OAAO,CAACM,EAAE,CAAC,IAAI,CAAC0lB,YAAY,GAAGG,SAAS,GAAG,CAAC,CAAC;YAClFklB,sBAAsB,GAAG6B,2BAA2B,EAAE;YAEtD9a,4BAA4B,CAACzF,gBAAgB,EACzC,CAAC9D,oBAAoB,EAAEL,uBAAuB,EAAED,qBAAqB,CAAC,EACtE,CAAC8P,qBAAqB,EAAE0T,gBAAgB,EAAEW,oBAAoB,CAAC,CAAC;YAEpE33B,QAAQ,CAAC8X,YAAY,EAAEnB,kBAAkB,CAAC;YAC1C,IAAI8B,uBAAuB,CAACykB,UAAU,EAClCzkB,uBAAuB,CAACykB,UAAU,EAAE;YAExC9uC,aAAa,CAACmC,IAAI,CAACH,KAAK,CAAC;YACzBhC,aAAa,CAAC+B,IAAI,CAACC,KAAK,CAAC;UAC7B;QACJ,CAAC,CAAC;MACN;;MAGA;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAAS6hC,gBAAgB,CAACrlC,IAAI,EAAEuwC,IAAI,EAAEC,SAAS,EAAE;QAC7C,IAAIA,SAAS,KAAK,KAAK,EACnB;QACJ,IAAIzsB,YAAY,EAAE;UACd,IAAIvY,QAAQ,GAAG8e,uBAAuB,CAAC3R,SAAS,CAAC3Y,IAAI,CAAC;UACtD,IAAIywC,eAAe,GAAGzwC,IAAI;UAC1B,IAAI0wC,GAAG;UAEP,IAAID,eAAe,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EACrCF,eAAe,GAAGA,eAAe,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACpvC,WAAW,EAAE,GAAGkvC,eAAe,CAACE,MAAM,CAAC,CAAC,CAAC;UAE5F,IAAIhrC,IAAI,CAAC6F,QAAQ,CAAC,IAAI5N,KAAK,CAACE,CAAC,EACzB0N,QAAQ,CAACnJ,IAAI,CAACia,KAAK,EAAEi0B,IAAI,CAAC;UAE9BhlC,IAAI,CAACgf,WAAW,EAAE,YAAY;YAC1BmmB,GAAG,GAAG,IAAI;YACV,IAAI/qC,IAAI,CAAC+qC,GAAG,CAAC1gC,EAAE,CAAC,IAAIpS,KAAK,CAACE,CAAC,EACvB4yC,GAAG,CAAC1gC,EAAE,CAACygC,eAAe,EAAEF,IAAI,CAAC;UACrC,CAAC,CAAC;QACN,CAAC,MACI,IAAI,CAACvsB,UAAU,EAChBkG,oBAAoB,CAAC/b,IAAI,CAAC;UAAEjQ,CAAC,EAAE8B,IAAI;UAAEjC,CAAC,EAAEwyC;QAAK,CAAC,CAAC;MACvD;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;MACgB,SAASnd,qBAAqB,CAACwd,eAAe,EAAEC,MAAM,EAAEjwC,MAAM,EAAE;QAC5DiwC,MAAM,GAAGA,MAAM,IAAI3nC,SAAS;QAC5BtI,MAAM,GAAGA,MAAM,IAAI,CAACsI,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC;QAE/D0nC,eAAe,CAACC,MAAM,GAAGrrB,OAAO,CAAC,GAAG5kB,MAAM,CAAC,CAAC,CAAC;QAC7CgwC,eAAe,CAACC,MAAM,GAAGprB,SAAS,CAAC,GAAG7kB,MAAM,CAAC,CAAC,CAAC;QAC/CgwC,eAAe,CAACC,MAAM,GAAGnrB,UAAU,CAAC,GAAG9kB,MAAM,CAAC,CAAC,CAAC;QAChDgwC,eAAe,CAACC,MAAM,GAAGlrB,QAAQ,CAAC,GAAG/kB,MAAM,CAAC,CAAC,CAAC;MAClD;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;MACgB,SAAS08B,yBAAyB,CAACuT,MAAM,EAAEhwC,MAAM,EAAEiwC,KAAK,EAAEC,KAAK,EAAE;QAC7DlwC,MAAM,GAAGA,MAAM,IAAIqI,SAAS;QAC5B2nC,MAAM,GAAGA,MAAM,IAAI3nC,SAAS;QAC5B,OAAO;UACHxC,CAAC,EAAEqqC,KAAK,GAAG,CAAC,GAAG3Z,mBAAmB,CAAChM,YAAY,CAAChd,GAAG,CAACyiC,MAAM,GAAGrrB,OAAO,GAAG3kB,MAAM,CAAC,CAAC;UAC/Em+B,CAAC,EAAE8R,KAAK,GAAG,CAAC,GAAG1Z,mBAAmB,CAAChM,YAAY,CAAChd,GAAG,CAACyiC,MAAM,GAAGprB,SAAS,GAAG5kB,MAAM,CAAC,CAAC;UACjF5C,CAAC,EAAE8yC,KAAK,GAAG,CAAC,GAAG3Z,mBAAmB,CAAChM,YAAY,CAAChd,GAAG,CAACyiC,MAAM,GAAGnrB,UAAU,GAAG7kB,MAAM,CAAC,CAAC;UAClFrC,CAAC,EAAEsyC,KAAK,GAAG,CAAC,GAAG1Z,mBAAmB,CAAChM,YAAY,CAAChd,GAAG,CAACyiC,MAAM,GAAGlrB,QAAQ,GAAG9kB,MAAM,CAAC;QACnF,CAAC;MACL;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASwuC,sBAAsB,CAAC3e,OAAO,EAAE;QACrC,IAAIsgB,aAAa,GAAG7xC,OAAO,CAACY,YAAY,CAAC,YAAY,CAAC;QACtD,IAAIkxC,cAAc,GAAGvgB,OAAO,CAACtiB,GAAG,CAAC4iC,aAAa,CAAC;QAC/C,IAAIC,cAAc,EACd,OAAOA,cAAc;QACzB,IAAIC,YAAY,GAAG,OAAO,GAAG,uBAAuB,GAAG,UAAU;QACjE,IAAIC,UAAU,GAAG,IAAIC,MAAM,CAACF,YAAY,CAAC;QACzC,IAAIG,cAAc,GAAG,IAAID,MAAM,CAAC,IAAI,GAAGF,YAAY,GAAG,KAAK,CAAC;QAC5D,IAAII,UAAU,GAAG,yCAAyC,CAACtwC,KAAK,CAAC,GAAG,CAAC;QACrE,IAAIf,MAAM,GAAG,EAAE;QACf,IAAIsxC,SAAS;QACb,IAAIC,UAAU;QACd,IAAIjzC,CAAC,GAAG,CAAC;QACT,IAAIod,CAAC;QACL,IAAI81B,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAahyC,GAAG,EAAE;UACtC8xC,SAAS,GAAG,EAAE;UACd,IAAI,CAAC9xC,GAAG,CAACoM,KAAK,CAACwlC,cAAc,CAAC,EAC1B,OAAO5xC,GAAG;UACd,OAAOA,GAAG,CAACoM,KAAK,CAACslC,UAAU,CAAC,EAAE;YAC1BI,SAAS,CAACpjC,IAAI,CAACijC,MAAM,CAACM,EAAE,CAAC;YACzBjyC,GAAG,GAAGA,GAAG,CAACgB,OAAO,CAAC0wC,UAAU,EAAEjoC,SAAS,CAAC;UAC5C;UAEA,OAAOqoC,SAAS;QACpB,CAAC;QACD,OAAOhzC,CAAC,GAAG+yC,UAAU,CAACjzC,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UACnCizC,UAAU,GAAGC,oBAAoB,CAAC/gB,OAAO,CAACtiB,GAAG,CAAC4iC,aAAa,GAAG,GAAG,GAAGM,UAAU,CAAC/yC,CAAC,CAAC,CAAC,CAAC;UACnF,KAAKod,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG61B,UAAU,CAACnzC,OAAO,CAACG,CAAC,CAAC,EAAEmd,CAAC,EAAE;YACtC1b,MAAM,CAAC0b,CAAC,CAAC,GAAG,CAAC1b,MAAM,CAAC0b,CAAC,CAAC,GAAG1b,MAAM,CAAC0b,CAAC,CAAC,GAAG1S,SAAS,GAAGC,SAAS,IAAIsoC,UAAU,CAAC71B,CAAC,CAAC;UAAC;QACpF;QACA,OAAO1b,MAAM,CAAC6L,IAAI,CAAC,IAAI,CAAC;MAC5B;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASqpB,yBAAyB,CAACwc,uBAAuB,EAAEC,sBAAsB,EAAE;QAChF,IAAIrzC,CAAC;QACL,IAAIyC,KAAK;QACT,IAAI6wC,QAAQ;QACZ,IAAIC,aAAa,GAAG,SAAhBA,aAAa,CAAaz+B,OAAO,EAAE0+B,SAAS,EAAE;UAC9CF,QAAQ,GAAG,EAAE;UACb,IAAIE,SAAS,IAAI,OAAO1+B,OAAO,IAAIzV,KAAK,CAACI,CAAC,EAAE;YACxCgD,KAAK,GAAGqS,OAAO,CAACrS,KAAK,CAACiI,SAAS,CAAC;YAChC,KAAK1K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyC,KAAK,CAAC3C,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;cACjCszC,QAAQ,IAAI,GAAG,GAAG7wC,KAAK,CAACzC,CAAC,CAAC,GAAG,GAAG;YAAC;YACrC;UACJ;;UACA,OAAOszC,QAAQ;QACnB,CAAC;QAED,OAAO,IAAIT,MAAM,CACb,IAAI,GAAG7pB,qBAAqB,GAAG,aAAa,GAC5CuqB,aAAa,CAACpjB,eAAe,EAAEijB,uBAAuB,CAAC,GACvDG,aAAa,CAACnjB,aAAa,EAAEijB,sBAAsB,CAAC,EAAE,GAAG,CAAC;MAClE;;MAEA;AAChB;AACA;AACA;MACgB,SAASrG,2BAA2B,GAAG;QACnC,IAAI/2B,IAAI,GAAGkY,qBAAqB,CAACruB,OAAO,CAACa,GAAG,CAAC,EAAE;QAC/C,OAAO;UACHwC,CAAC,EAAEgiB,iBAAiB,GAAG,CAAC,IAAI3d,IAAI,CAAC6Z,KAAK,CAACpL,IAAI,CAAC2lB,KAAK,CAAC,GAAGzN,qBAAqB,CAACruB,OAAO,CAACS,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;UAChG8F,CAAC,EAAE8e,iBAAiB,GAAG,CAAC,IAAI3d,IAAI,CAAC6Z,KAAK,CAACpL,IAAI,CAAC6lB,MAAM,CAAC,GAAG3N,qBAAqB,CAACruB,OAAO,CAACM,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG;QACpG,CAAC;MACL;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASokB,aAAa,CAACllB,CAAC,EAAE;QACtB,IAAIm0C,gBAAgB,GAAG,eAAe;QACtC,IAAIC,cAAc,GAAG,aAAa;QAClC,IAAIze,GAAG,GAAG31B,CAAC,IAAIA,CAAC,CAACm0C,gBAAgB,CAAC,GAAIn0C,CAAC,CAACm0C,gBAAgB,CAAC,CAACE,YAAY,IAAIx0C,MAAM,GAAIA,MAAM;QAC1F,OACI,OAAO81B,GAAG,CAACye,cAAc,CAAC,IAAIr0C,KAAK,CAACC,CAAC,GAAGA,CAAC,YAAY21B,GAAG,CAACye,cAAc,CAAC;QAAG;QACvEp0C,CAAC,IAAI,OAAOA,CAAC,IAAID,KAAK,CAACC,CAAC,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,CAAC6O,QAAQ,KAAK,CAAC,IAAI,OAAO7O,CAAC,CAACs0C,QAAQ,IAAIv0C,KAAK,CAACI,CAAC;MAEtG;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAAS05B,mBAAmB,CAAC0a,EAAE,EAAEC,EAAE,EAAE;QACjC,IAAIt0C,CAAC,GAAG,EAAE;QACV,IAAI05B,IAAI,GAAG,EAAE;QACb,IAAIl5B,CAAC;QACL,IAAI+zC,CAAC;QACL,KAAK/zC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6zC,EAAE,CAAC5xC,MAAM,EAAEjC,CAAC,EAAE;UAC1BR,CAAC,CAACq0C,EAAE,CAAC7zC,CAAC,CAAC,CAAC,GAAG,IAAI;QAAC;QACpB,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8zC,EAAE,CAAC7xC,MAAM,EAAEjC,CAAC,EAAE,EAAE;UAC5B,IAAIR,CAAC,CAACs0C,EAAE,CAAC9zC,CAAC,CAAC,CAAC,EACR,OAAOR,CAAC,CAACs0C,EAAE,CAAC9zC,CAAC,CAAC,CAAC,CAAC,KAEhBR,CAAC,CAACs0C,EAAE,CAAC9zC,CAAC,CAAC,CAAC,GAAG,IAAI;QACvB;QACA,KAAK+zC,CAAC,IAAIv0C,CAAC;UACP05B,IAAI,CAACtpB,IAAI,CAACmkC,CAAC,CAAC;QAAC;QACjB,OAAO7a,IAAI;MACf;;MAEA;AAChB;AACA;AACA;AACA;MACgB,SAASL,mBAAmB,CAACzrB,KAAK,EAAE4mC,OAAO,EAAE;QACzC,IAAIC,GAAG,GAAGD,OAAO,GAAGrjC,UAAU,CAACvD,KAAK,CAAC,GAAGgS,QAAQ,CAAChS,KAAK,EAAE,EAAE,CAAC;QAC3D,OAAO2/B,KAAK,CAACkH,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG;MAC/B;;MAEA;AAChB;AACA;AACA;MACgB,SAAS/O,eAAe,GAAG;QACvB;QACA,IAAIgP,sBAAsB,GAAGnmB,oBAAoB,CAAComB,cAAc;QAChE,IAAID,sBAAsB,KAAKl1C,SAAS,EACpC;QAEJ,IAAIo1C,aAAa,GAAGxnB,cAAc,CAACve,GAAG,EAAE;QACxC,IAAIgmC,cAAc,GAAGD,aAAa,CAACt0C,OAAO,CAACG,CAAC,CAAC;QAC7C,IAAIq0C,gBAAgB,GAAGF,aAAa,CAAC3xC,KAAK,CAAC,IAAI,CAAC;QAChD,IAAI8xC,eAAe,GAAGD,gBAAgB,CAACx0C,OAAO,CAACG,CAAC,CAAC;QACjD,IAAIu0C,6BAA6B,GAAGJ,aAAa,CAAChC,MAAM,CAAC,CAAC,EAAE8B,sBAAsB,CAAC,CAACzxC,KAAK,CAAC,IAAI,CAAC;QAC/F,IAAIgjC,SAAS,GAAG,CAAC;QACjB,IAAIgP,eAAe,GAAG,CAAC;QACvB,IAAIpP,SAAS,GAAGmP,6BAA6B,CAAC10C,OAAO,CAACG,CAAC,CAAC;QACxD,IAAIslC,SAAS,GAAGiP,6BAA6B,CAACA,6BAA6B,CAAC10C,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC,CAAC,CAACH,OAAO,CAACG,CAAC,CAAC;QACtG,IAAIy0C,OAAO;QACX,IAAI10C,CAAC;;QAEL;QACA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs0C,gBAAgB,CAACx0C,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;UAC9C00C,OAAO,GAAGJ,gBAAgB,CAACt0C,CAAC,CAAC,CAACF,OAAO,CAACG,CAAC,CAAC;UACxC,IAAIy0C,OAAO,GAAGD,eAAe,EAAE;YAC3BhP,SAAS,GAAGzlC,CAAC,GAAG,CAAC;YACjBy0C,eAAe,GAAGC,OAAO;UAC7B;QACJ;QAEA,OAAO;UACHpP,UAAU,EAAED,SAAS;UAAE;UACvBG,aAAa,EAAED,SAAS;UAAE;UAC1BH,KAAK,EAAEmP,eAAe;UAAE;UACxB1O,QAAQ,EAAE4O,eAAe;UAAE;UAC3B/O,UAAU,EAAED,SAAS;UAAE;UACvBM,eAAe,EAAEmO,sBAAsB;UAAE;UACzCjO,UAAU,EAAEoO,cAAc,CAAC;QAC/B,CAAC;MACL;;MAEA;AAChB;AACA;AACA;MACgB,SAAS7K,gCAAgC,GAAG;QACxC,OAAQha,kCAAkC,IAAK9K,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAE;MAChH;;MAEA;AAChB;AACA;AACA;MACgB,SAASqzB,wBAAwB,GAAG;QAChC,OAAOhU,WAAW,GAAG2H,qBAAqB,CAAC,CAAC,CAAC,GAAGgB,qBAAqB;MACzE;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAASoF,WAAW,CAACkhB,cAAc,EAAEC,OAAO,EAAE;QAC1C,OAAO,OAAO,IAAID,cAAc,GAAGvtC,IAAI,CAACutC,cAAc,CAAC,IAAIt1C,KAAK,CAACI,CAAC,GAC9D,SAAS,GAAGk1C,cAAc,GAAG,GAAG,GAC/B,YAAY;UACT,IAAIhoC,GAAG;UACP,IAAI0uB,KAAK,GAAG1wB,SAAS;UACrB,IAAIH,SAAS,CAAC8B,aAAa,CAACqoC,cAAc,CAAC,EAAE;YACzC,KAAKhoC,GAAG,IAAIgoC,cAAc;cACtBtZ,KAAK,IAAI,CAAC1uB,GAAG,KAAK,GAAG,GAAG,OAAO,GAAGA,GAAG,IAAI,IAAI,GAAGgoC,cAAc,CAAChoC,GAAG,CAAC,GAAG,IAAI;YAAC;UACnF;UACA,OAAO0uB,KAAK;QAChB,CAAC,EAAG,GACJ1wB,SAAS,CAAC,GACV,GAAG,IACFiqC,OAAO,IAAIjqC,SAAS,CAAC,GACtB,QAAQ;MAChB;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;MACgB,SAASw9B,0BAA0B,CAAC3zB,SAAS,EAAEqgC,0BAA0B,EAAE;QACvE,IAAIC,YAAY,GAAG1tC,IAAI,CAACytC,0BAA0B,CAAC,IAAIx1C,KAAK,CAACK,CAAC;QAC9D,IAAIq1C,YAAY,GAAGD,YAAY,GAAGjoB,YAAY,GAAIgoB,0BAA0B,IAAIhoB,YAAa;QAE7F,OAAQhH,UAAU,IAAI,CAACkvB,YAAY,CAACj1C,OAAO,CAACG,CAAC,CAAC,GACxC,IAAI,GACJ4lB,UAAU,GACNkvB,YAAY,CAACD,YAAY,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC9sB,OAAO,GAAGxT,SAAS,CAACtS,OAAO,CAAC,KAAK,EAAE8lB,OAAO,CAAC,CAAC,CAACtR,EAAE,CAAC,CAAC,CAAC,GACnGlM,SAAS,CAACipB,WAAW,CAACjf,SAAS,CAAC,CAAC;MAC/C;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAASwgC,gBAAgB,CAAC3tC,GAAG,EAAE4tC,IAAI,EAAE;QACjC,IAAIC,MAAM,GAAGD,IAAI,CAACxyC,KAAK,CAACulB,OAAO,CAAC;QAChC,IAAIhoB,CAAC,GAAG,CAAC;QACT,IAAIqO,GAAG;QACP,OAAOrO,CAAC,GAAGk1C,MAAM,CAACjzC,MAAM,EAAEjC,CAAC,EAAE,EAAE;UAC3B,IAAI,CAACqH,GAAG,CAACvH,OAAO,CAACY,GAAG,CAAC,CAACw0C,MAAM,CAACl1C,CAAC,CAAC,CAAC,EAC5B;UACJqO,GAAG,GAAGhH,GAAG,CAAC6tC,MAAM,CAACl1C,CAAC,CAAC,CAAC;UACpB,IAAIA,CAAC,GAAGk1C,MAAM,CAACjzC,MAAM,IAAImF,IAAI,CAACiH,GAAG,CAAC,IAAIhP,KAAK,CAACC,CAAC,EACzC+H,GAAG,GAAGgH,GAAG;QACjB;QACA,OAAOA,GAAG;MACd;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAAS8mC,gBAAgB,CAAC9tC,GAAG,EAAE4tC,IAAI,EAAE5mC,GAAG,EAAE;QACtC,IAAI6mC,MAAM,GAAGD,IAAI,CAACxyC,KAAK,CAACulB,OAAO,CAAC;QAChC,IAAIotB,YAAY,GAAGF,MAAM,CAACjzC,MAAM;QAChC,IAAIjC,CAAC,GAAG,CAAC;QACT,IAAIq1C,SAAS,GAAG,CAAC,CAAC;QAClB,IAAIC,aAAa,GAAGD,SAAS;QAC7B,OAAOr1C,CAAC,GAAGo1C,YAAY,EAAEp1C,CAAC,EAAE;UACxBq1C,SAAS,GAAGA,SAAS,CAACH,MAAM,CAACl1C,CAAC,CAAC,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGo1C,YAAY,GAAG,CAAC,CAAC,GAAG/mC,GAAG;QAAC;QACvE7D,SAAS,CAACsB,MAAM,CAACzE,GAAG,EAAEiuC,aAAa,EAAE,IAAI,CAAC;MAC9C;;MAEA;AAChB;AACA;AACA;MACgB,SAAShd,gBAAgB,CAAClC,MAAM,EAAE;QAC9B,IAAIjd,YAAY,GAAG4S,uBAAuB,CAAC5S,YAAY;QACvDA,YAAY,GAAG/R,IAAI,CAAC+R,YAAY,CAAC,IAAI9Z,KAAK,CAACI,CAAC,GAAG0Z,YAAY,CAAC1W,KAAK,CAACiI,SAAS,CAAC,GAAGyO,YAAY;QAE3F,IAAIlW,aAAa,CAACgE,GAAG,CAACkS,YAAY,CAAC,IAAI,CAACsM,UAAU,EAAE;UAChDzY,IAAI,CAACmM,YAAY,EAAEid,MAAM,CAAC;QAC9B;MACJ;;MAGA;;MAEA;AAChB;AACA;AACA;AACA;AACA;AACA;MACgB,SAASyB,UAAU,CAAC0d,OAAO,EAAErb,KAAK,EAAEqC,KAAK,EAAE;QACvC,IAAIA,KAAK,EACL,OAAOA,KAAK;QAChB,IAAIn1B,IAAI,CAACmuC,OAAO,CAAC,IAAIl2C,KAAK,CAACC,CAAC,IAAI8H,IAAI,CAAC8yB,KAAK,CAAC,IAAI76B,KAAK,CAACC,CAAC,EAAE;UACpD,KAAK,IAAIqD,IAAI,IAAI4yC,OAAO,EAAE;YACtB,IAAI5yC,IAAI,KAAK,GAAG,EAAE;cACd,IAAI4yC,OAAO,CAACz1C,OAAO,CAACY,GAAG,CAAC,CAACiC,IAAI,CAAC,IAAIu3B,KAAK,CAACp6B,OAAO,CAACY,GAAG,CAAC,CAACiC,IAAI,CAAC,EAAE;gBACxD,IAAIk1B,UAAU,CAAC0d,OAAO,CAAC5yC,IAAI,CAAC,EAAEu3B,KAAK,CAACv3B,IAAI,CAAC,CAAC,EACtC,OAAO,IAAI;cACnB,CAAC,MACI;gBACD,OAAO,IAAI;cACf;YACJ;UACJ;QACJ,CAAC,MACI;UACD,OAAO4yC,OAAO,KAAKrb,KAAK;QAC5B;QACA,OAAO,KAAK;MAChB;;MAGA;;MAEA;AAChB;AACA;MACgB,SAAS0C,UAAU,GAAG;QAClB,OAAOpyB,SAAS,CAACsB,MAAM,CAAC5H,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,EAAE,CAAC9C,KAAK,CAACyC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MAChF;;MAEA;AAChB;AACA;MACgB,SAAS8Q,QAAQ,CAAC9G,EAAE,EAAE+G,OAAO,EAAE;QAC3B,OAAOyP,eAAe,CAAC1P,QAAQ,CAAC/Q,IAAI,CAACiK,EAAE,EAAE+G,OAAO,CAAC;MACrD;;MAEA;AAChB;AACA;MACgB,SAASQ,WAAW,CAACvH,EAAE,EAAE+G,OAAO,EAAE;QAC9B,OAAOyP,eAAe,CAACjP,WAAW,CAACxR,IAAI,CAACiK,EAAE,EAAE+G,OAAO,CAAC;MACxD;;MAEA;AAChB;AACA;MACgB,SAASwvB,cAAc,CAACv2B,EAAE,EAAE+G,OAAO,EAAE0gC,KAAK,EAAE;QACxC,OAAOA,KAAK,GAAG3gC,QAAQ,CAAC9G,EAAE,EAAE+G,OAAO,CAAC,GAAGQ,WAAW,CAACvH,EAAE,EAAE+G,OAAO,CAAC;MACnE;;MAEA;AAChB;AACA;MACgB,SAAShC,MAAM,CAAC/E,EAAE,EAAE;QAChB,OAAOwW,eAAe,CAACzR,MAAM,CAAChP,IAAI,CAACiK,EAAE,CAAC;MAC1C;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,SAASgnB,SAAS,CAAChnB,EAAE,EAAEL,QAAQ,EAAE;QAC7B,OAAO6W,eAAe,CAAC3N,IAAI,CAAC9S,IAAI,CAACiK,EAAE,EAAEL,QAAQ,CAAC,CAACgJ,EAAE,CAAC,CAAC,CAAC;MACxD;;MAGA;;MAEA;AAChB;AACA;AACA;MACgBqH,KAAK,CAAC03B,KAAK,GAAG,YAAY;QACtBlvB,SAAS,GAAG,IAAI;MACpB,CAAC;;MAED;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACgBxI,KAAK,CAACoE,MAAM,GAAG,UAAUoa,KAAK,EAAE;QAC5B,IAAI9W,UAAU,EACV;QAEJ,IAAIiwB,YAAY;QAChB,IAAIC,YAAY;QAChB,IAAIC,QAAQ,GAAGxuC,IAAI,CAACm1B,KAAK,CAAC,IAAIl9B,KAAK,CAACI,CAAC;QACrC,IAAIo2C,YAAY;QAChB,IAAIC,OAAO;QACX,IAAIC,UAAU;QAEd,IAAIH,QAAQ,EAAE;UACV,IAAIrZ,KAAK,KAAK7U,QAAQ,EAAE;YACpBguB,YAAY,GAAG1b,sBAAsB,EAAE;YACvC2b,YAAY,GAAGnc,4BAA4B,EAAE;YAC7Cqc,YAAY,GAAGH,YAAY,IAAIC,YAAY;YAC3C,IAAIE,YAAY,EAAE;cACd1zB,MAAM,CAAC;gBACHqW,mBAAmB,EAAEmd,YAAY;gBACjClZ,eAAe,EAAEjX,YAAY,GAAGxmB,SAAS,GAAG+sB;cAChD,CAAC,CAAC;YACN;UACJ,CAAC,MACI,IAAIwQ,KAAK,KAAK5U,QAAQ,EAAE;YACzB,IAAIqJ,2BAA2B,EAAE;cAC7B8kB,OAAO,GAAGhlB,6BAA6B,CAACF,qBAAqB,CAAColB,WAAW,EAAE,CAAC;cAC5ED,UAAU,GAAGhlB,gCAAgC,CAACF,wBAAwB,CAACmlB,WAAW,EAAE,CAAC;YACzF,CAAC,MACI;cACDF,OAAO,GAAG/3B,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;YACpC;UACJ,CAAC,MACI,IAAI6U,KAAK,KAAK,MAAM,EAAE;YACvBpa,MAAM,CAAC;cACH2V,gBAAgB,EAAE,IAAI;cACtBU,mBAAmB,EAAE;YACzB,CAAC,CAAC;UACN;QACJ,CAAC,MACI;UACD+D,KAAK,GAAGhW,SAAS,IAAIgW,KAAK;UAC1BhW,SAAS,GAAG,KAAK;UACjB,IAAI,CAACxI,KAAK,CAACoE,MAAM,CAACwF,QAAQ,CAAC,IAAI4U,KAAK,EAChCpa,MAAM,CAAC;YAAEia,MAAM,EAAEG;UAAM,CAAC,CAAC;QACjC;QAEA4K,oBAAoB,EAAE;QAEtB,OAAO0O,YAAY,IAAIC,OAAO,IAAIC,UAAU;MAChD,CAAC;;MAED;AAChB;AACA;AACA;AACA;AACA;MACgBh4B,KAAK,CAAC7R,OAAO,GAAG,UAAUo7B,UAAU,EAAEl6B,KAAK,EAAE;QACzC,IAAI6oC,MAAM,GAAG,CAAC,CAAC;QACf,IAAIC,UAAU;;QAEd;QACA,IAAI1rC,SAAS,CAACkC,aAAa,CAAC46B,UAAU,CAAC,IAAI,CAAC98B,SAAS,CAAC8B,aAAa,CAACg7B,UAAU,CAAC,EAAE;UAC7E,IAAIlgC,IAAI,CAACkgC,UAAU,CAAC,IAAIjoC,KAAK,CAACI,CAAC,EAAE;YAC7B,IAAIsE,SAAS,CAAC9B,MAAM,GAAG,CAAC,EAAE;cACtBkzC,gBAAgB,CAACc,MAAM,EAAE3O,UAAU,EAAEl6B,KAAK,CAAC;cAC3C8oC,UAAU,GAAG7O,UAAU,CAAC4O,MAAM,CAAC;YACnC,CAAC,MAEG,OAAOjB,gBAAgB,CAAClpB,eAAe,EAAEwb,UAAU,CAAC;UAC5D,CAAC,MAEG,OAAOxb,eAAe;QAC9B,CAAC,MACI;UACDoqB,UAAU,GAAG7O,UAAU,CAACC,UAAU,CAAC;QACvC;QAEA,IAAI,CAAC98B,SAAS,CAACkC,aAAa,CAACwpC,UAAU,CAAC,EAAE;UACtC/zB,MAAM,CAAC;YAAEsa,eAAe,EAAEyZ;UAAW,CAAC,CAAC;QAC3C;MACJ,CAAC;;MAED;AAChB;AACA;MACgBn4B,KAAK,CAAC2a,OAAO,GAAG,YAAY;QACxB,IAAIjT,UAAU,EACV;;QAEJ;QACApG,cAAc,CAACvM,MAAM,CAACiL,KAAK,CAAC;;QAE5B;QACA0Z,2BAA2B,EAAE;;QAE7B;QACAvE,mBAAmB,CAACnG,oBAAoB,CAAC;QACzCmG,mBAAmB,CAACpG,wBAAwB,CAAC;;QAE7C;QACA,KAAK,IAAIqpB,OAAO,IAAInqB,WAAW;UAC3BjO,KAAK,CAACq4B,SAAS,CAACD,OAAO,CAAC;QAAC;;QAE7B;QACA,OAAOhlB,cAAc,CAACrxB,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC;UAChCkxB,cAAc,CAACklB,GAAG,EAAE,EAAE;QAAC;;QAE3B;QACA5d,yBAAyB,CAAC,IAAI,CAAC;;QAE/B;QACA,IAAIrL,mBAAmB,EACnBta,MAAM,CAACsa,mBAAmB,CAAC;QAC/B,IAAID,sBAAsB,EACtBra,MAAM,CAACqa,sBAAsB,CAAC;QAClC,IAAIpH,sBAAsB,EACtBjT,MAAM,CAACga,wBAAwB,CAAC;;QAEpC;QACA2c,kBAAkB,CAAC,IAAI,CAAC;QACxB2H,uBAAuB,CAAC,IAAI,CAAC;QAC7B5J,iBAAiB,CAAC,IAAI,CAAC;;QAEvB;QACA,KAAK,IAAIxnC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGusB,iBAAiB,CAACzsB,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE;UACjDwK,SAAS,CAAC+hB,iBAAiB,CAACvsB,CAAC,CAAC,CAAC,CAACgS,GAAG,CAACsa,sBAAsB,EAAE8L,oBAAoB,CAAC;QAAC;QACtF7L,iBAAiB,GAAGvtB,SAAS;QAE7BymB,UAAU,GAAG,IAAI;QACjBc,SAAS,GAAG,IAAI;;QAEhB;QACAtP,SAAS,CAACoN,mBAAmB,EAAE,CAAC,CAAC;QACjCyiB,gBAAgB,CAAC,aAAa,CAAC;;QAE/B;QACA;QACA;QACA;MACJ,CAAC;;MAED;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACgB/oB,KAAK,CAAC2sB,MAAM,GAAG,UAAU4L,WAAW,EAAEtnC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAE;QAC9D,IAAInL,SAAS,CAAC9B,MAAM,KAAK,CAAC,IAAIq0C,WAAW,KAAKt3C,SAAS,EAAE;UACrD,IAAIu3C,KAAK,GAAG9vB,qBAAqB;UACjC,IAAI+vB,KAAK,GAAG9vB,mBAAmB;UAC/B,IAAI+vB,eAAe,GAAGvmB,kBAAkB,IAAI5J,MAAM,IAAI1B,kBAAkB,CAAC5kB,CAAC;UAC1E,IAAI02C,eAAe,GAAGxmB,kBAAkB,IAAI5J,MAAM,IAAI1B,kBAAkB,CAACjlB,CAAC;UAC1E,IAAIg3C,OAAO,GAAGJ,KAAK,CAACjI,cAAc;UAClC,IAAIsI,YAAY,GAAGL,KAAK,CAAC1F,mBAAmB;UAC5C,IAAIgG,UAAU,GAAGN,KAAK,CAACpK,UAAU;UACjCyK,YAAY,GAAGH,eAAe,GAAG,CAAC,GAAGG,YAAY,GAAGA,YAAY;UAChED,OAAO,GAAGF,eAAe,GAAGI,UAAU,GAAGF,OAAO,GAAGA,OAAO;UAC1DA,OAAO,IAAID,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC;UACnCG,UAAU,IAAIH,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC;UAEtC,OAAO;YACHpgC,QAAQ,EAAE;cACNnT,CAAC,EAAEwzC,OAAO;cACVtwC,CAAC,EAAEmwC,KAAK,CAAClI;YACb,CAAC;YACDwI,KAAK,EAAE;cACH3zC,CAAC,EAAEyzC,YAAY;cACfvwC,CAAC,EAAEmwC,KAAK,CAAC3F;YACb,CAAC;YACDngC,GAAG,EAAE;cACDvN,CAAC,EAAE0zC,UAAU;cACbxwC,CAAC,EAAEmwC,KAAK,CAACrK;YACb,CAAC;YACDiC,YAAY,EAAE;cACVjrC,CAAC,EAAEozC,KAAK,CAAClI,aAAa;cACtBhoC,CAAC,EAAEmwC,KAAK,CAACnI;YACb,CAAC;YACDrC,YAAY,EAAE;cACV7oC,CAAC,EAAEozC,KAAK,CAACtK,aAAa;cACtB5lC,CAAC,EAAEmwC,KAAK,CAACvK;YACb,CAAC;YACD8K,iBAAiB,EAAE;cACf5zC,CAAC,EAAEozC,KAAK,CAAC5G,kBAAkB;cAC3BtpC,CAAC,EAAEmwC,KAAK,CAAC7G;YACb,CAAC;YACD7D,WAAW,EAAE;cACT3oC,CAAC,EAAEozC,KAAK,CAACxK,YAAY;cACrB1lC,CAAC,EAAEmwC,KAAK,CAACzK;YACb,CAAC;YACD6E,mBAAmB,EAAE;cACjBztC,CAAC,EAAEozC,KAAK,CAACxF,oBAAoB;cAC7B1qC,CAAC,EAAEmwC,KAAK,CAACzF;YACb,CAAC;YACDhK,KAAK,EAAEzgB,MAAM;YACb0wB,eAAe,EAAE9mB;UACrB,CAAC;QACL;QAEAnS,KAAK,CAACoE,MAAM,CAACwF,QAAQ,CAAC;QAEtB,IAAI5O,YAAY,GAAGmX,kBAAkB;QACrC,IAAI+mB,qBAAqB,GAAG,CAACnvB,KAAK,EAAEV,QAAQ,EAAE,GAAG,CAAC;QAClD,IAAI8vB,qBAAqB,GAAG,CAACnvB,KAAK,EAAEd,OAAO,EAAE,GAAG,CAAC;QACjD,IAAIkwB,oBAAoB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACnD,IAAIC,gBAAgB,GAAGhwC,IAAI,CAAC4H,QAAQ,CAAC,IAAI3P,KAAK,CAACC,CAAC;QAChD,IAAI+3C,gBAAgB,GAAGD,gBAAgB,GAAGpoC,QAAQ,CAACE,QAAQ,GAAGA,QAAQ;QACtE,IAAIlP,CAAC;QACL,IAAIs3C,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI3nC,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI4nC,YAAY;QAChB,IAAIC,WAAW;QACf,IAAIC,gBAAgB;QACpB,IAAIC,MAAM,GAAG,KAAK;QAClB,IAAIC,QAAQ,GAAG,OAAO;QACtB,IAAIC,SAAS,GAAG,QAAQ;QACxB,IAAIC,UAAU,GAAG,SAAS;QAC1B,IAAIC,SAAS,GAAG,QAAQ;QACxB,IAAIC,QAAQ,GAAG,OAAO;QACtB,IAAIC,WAAW,GAAG,UAAU;QAC5B,IAAIC,SAAS,GAAGn4C,OAAO,CAACG,CAAC;QACzB,IAAIi4C,YAAY;QAChB,IAAIC,cAAc;QAClB,IAAIC,aAAa;QACjB,IAAIC,cAAc;QAClB,IAAIC,YAAY;QAChB,IAAIC,4BAA4B,GAAG,CAACzwB,KAAK,EAAEC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;QAC7D,IAAIywB,6BAA6B,GAAG,CAACb,QAAQ,EAAED,MAAM,EAAEE,SAAS,EAAEC,UAAU,CAAC;QAC7E,IAAIY,8BAA8B,GAAG,CAACX,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;QACvE,IAAIU,uBAAuB,GAAGpC,WAAW,CAACx2C,OAAO,CAACY,GAAG,CAAC,CAAC,IAAI,CAAC;QAC5D,IAAIi4C,eAAe,GAAGD,uBAAuB,GAAGpC,WAAW,CAACvoC,EAAE,GAAGuoC,WAAW;QAC5E,IAAIsC,uBAAuB,GAAGD,eAAe,YAAYnuC,SAAS,IAAI9C,MAAM,GAAGixC,eAAe,YAAYjxC,MAAM,GAAG,KAAK;QACxH,IAAImxC,4BAA4B,GAAGD,uBAAuB,GAAG,KAAK,GAAGp0B,aAAa,CAACm0B,eAAe,CAAC;QACnG,IAAIG,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAe;UACnC,IAAIvB,YAAY,EACZ3Q,4BAA4B,CAAC,IAAI,CAAC;UACtC,IAAI4Q,WAAW,EACX5Q,4BAA4B,CAAC,KAAK,CAAC;QAC3C,CAAC;QACD,IAAImS,qBAAqB,GAAG3xC,IAAI,CAACiwC,gBAAgB,CAAC,IAAIh4C,KAAK,CAACE,CAAC,GAAGP,SAAS,GAAG,YAAY;UACpF85C,oBAAoB,EAAE;UACtBzB,gBAAgB,EAAE;QACtB,CAAC;QACD,SAAS2B,wBAAwB,CAACC,SAAS,EAAEC,aAAa,EAAE;UACxD,KAAKl5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk5C,aAAa,CAACjB,SAAS,CAAC,EAAEj4C,CAAC,EAAE,EAAE;YAC3C,IAAIi5C,SAAS,KAAKC,aAAa,CAACl5C,CAAC,CAAC,EAC9B,OAAO,IAAI;UACnB;UACA,OAAO,KAAK;QAChB;QACA,SAASm5C,YAAY,CAACC,GAAG,EAAE9C,WAAW,EAAE;UACpC,IAAI+C,eAAe,GAAGD,GAAG,GAAGnC,qBAAqB,GAAGC,qBAAqB;UACzEZ,WAAW,GAAGlvC,IAAI,CAACkvC,WAAW,CAAC,IAAIj3C,KAAK,CAACI,CAAC,IAAI2H,IAAI,CAACkvC,WAAW,CAAC,IAAIj3C,KAAK,CAACM,CAAC,GAAG,CAAC22C,WAAW,EAAEA,WAAW,CAAC,GAAGA,WAAW;UAErH,IAAIrzC,aAAa,CAACgE,GAAG,CAACqvC,WAAW,CAAC,EAC9B,OAAO8C,GAAG,GAAG9C,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC,CAAC,KAC5C,IAAIlvC,IAAI,CAACkvC,WAAW,CAAC,IAAIj3C,KAAK,CAACC,CAAC,EAAE;YACnC;YACA;YACA,KAAKU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGq5C,eAAe,CAACpB,SAAS,CAAC,EAAEj4C,CAAC,EAAE;cAC3C,IAAIq5C,eAAe,CAACr5C,CAAC,CAAC,IAAIs2C,WAAW,EACjC,OAAOA,WAAW,CAAC+C,eAAe,CAACr5C,CAAC,CAAC,CAAC;YAAC;UACnD;QACJ;QACA,SAASs5C,cAAc,CAACF,GAAG,EAAEG,SAAS,EAAE;UACpC,IAAI3D,QAAQ,GAAGxuC,IAAI,CAACmyC,SAAS,CAAC,IAAIl6C,KAAK,CAACI,CAAC;UACzC,IAAI+5C,QAAQ;UACZ,IAAIC,MAAM;UACV,IAAIC,UAAU,GAAGN,GAAG,GAAG3yB,qBAAqB,GAAGC,mBAAmB;UAClE,IAAIoW,UAAU,GAAG4c,UAAU,CAACpL,cAAc;UAC1C,IAAIiC,SAAS,GAAGmJ,UAAU,CAACvN,UAAU;UACrC,IAAIwN,IAAI,GAAG,KAAK;UAChB,IAAIzkC,UAAU;UACd,IAAI0kC,QAAQ,GAAGtzB,MAAM,IAAI8yB,GAAG;UAC5B,IAAIS,kBAAkB,GAAGD,QAAQ,IAAIh1B,kBAAkB,CAACjlB,CAAC,IAAI,CAACoZ,YAAY;UAC1E,IAAI+gC,UAAU,GAAG,SAAS;UAC1B,IAAIC,QAAQ,GAAGC,IAAI;UACnB,IAAIC,gBAAgB;UACpB,IAAIrE,QAAQ,EAAE;YACV;YACA,IAAI2D,SAAS,CAACtB,SAAS,CAAC,GAAG,CAAC,EAAE;cAC1BgC,gBAAgB,GAAGV,SAAS,CAACnH,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;cACzC,IAAI7lC,OAAO,CAAC0tC,gBAAgB,EAAE9C,oBAAoB,CAAC,GAAG,CAAC,CAAC,EACpDqC,QAAQ,GAAGS,gBAAgB;YACnC;;YAEA;YACAV,SAAS,GAAGC,QAAQ,GAAGD,SAAS,CAACnH,MAAM,CAAC,CAAC,CAAC,GAAGmH,SAAS;YACtDA,SAAS,GAAGA,SAAS,CACpBO,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAAA,CACvBA,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAG;YAAA,CACvBA,UAAU,CAAC,CAAC,MAAM,EAAE,CAACD,kBAAkB,GAAG,GAAG,GAAGlvC,SAAS,IAAIkd,kBAAkB,CAAC,CAAI;YAAA,CACpFiyB,UAAU,CAAC,CAAC,IAAI,EAAE,CAACD,kBAAkB,GAAG,GAAG,GAAGlvC,SAAS,IAAIkd,kBAAkB,CAAC,CAAM;YAAA,CACpFiyB,UAAU,CAAC,CAAC,KAAK,EAAEnvC,SAAS,CAAC,CAC7BmvC,UAAU,CAAC,CAAC,IAAI,EAAEH,IAAI,GAAIpJ,SAAS,IAAIqJ,QAAQ,IAAIh1B,kBAAkB,CAACjlB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAM,CAAC,CAC3Fm6C,UAAU,CAAC,CAAC,KAAK,EAAEH,IAAI,GAAGhzB,aAAa,CAAC1e,CAAC,CAAC,CAC1C6xC,UAAU,CAAC,CAAC,KAAK,EAAEH,IAAI,GAAGhzB,aAAa,CAAC9G,CAAC,CAAC;YAC3C45B,MAAM,GAAG5gB,mBAAmB,CAACkU,KAAK,CAACwM,SAAS,CAAC,GAAG1gB,mBAAmB,CAACkhB,QAAQ,CAACR,SAAS,CAAC,EAAE,IAAI,CAAC,CAACW,OAAO,EAAE,GAAGX,SAAS,CAAC;UACzH,CAAC,MACI;YACDE,MAAM,GAAGF,SAAS;UACtB;UAEA,IAAIE,MAAM,KAAKz6C,SAAS,IAAI,CAAC+tC,KAAK,CAAC0M,MAAM,CAAC,IAAIryC,IAAI,CAACqyC,MAAM,CAAC,IAAIp6C,KAAK,CAACM,CAAC,EAAE;YACnE,IAAIw6C,iBAAiB,GAAGphC,YAAY,IAAI6gC,QAAQ;YAChD,IAAIQ,kBAAkB,GAAGtd,UAAU,IAAIqd,iBAAiB,IAAIv1B,kBAAkB,CAACjlB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1F,IAAI06C,MAAM,GAAGF,iBAAiB,IAAIv1B,kBAAkB,CAAC5kB,CAAC;YACtD,IAAIs6C,MAAM,GAAGH,iBAAiB,IAAIv1B,kBAAkB,CAACjlB,CAAC;YACtDy6C,kBAAkB,GAAGC,MAAM,GAAI9J,SAAS,GAAG6J,kBAAkB,GAAIA,kBAAkB;YACnF,QAAQZ,QAAQ;cACZ,KAAK,IAAI;gBACLtkC,UAAU,GAAGklC,kBAAkB,GAAGX,MAAM;gBACxC;cACJ,KAAK,IAAI;gBACLvkC,UAAU,GAAGklC,kBAAkB,GAAGX,MAAM;gBACxC;cACJ,KAAK,IAAI;gBACLvkC,UAAU,GAAGklC,kBAAkB,GAAGX,MAAM;gBACxC;cACJ,KAAK,IAAI;gBACLvkC,UAAU,GAAGklC,kBAAkB,GAAGX,MAAM;gBACxC;cACJ;gBACIvkC,UAAU,GAAGukC,MAAM;gBACnB;YAAM;YAEdvkC,UAAU,GAAGmlC,MAAM,GAAG9J,SAAS,GAAGr7B,UAAU,GAAGA,UAAU;YACzDA,UAAU,IAAIolC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;YAC7BplC,UAAU,GAAG0kC,QAAQ,IAAIh1B,kBAAkB,CAACjlB,CAAC,GAAG6H,IAAI,CAAC2c,GAAG,CAAC,CAAC,EAAE3c,IAAI,CAACkJ,GAAG,CAAC6/B,SAAS,EAAEr7B,UAAU,CAAC,CAAC,GAAG1N,IAAI,CAACkJ,GAAG,CAAC,CAAC,EAAElJ,IAAI,CAAC2c,GAAG,CAACosB,SAAS,EAAEr7B,UAAU,CAAC,CAAC;UAC/I;UACA,OAAOA,UAAU,KAAK4nB,UAAU,GAAG99B,SAAS,GAAGkW,UAAU;QAC7D;QACA,SAASqlC,eAAe,CAACntC,KAAK,EAAEotC,iBAAiB,EAAEC,YAAY,EAAEvB,aAAa,EAAE;UAC5E,IAAIwB,aAAa,GAAG,CAACD,YAAY,EAAEA,YAAY,CAAC;UAChD,IAAIE,SAAS,GAAGvzC,IAAI,CAACgG,KAAK,CAAC;UAC3B,IAAIwtC,cAAc;UAClB,IAAIC,YAAY;;UAEhB;UACA,IAAIF,SAAS,IAAIH,iBAAiB,EAAE;YAChCptC,KAAK,GAAG,CAACA,KAAK,EAAEA,KAAK,CAAC;UAC1B,CAAC,MACI,IAAIutC,SAAS,IAAIt7C,KAAK,CAACG,CAAC,EAAE;YAC3Bo7C,cAAc,GAAGxtC,KAAK,CAAC6qC,SAAS,CAAC;YACjC,IAAI2C,cAAc,GAAG,CAAC,IAAIA,cAAc,GAAG,CAAC,EACxCxtC,KAAK,GAAGstC,aAAa,CAAC,KACrB;cACD,IAAIE,cAAc,KAAK,CAAC,EACpBxtC,KAAK,CAAC,CAAC,CAAC,GAAGqtC,YAAY;cAC3B,KAAKz6C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG46C,cAAc,EAAE56C,CAAC,EAAE,EAAE;gBACjC66C,YAAY,GAAGztC,KAAK,CAACpN,CAAC,CAAC;gBACvB,IAAIoH,IAAI,CAACyzC,YAAY,CAAC,IAAIL,iBAAiB,IAAI,CAACxB,wBAAwB,CAAC6B,YAAY,EAAE3B,aAAa,CAAC,EAAE;kBACnG9rC,KAAK,GAAGstC,aAAa;kBACrB;gBACJ;cACJ;YACJ;UACJ,CAAC,MACI,IAAIC,SAAS,IAAIt7C,KAAK,CAACC,CAAC,EACzB8N,KAAK,GAAG,CAACA,KAAK,CAAC0a,KAAK,CAAC,IAAI2yB,YAAY,EAAErtC,KAAK,CAAC2a,KAAK,CAAC,IAAI0yB,YAAY,CAAC,CAAC,KAErErtC,KAAK,GAAGstC,aAAa;UACzB,OAAO;YAAEv3C,CAAC,EAAEiK,KAAK,CAAC,CAAC,CAAC;YAAE/G,CAAC,EAAE+G,KAAK,CAAC,CAAC;UAAE,CAAC;QACvC;QACA,SAAS0tC,cAAc,CAACC,6BAA6B,EAAE;UACnD,IAAIr5C,MAAM,GAAG,EAAE;UACf,IAAIu3C,SAAS;UACb,IAAI+B,aAAa;UACjB,IAAIC,eAAe,GAAG,CAACh0B,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,CAAC;UAChE,KAAKpnB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+6C,6BAA6B,CAAC9C,SAAS,CAAC,EAAEj4C,CAAC,EAAE,EAAE;YAC3D,IAAIA,CAAC,KAAKi7C,eAAe,CAAChD,SAAS,CAAC,EAChC;YACJgB,SAAS,GAAG8B,6BAA6B,CAAC/6C,CAAC,CAAC;YAC5Cg7C,aAAa,GAAG5zC,IAAI,CAAC6xC,SAAS,CAAC;YAC/B,IAAI+B,aAAa,IAAI37C,KAAK,CAACK,CAAC,EACxBgC,MAAM,CAACkO,IAAI,CAACqpC,SAAS,GAAGpgB,mBAAmB,CAACyf,YAAY,CAACzoC,GAAG,CAACiX,eAAe,GAAGm0B,eAAe,CAACj7C,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAEzG0B,MAAM,CAACkO,IAAI,CAACorC,aAAa,IAAI37C,KAAK,CAACM,CAAC,GAAGs5C,SAAS,GAAG,CAAC,CAAC;UAC7D;UACA,OAAOv3C,MAAM;QACjB;QAEA,IAAIk3C,uBAAuB,IAAIC,4BAA4B,EAAE;UACzD;UACA,IAAI1Y,MAAM,GAAGuY,uBAAuB,GAAGpC,WAAW,CAACnW,MAAM,GAAG,CAAC;UAC7D,IAAI+a,IAAI,GAAGxC,uBAAuB,GAAGpC,WAAW,CAAC4E,IAAI,GAAG,CAAC;UACzD,IAAIxQ,MAAM,GAAGgO,uBAAuB,GAAGpC,WAAW,CAAC5L,MAAM,GAAG,CAAC;UAC7D,IAAIyQ,KAAK,GAAGzC,uBAAuB,GAAGpC,WAAW,CAAC6E,KAAK,GAAG,CAAC;UAC3D,IAAIC,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAChC,IAAIC,UAAU,GAAGj0C,IAAI,CAAC+4B,MAAM,CAAC;UAC7B,IAAImb,YAAY;UAChBhD,YAAY,GAAGM,uBAAuB,GAAGD,eAAe,GAAGnuC,SAAS,CAACmuC,eAAe,CAAC;UAErF,IAAIL,YAAY,CAACL,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7B;YACA,IAAIoD,UAAU,IAAIh8C,KAAK,CAACM,CAAC,IAAI07C,UAAU,IAAIh8C,KAAK,CAACK,CAAC,EAC9CygC,MAAM,GAAG2a,cAAc,CAAC,CAAC3a,MAAM,EAAEA,MAAM,EAAEA,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,KACzD,IAAIkb,UAAU,IAAIh8C,KAAK,CAACG,CAAC,EAAE;cAC5B87C,YAAY,GAAGnb,MAAM,CAAC8X,SAAS,CAAC;cAChC,IAAIqD,YAAY,KAAK,CAAC,EAClBnb,MAAM,GAAG2a,cAAc,CAAC,CAAC3a,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KACrE,IAAImb,YAAY,IAAI,CAAC,EACtBnb,MAAM,GAAG2a,cAAc,CAAC3a,MAAM,CAAC,CAAC,KAEhCA,MAAM,GAAGib,aAAa;YAC9B,CAAC,MACI,IAAIC,UAAU,IAAIh8C,KAAK,CAACC,CAAC,EAC1B6gC,MAAM,GAAG2a,cAAc,CAAC,CAAC3a,MAAM,CAAClZ,OAAO,CAAC,EAAEkZ,MAAM,CAACjZ,SAAS,CAAC,EAAEiZ,MAAM,CAAChZ,UAAU,CAAC,EAAEgZ,MAAM,CAAC/Y,QAAQ,CAAC,CAAC,CAAC,CAAC,KAEpG+Y,MAAM,GAAGib,aAAa;;YAE1B;YACAlD,YAAY,GAAGc,wBAAwB,CAACkC,IAAI,EAAE3C,4BAA4B,CAAC,GAAG2C,IAAI,GAAG,IAAI;YACzF/C,cAAc,GAAGoC,eAAe,CAAC7P,MAAM,EAAErrC,KAAK,CAACI,CAAC,EAAEq4C,SAAS,EAAEW,8BAA8B,CAAC;YAC5FL,aAAa,GAAGmC,eAAe,CAACY,KAAK,EAAE97C,KAAK,CAACI,CAAC,EAAEk4C,QAAQ,EAAEa,6BAA6B,CAAC;YACxFH,cAAc,GAAGlY,MAAM;YAEvB,IAAIob,cAAc,GAAG;cACjBt7C,CAAC,EAAEwmB,qBAAqB,CAAC6nB,cAAc;cACvCnmC,CAAC,EAAEue,mBAAmB,CAAC4nB;YAC3B,CAAC;YACD;YACA,IAAIkN,cAAc,GAAGxuB,eAAe,CAAChX,MAAM,EAAE;;YAE7C;YACA,IAAIylC,aAAa,GAAGnD,YAAY,CAACtiC,MAAM,EAAE;YACzC,IAAI0lC,WAAW,GAAG;cACdv4C,CAAC,EAAEg1C,cAAc,CAACh1C,CAAC,IAAI40C,QAAQ,IAAIG,YAAY,IAAInwB,KAAK;cACxD1hB,CAAC,EAAE8xC,cAAc,CAAC9xC,CAAC,IAAI0xC,QAAQ,IAAIG,YAAY,IAAIpwB;YACvD,CAAC;YACD2zB,aAAa,CAACx0B,OAAO,CAAC,IAAIoxB,cAAc,CAAC,CAAC,CAAC;YAC3CoD,aAAa,CAACr0B,QAAQ,CAAC,IAAIixB,cAAc,CAAC,CAAC,CAAC;YAC5C,IAAIsD,wBAAwB,GAAG;cAC3Bx4C,CAAC,EAAEqE,IAAI,CAAC6Z,KAAK,CAACo6B,aAAa,CAACr0B,QAAQ,CAAC,GAAGo0B,cAAc,CAACp0B,QAAQ,CAAC,GAAGm0B,cAAc,CAACt7C,CAAC,CAAC;cACpFoG,CAAC,EAAEmB,IAAI,CAAC6Z,KAAK,CAACo6B,aAAa,CAACx0B,OAAO,CAAC,GAAGu0B,cAAc,CAACv0B,OAAO,CAAC,GAAGs0B,cAAc,CAACpzC,CAAC;YACrF,CAAC;YACD,IAAIme,MAAM,EAAE;cACR,IAAI,CAAC1B,kBAAkB,CAACjlB,CAAC,IAAI,CAACilB,kBAAkB,CAAC5kB,CAAC,EAC9C27C,wBAAwB,CAACx4C,CAAC,GAAGqE,IAAI,CAAC6Z,KAAK,CAACm6B,cAAc,CAACp0B,QAAQ,CAAC,GAAGq0B,aAAa,CAACr0B,QAAQ,CAAC,GAAGm0B,cAAc,CAACt7C,CAAC,CAAC;cAClH,IAAI2kB,kBAAkB,CAACjlB,CAAC,IAAIoZ,YAAY,EACpC4iC,wBAAwB,CAACx4C,CAAC,IAAI,CAAC,CAAC;cACpC,IAAIyhB,kBAAkB,CAAC5kB,CAAC,IAAI+Y,YAAY,EACpC4iC,wBAAwB,CAACx4C,CAAC,GAAGqE,IAAI,CAAC6Z,KAAK,CAACm6B,cAAc,CAACp0B,QAAQ,CAAC,GAAGq0B,aAAa,CAACr0B,QAAQ,CAAC,IAAIX,qBAAqB,CAAC0lB,UAAU,GAAGoP,cAAc,CAACt7C,CAAC,CAAC,CAAC;YAC3J;;YAEA;YACA,IAAIm4C,aAAa,CAACj1C,CAAC,IAAIw0C,QAAQ,IAAIS,aAAa,CAAC/xC,CAAC,IAAIsxC,QAAQ,IAAIQ,cAAc,CAACh1C,CAAC,IAAI60C,WAAW,IAAIG,cAAc,CAAC9xC,CAAC,IAAI2xC,WAAW,IAAI1xB,MAAM,EAAE;cAC5I,IAAIs1B,YAAY,GAAGtD,YAAY,CAAC,CAAC,CAAC;cAClC,IAAIuD,cAAc,GAAG12B,iBAAiB,GAAGy2B,YAAY,CAAC97C,OAAO,CAACa,GAAG,CAAC,EAAE,GAAG;gBACnEi7B,KAAK,EAAEggB,YAAY,CAAC97C,OAAO,CAACS,EAAE,CAAC;gBAC/Bu7B,MAAM,EAAE8f,YAAY,CAAC97C,OAAO,CAACM,EAAE;cACnC,CAAC;cACD,IAAI07C,WAAW,GAAG;gBACd7zC,CAAC,EAAE4zC,cAAc,CAACt0B,SAAS,CAAC,GAAG8wB,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,CAAC,CAAC;gBACpEx4B,CAAC,EAAEg8B,cAAc,CAACr0B,UAAU,CAAC,GAAG6wB,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,CAAC;cACxE,CAAC;cACD,IAAI0D,aAAa,GAAG,SAAhBA,aAAa,CAAa3C,GAAG,EAAE;gBAC/B,IAAI4C,IAAI,GAAGha,gBAAgB,CAACoX,GAAG,CAAC;gBAChC,IAAInX,EAAE,GAAG+Z,IAAI,CAAC9Z,IAAI;gBAClB,IAAI+Z,EAAE,GAAGD,IAAI,CAACzO,SAAS;gBACvB,IAAI9J,EAAE,GAAGuY,IAAI,CAACxY,IAAI;gBAClB,IAAI0Y,UAAU,GAAG9D,aAAa,CAAC3U,EAAE,CAAC,KAAK2V,GAAG,GAAG9yB,MAAM,GAAGqxB,QAAQ,GAAGD,MAAM,GAAGA,MAAM,CAAC;gBACjF,IAAIyE,aAAa,GAAG/D,aAAa,CAAC3U,EAAE,CAAC,IAAImU,SAAS;gBAClD,IAAIwE,cAAc,GAAGhE,aAAa,CAAC3U,EAAE,CAAC,IAAIoU,UAAU;gBACpD,IAAIwE,WAAW,GAAGlE,cAAc,CAAC1U,EAAE,CAAC,IAAIsU,QAAQ;gBAChD,IAAIuE,cAAc,GAAGnE,cAAc,CAAC1U,EAAE,CAAC,IAAIuU,WAAW;gBACtD,IAAIuE,MAAM,GAAG51B,aAAa,CAACsb,EAAE,CAAC;gBAC9B,IAAIua,QAAQ,GAAGhB,cAAc,CAACS,EAAE,CAAC;gBACjC,IAAIQ,MAAM,GAAGX,WAAW,CAAC7Z,EAAE,CAAC;gBAC5B,IAAIya,QAAQ,GAAGjB,aAAa,CAACQ,EAAE,CAAC;gBAChC,IAAIU,MAAM,GAAGR,aAAa,GAAG,CAAC,GAAG,CAAC;gBAClC,IAAIS,mBAAmB,GAAGF,QAAQ,GAAID,MAAM,GAAG,CAAE;gBACjD,IAAII,oBAAoB,GAAGL,QAAQ,GAAID,MAAM,GAAG,CAAE;gBAClD,IAAIO,QAAQ,GACRL,MAAM,IAAIF,MAAM,IACbG,QAAQ,IAAIF,QAAQ,IACpBE,QAAQ,GAAGD,MAAM,IAAID,QAAQ,GAAGD,MAAM;gBAE7C,IAAIF,WAAW,EACXX,WAAW,CAACjY,EAAE,CAAC,GAAG,IAAI,CAAC,KACtB,IAAI,CAACiY,WAAW,CAACjY,EAAE,CAAC,EAAE;kBACvB,IAAI2Y,cAAc,IAAIE,cAAc,EAAE;oBAClCZ,WAAW,CAACjY,EAAE,CAAC,GAAG6Y,cAAc,GAAGQ,QAAQ,GAAG,KAAK;oBACnDZ,UAAU,GAAGO,MAAM,GAAGF,MAAM,GAAGK,mBAAmB,GAAGC,oBAAoB,GAAGD,mBAAmB,GAAGC,oBAAoB;kBAC1H;kBACAlB,wBAAwB,CAAClY,EAAE,CAAC,IAAIyY,UAAU,IAAIC,aAAa,GAAG,CAAEI,MAAM,GAAGI,MAAM,GAAKF,MAAM,GAAGE,MAAO,KAAKvD,GAAG,IAAI9yB,MAAM,IAAIvN,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;gBACxJ;cACJ,CAAC;cACDgjC,aAAa,CAAC,IAAI,CAAC;cACnBA,aAAa,CAAC,KAAK,CAAC;YACxB;YAEA,IAAIL,WAAW,CAACr1C,CAAC,EACb,OAAOs1C,wBAAwB,CAACt1C,CAAC;YACrC,IAAIq1C,WAAW,CAACv4C,CAAC,EACb,OAAOw4C,wBAAwB,CAACx4C,CAAC;YAErCmzC,WAAW,GAAGqF,wBAAwB;UAC1C;QACJ;QAEArE,WAAW,CAAC1sC,cAAc,CAAC,GAAG0uC,cAAc,CAAC,IAAI,EAAEH,YAAY,CAAC,IAAI,EAAE7C,WAAW,CAAC,CAAC;QACnFgB,WAAW,CAACzsC,aAAa,CAAC,GAAGyuC,cAAc,CAAC,KAAK,EAAEH,YAAY,CAAC,KAAK,EAAE7C,WAAW,CAAC,CAAC;QACpFiB,YAAY,GAAGD,WAAW,CAAC1sC,cAAc,CAAC,KAAK5L,SAAS;QACxDw4C,WAAW,GAAGF,WAAW,CAACzsC,aAAa,CAAC,KAAK7L,SAAS;QAEtD,IAAI,CAACu4C,YAAY,IAAIC,WAAW,MAAMxoC,QAAQ,GAAG,CAAC,IAAIooC,gBAAgB,CAAC,EAAE;UACrE,IAAIA,gBAAgB,EAAE;YAClBpoC,QAAQ,CAACE,QAAQ,GAAG6pC,qBAAqB;YACzC9rB,gBAAgB,CAACne,OAAO,CAACwoC,WAAW,EAAEtoC,QAAQ,CAAC;UACnD,CAAC,MACI;YACDyoC,gBAAgB,GAAG;cACfzoC,QAAQ,EAAEA,QAAQ;cAClBE,QAAQ,EAAE6pC;YACd,CAAC;YACD,IAAI91C,aAAa,CAACgE,GAAG,CAACgI,MAAM,CAAC,IAAIzE,SAAS,CAAC8B,aAAa,CAAC2C,MAAM,CAAC,EAAE;cAC9DU,aAAa,CAAC/E,cAAc,CAAC,GAAGqE,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC9L,CAAC;cACrDwM,aAAa,CAAC9E,aAAa,CAAC,GAAGoE,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC5I,CAAC;cACpDoxC,gBAAgB,CAAC9nC,aAAa,GAAGA,aAAa;YAClD,CAAC,MACI;cACD8nC,gBAAgB,CAACxoC,MAAM,GAAGA,MAAM;YACpC;YACAge,gBAAgB,CAACne,OAAO,CAACwoC,WAAW,EAAEG,gBAAgB,CAAC;UAC3D;QACJ,CAAC,MACI;UACD,IAAIF,YAAY,EACZtqB,gBAAgB,CAACriB,cAAc,CAAC,CAAC0sC,WAAW,CAAC1sC,cAAc,CAAC,CAAC;UACjE,IAAI4sC,WAAW,EACXvqB,gBAAgB,CAACpiB,aAAa,CAAC,CAACysC,WAAW,CAACzsC,aAAa,CAAC,CAAC;UAC/DiuC,oBAAoB,EAAE;QAC1B;MACJ,CAAC;;MAED;AAChB;AACA;AACA;MACgB/6B,KAAK,CAAC0uB,UAAU,GAAG,UAAUsQ,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;QACjDhwB,gBAAgB,CAACxc,IAAI,CAACssC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC;QAC7C,OAAOl/B,KAAK;MAChB,CAAC;;MAED;AAChB;AACA;AACA;AACA;MACgBA,KAAK,CAACm/B,WAAW,GAAG,UAAUC,WAAW,EAAE;QACvC,IAAI91C,GAAG,GAAG;UACNvB,MAAM,EAAEioB,oBAAoB;UAC5BqvB,IAAI,EAAEpvB,kBAAkB;UACxB8Q,OAAO,EAAE3Q,qBAAqB;UAC9BkvB,QAAQ,EAAEjvB,sBAAsB;UAChCwmB,OAAO,EAAEvmB,qBAAqB;UAC9BivB,mBAAmB,EAAE;YACjBzT,SAAS,EAAEtc,2BAA2B,CAAC,CAAC,CAAC;YACzCuc,KAAK,EAAEtc,gCAAgC,CAAC,CAAC,CAAC;YAC1Cuc,MAAM,EAAEtc,iCAAiC,CAAC,CAAC;UAC/C,CAAC;UACD8vB,iBAAiB,EAAE;YACf1T,SAAS,EAAEnc,yBAAyB,CAAC,CAAC,CAAC;YACvCoc,KAAK,EAAEnc,8BAA8B,CAAC,CAAC,CAAC;YACxCoc,MAAM,EAAEnc,+BAA+B,CAAC,CAAC;UAC7C,CAAC;UACD4vB,eAAe,EAAElwB,uBAAuB,CAAC,CAAC;QAC9C,CAAC;QACD,OAAOlmB,IAAI,CAAC+1C,WAAW,CAAC,IAAI99C,KAAK,CAACI,CAAC,GAAGu1C,gBAAgB,CAAC3tC,GAAG,EAAE81C,WAAW,CAAC,GAAG91C,GAAG;MAClF,CAAC;;MAED;AAChB;AACA;AACA;AACA;MACgB0W,KAAK,CAAC0/B,QAAQ,GAAG,UAAUC,aAAa,EAAE;QACtC,SAASC,OAAO,CAACt2C,GAAG,EAAE;UAClB,IAAI,CAACmD,SAAS,CAAC8B,aAAa,CAACjF,GAAG,CAAC,EAC7B,OAAOA,GAAG;UACd,IAAIu2C,QAAQ,GAAGhhB,UAAU,CAAC,CAAC,CAAC,EAAEv1B,GAAG,CAAC;UAClC,IAAIw2C,kBAAkB,GAAG,SAArBA,kBAAkB,CAAavuC,IAAI,EAAEC,EAAE,EAAE;YACzC,IAAIquC,QAAQ,CAAC99C,OAAO,CAACY,GAAG,CAAC,CAAC4O,IAAI,CAAC,EAAE;cAC7BsuC,QAAQ,CAACruC,EAAE,CAAC,GAAGquC,QAAQ,CAACtuC,IAAI,CAAC;cAC7B,OAAOsuC,QAAQ,CAACtuC,IAAI,CAAC;YACzB;UACJ,CAAC;UACDuuC,kBAAkB,CAAC,GAAG,EAAEt2B,SAAS,CAAC,CAAC,CAAC;UACpCs2B,kBAAkB,CAAC,GAAG,EAAEr2B,UAAU,CAAC,CAAC,CAAC;UACrC,OAAOo2B,QAAQ,CAAC79C,CAAC,CAAC,CAAC;UACnB,OAAO69C,QAAQ;QACnB;QAAC;QACD,IAAIv2C,GAAG,GAAG;UACNy2C,SAAS,EAAE,CAAC,CAACH,OAAO,CAACl4B,UAAU,CAAC;UAChCs4B,QAAQ,EAAE,CAAC,CAACJ,OAAO,CAACp3B,SAAS,CAAC;UAC9BtN,UAAU,EAAE0kC,OAAO,CAAC,CAAC3sB,2BAA2B,CAAC;UACjDyO,SAAS,EAAEke,OAAO,CAAChvB,eAAe,CAAC;UACnCiR,UAAU,EAAE+d,OAAO,CAAC/uB,gBAAgB,CAAC;UACrCkQ,OAAO,EAAE6e,OAAO,CAAC7uB,gBAAgB,CAAC;UAClCkU,cAAc,EAAE2a,OAAO,CAACpuB,oBAAoB,CAAC;UAC7C2T,YAAY,EAAEya,OAAO,CAACjvB,kBAAkB,CAAC;UACzCuU,WAAW,EAAE0a,OAAO,CAAClvB,iBAAiB,CAAC;UACvCiU,iBAAiB,EAAEib,OAAO,CAACpvB,uBAAuB,CAAC;UACnDkU,YAAY,EAAEkb,OAAO,CAACh3B,aAAa,CAAC;UACpCiR,QAAQ,EAAE+lB,OAAO,CAACrvB,cAAc,CAAC;UACjC0vB,aAAa,EAAEL,OAAO,CAAC/3B,cAAc;QACzC,CAAC;QACD,OAAOxe,IAAI,CAACs2C,aAAa,CAAC,IAAIr+C,KAAK,CAACI,CAAC,GAAGu1C,gBAAgB,CAAC3tC,GAAG,EAAEq2C,aAAa,CAAC,GAAGr2C,GAAG;MACtF,CAAC;;MAED;AAChB;AACA;AACA;AACA;MACgB0W,KAAK,CAACo0B,GAAG,GAAG,UAAUgE,OAAO,EAAE;QAC3B,IAAIz0C,MAAM;QACV,IAAIu8C,cAAc,GAAGhyB,yBAAyB,CAACxpB,KAAK,CAAC,GAAG,CAAC;QACzD,IAAIzC,CAAC,GAAG,CAAC;QACT,IAAIoH,IAAI,CAAC+uC,OAAO,CAAC,IAAI92C,KAAK,CAACI,CAAC,EAAE;UAC1B,IAAIusB,WAAW,CAAClsB,OAAO,CAACY,GAAG,CAAC,CAACy1C,OAAO,CAAC,EAAE;YACnCz0C,MAAM,GAAGk7B,UAAU,CAAC,CAAC,CAAC,EAAE5Q,WAAW,CAACmqB,OAAO,CAAC,CAAC;YAC7C,OAAOn2C,CAAC,GAAGi+C,cAAc,CAACh8C,MAAM,EAAEjC,CAAC,EAAE;cACjC,OAAO0B,MAAM,CAACu8C,cAAc,CAACj+C,CAAC,CAAC,CAAC;YAAC;UACzC;QACJ,CAAC,MACI;UACD0B,MAAM,GAAG,CAAC,CAAC;UACX,KAAK1B,CAAC,IAAIgsB,WAAW;YACjBtqB,MAAM,CAAC1B,CAAC,CAAC,GAAG48B,UAAU,CAAC,CAAC,CAAC,EAAE7e,KAAK,CAACo0B,GAAG,CAACnyC,CAAC,CAAC,CAAC;UAAC;QACjD;QACA,OAAO0B,MAAM;MACjB,CAAC;;MAED;AAChB;AACA;AACA;AACA;AACA;MACgBqc,KAAK,CAACmgC,MAAM,GAAG,UAAU/H,OAAO,EAAEgI,gBAAgB,EAAE;QAChD,IAAIC,sBAAsB,GAAG7mC,OAAO,CAAC8mC,SAAS,CAAClI,OAAO,CAAC;QACvD,IAAI/+B,QAAQ;QACZ,IAAIknC,aAAa;QACjB,IAAIC,gBAAgB;QACpB,IAAIC,cAAc;QAClB,IAAIC,iBAAiB,GAAG,IAAI;QAC5B,IAAIL,sBAAsB,EAAE;UACxB,IAAI,CAACpyB,WAAW,CAAClsB,OAAO,CAACY,GAAG,CAAC,CAACy1C,OAAO,CAAC,EAAE;YACpC/+B,QAAQ,GAAGgnC,sBAAsB,CAACM,gBAAgB,CAAC56C,IAAI,CAACia,KAAK,EACzD6e,UAAU,CAAC,CAAC,CAAC,EAAEwhB,sBAAsB,CAACtgC,cAAc,CAAC,EACrDtT,SAAS,EACTvH,aAAa,CAAC;YAElB,IAAImU,QAAQ,EAAE;cACVmnC,gBAAgB,GAAGnnC,QAAQ,CAACunC,QAAQ;cACpC,IAAIv3C,IAAI,CAACm3C,gBAAgB,CAAC,IAAIl/C,KAAK,CAACE,CAAC,EAAE;gBACnCi/C,cAAc,GAAGD,gBAAgB,CAACp/C,MAAM,CAAC;gBACzCs/C,iBAAiB,GAAGr3C,IAAI,CAACo3C,cAAc,CAAC,IAAIn/C,KAAK,CAACK,CAAC,GAAG8+C,cAAc,GAAGC,iBAAiB;cAC5F;cACA,IAAIA,iBAAiB,EAAE;gBACnBzyB,WAAW,CAACmqB,OAAO,CAAC,GAAG/+B,QAAQ;gBAC/BknC,aAAa,GAAGlnC,QAAQ,CAACwnC,KAAK;gBAC9B,IAAIx3C,IAAI,CAACk3C,aAAa,CAAC,IAAIj/C,KAAK,CAACE,CAAC,EAC9B++C,aAAa,CAACH,gBAAgB,CAAC;gBAEnC,OAAOpgC,KAAK,CAACo0B,GAAG,CAACgE,OAAO,CAAC;cAC7B;YACJ;UACJ,CAAC,MAEG,OAAOp4B,KAAK,CAACo0B,GAAG,CAACgE,OAAO,CAAC;QACjC,CAAC,MAEG94B,OAAO,CAACC,IAAI,CAAC,8BAA8B,GAAG64B,OAAO,GAAG,sBAAsB,CAAC;MACvF,CAAC;;MAED;AAChB;AACA;AACA;AACA;MACgBp4B,KAAK,CAACq4B,SAAS,GAAG,UAAUD,OAAO,EAAE;QACjC,IAAI/+B,QAAQ,GAAG4U,WAAW,CAACmqB,OAAO,CAAC;QACnC,IAAI0I,eAAe;QACnB,IAAIznC,QAAQ,EAAE;UACV,OAAO4U,WAAW,CAACmqB,OAAO,CAAC;UAE3B0I,eAAe,GAAGznC,QAAQ,CAAC0nC,OAAO;UAClC,IAAI13C,IAAI,CAACy3C,eAAe,CAAC,IAAIx/C,KAAK,CAACE,CAAC,EAChCs/C,eAAe,EAAE;UAErB,OAAO,IAAI;QACf;QACA,OAAO,KAAK;MAChB,CAAC;;MAED;AAChB;AACA;AACA;AACA;AACA;AACA;MACgB,SAASE,SAAS,CAAC5rB,aAAa,EAAEjnB,OAAO,EAAEoY,UAAU,EAAE;QACnDuH,eAAe,GAAG9I,OAAO,CAACjF,cAAc;QACxCiH,uBAAuB,GAAGhC,OAAO,CAACxD,sBAAsB;QACxD0F,oBAAoB,GAAG2X,UAAU,CAAC,CAAC,CAAC,EAAE7Z,OAAO,CAACxE,mBAAmB,CAAC;QAClEmG,0BAA0B,GAAGkY,UAAU,CAAC,CAAC,CAAC,EAAE7Z,OAAO,CAACtE,yBAAyB,CAAC;QAC9EkG,0BAA0B,GAAGiY,UAAU,CAAC,CAAC,CAAC,EAAE7Z,OAAO,CAACtD,yBAAyB,CAAC;QAC9EmF,kBAAkB,GAAGgY,UAAU,CAAC,CAAC,CAAC,EAAE7Z,OAAO,CAAChD,iBAAiB,CAAC;;QAE9D;QACAsnB,UAAU,CAACzK,UAAU,CAAC,CAAC,CAAC,EAAE/Q,eAAe,EAAE3f,OAAO,CAAC,CAAC;QAEpD8Y,QAAQ,GAAGjC,OAAO,CAACrD,OAAO;QAC1BoF,YAAY,GAAG/B,OAAO,CAACrE,IAAI;QAC3BmG,sBAAsB,GAAG9B,OAAO,CAACzD,qBAAqB;QACtD4F,kBAAkB,GAAGnC,OAAO,CAAC3C,iBAAiB;QAC9C+E,iBAAiB,GAAGpC,OAAO,CAAC5C,gBAAgB;QAC5CiF,qBAAqB,GAAGrC,OAAO,CAAC1C,oBAAoB;QACpDgF,sBAAsB,GAAGtC,OAAO,CAACtC,qBAAqB;QACtD6E,wBAAwB,GAAGvC,OAAO,CAACrC,uBAAuB;QAC1D6E,oBAAoB,GAAGxC,OAAO,CAACpD,mBAAmB;QAClD8M,gBAAgB,GAAGjiB,SAAS,CAAC2oB,aAAa,CAACltB,aAAa,CAAC;QACzD6nB,sBAAsB,GAAGrB,gBAAgB,CAAC,CAAC,CAAC;QAC5CD,cAAc,GAAGhiB,SAAS,CAACsjB,sBAAsB,CAACqH,WAAW,IAAIrH,sBAAsB,CAAC6lB,YAAY,CAAC;QACrG9lB,oBAAoB,GAAGrB,cAAc,CAAC,CAAC,CAAC;QACxCE,YAAY,GAAGqI,SAAS,CAACtI,gBAAgB,EAAE,MAAM,CAAC;QAClDE,YAAY,GAAGoI,SAAS,CAACrI,YAAY,EAAE,MAAM,CAAC;QAC9CE,cAAc,GAAGpiB,SAAS,CAAC2oB,aAAa,CAAC;QACzCpF,oBAAoB,GAAGnB,cAAc,CAAC,CAAC,CAAC;QACxClH,WAAW,GAAGkH,cAAc,CAAC9V,EAAE,CAAC,UAAU,CAAC;QAC3C6O,OAAO,GAAGiH,cAAc,CAAC9V,EAAE,CAAC,MAAM,CAAC;QACnC8O,cAAc,GAAGkI,sBAAsB,KAAK/uB,QAAQ;;QAEpD;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACoB8mB,UAAU,GAAGH,WAAW,GAClBkH,cAAc,CAACrY,QAAQ,CAACqV,yBAAyB,CAAC,IAAIgD,cAAc,CAAC1Z,MAAM,EAAE,CAACqB,QAAQ,CAAC2V,wBAAwB,CAAC,GAChH0C,cAAc,CAACrY,QAAQ,CAACyU,qBAAqB,CAAC,IAAI4D,cAAc,CAACrb,QAAQ,CAACyW,OAAO,GAAG8B,wBAAwB,CAAC,CAAChqB,OAAO,CAACG,CAAC,CAAC;QAE9H,IAAI++C,cAAc;QAClB,IAAIC,2BAA0B;;QAE9B;QACA,IAAIv6B,0BAA0B,CAACvhB,CAAC,IAAIuhB,0BAA0B,CAACre,CAAC,IAAI,CAAC0lB,uBAAuB,CAAC3S,wBAAwB,CAACE,UAAU,EAAE;UAC9HkM,YAAY,GAAG,IAAI,CAAC,CAAC;UACrBshB,gBAAgB,CAAC,2BAA2B,CAAC;UAC7C,IAAIjhB,UAAU,EAAE;YACZ2hB,iBAAiB,CAAC,IAAI,CAAC;YACvBiC,kBAAkB,CAAC,IAAI,CAAC;YACxB2H,uBAAuB,CAAC,IAAI,CAAC;UACjC;UAEA5rB,YAAY,GAAG,KAAK;UACpBC,UAAU,GAAG,IAAI;UACjBc,SAAS,GAAG,IAAI;UAEhB,OAAOxI,KAAK;QAChB;QAEA,IAAI4H,OAAO,EAAE;UACTq5B,cAAc,GAAG,CAAC,CAAC;UACnBA,cAAc,CAAC/+C,CAAC,GAAGuH,IAAI,CAACkJ,GAAG,CAACkc,cAAc,CAAChiB,cAAc,CAAC,EAAE,EAAE8hB,YAAY,CAAC9hB,cAAc,CAAC,EAAE,EAAE4hB,cAAc,CAAC5hB,cAAc,CAAC,EAAE,CAAC;UAC/Ho0C,cAAc,CAAC72C,CAAC,GAAGX,IAAI,CAACkJ,GAAG,CAACkc,cAAc,CAAC/hB,aAAa,CAAC,EAAE,EAAE6hB,YAAY,CAAC7hB,aAAa,CAAC,EAAE,EAAE2hB,cAAc,CAAC3hB,aAAa,CAAC,EAAE,CAAC;UAE5Ho0C,2BAA0B,GAAG,sCAAY;YACrChyB,gBAAgB,CAACnX,UAAU,CAAChW,OAAO,CAACK,EAAE,CAAC;YACvC+xB,4BAA4B,CAACjF,gBAAgB,EAAE7E,uBAAuB,EAAE62B,2BAA0B,EAAE,IAAI,EAAE,IAAI,CAAC;UACnH,CAAC;QACL;;QAEA;QACAzX,iBAAiB,EAAE;QACnBiC,kBAAkB,EAAE;QACpB2H,uBAAuB,EAAE;;QAEzB;QACAhJ,oBAAoB,EAAE;QACtBkC,oBAAoB,CAAC,IAAI,CAAC;QAC1BA,oBAAoB,CAAC,KAAK,CAAC;QAC3B+G,0BAA0B,EAAE;;QAE5B;QACA7b,uBAAuB,EAAE;;QAEzB;QACAtC,mBAAmB,CAACnG,oBAAoB,EAAE2K,aAAa,CAAC;QAExD,IAAI/R,OAAO,EAAE;UACT;UACAsH,gBAAgB,CAACriB,cAAc,CAAC,CAACo0C,cAAc,CAAC/+C,CAAC,CAAC,CAAC4K,aAAa,CAAC,CAACm0C,cAAc,CAAC72C,CAAC,CAAC;;UAEnF;UACA,IAAIpJ,QAAQ,CAACmgD,aAAa,IAAI/rB,aAAa,IAAI/E,sBAAsB,CAAC+wB,KAAK,EAAE;YACzE;YACAlyB,gBAAgB,CAACvX,IAAI,CAAC5V,OAAO,CAACK,EAAE,EAAE,IAAI,CAAC;YACvCiuB,sBAAsB,CAAC+wB,KAAK,EAAE;;YAE9B;AAC5B;AACA;AACA;YAC4BjtB,4BAA4B,CAACjF,gBAAgB,EAAE7E,uBAAuB,EAAE62B,2BAA0B,EAAE,KAAK,EAAE,IAAI,CAAC;UACpH;QACJ;;QAEA;QACAlhC,KAAK,CAACoE,MAAM,CAACuF,QAAQ,CAAC;;QAEtB;QACAlC,YAAY,GAAG,IAAI;QACnBshB,gBAAgB,CAAC,eAAe,CAAC;;QAEjC;QACA95B,IAAI,CAAC2e,oBAAoB,EAAE,UAAUjd,KAAK,EAAEtB,KAAK,EAAE;UAAE05B,gBAAgB,CAAC15B,KAAK,CAACzN,CAAC,EAAEyN,KAAK,CAAC5N,CAAC,CAAC;QAAE,CAAC,CAAC;QAC3FmsB,oBAAoB,GAAG,EAAE;;QAEzB;QACA,IAAIvkB,IAAI,CAACkd,UAAU,CAAC,IAAIjlB,KAAK,CAACI,CAAC,EAC3B6kB,UAAU,GAAG,CAACA,UAAU,CAAC;QAC7B,IAAIrhB,aAAa,CAACgE,GAAG,CAACqd,UAAU,CAAC,EAC7BtX,IAAI,CAACsX,UAAU,EAAE,UAAU5V,KAAK,EAAEtB,KAAK,EAAE;UAAE2Q,KAAK,CAACmgC,MAAM,CAAC9wC,KAAK,CAAC;QAAE,CAAC,CAAC,CAAC,KAClE,IAAI5C,SAAS,CAAC8B,aAAa,CAACgY,UAAU,CAAC,EACxCtX,IAAI,CAACsX,UAAU,EAAE,UAAU3X,GAAG,EAAES,KAAK,EAAE;UAAE2Q,KAAK,CAACmgC,MAAM,CAACvxC,GAAG,EAAES,KAAK,CAAC;QAAE,CAAC,CAAC;;QAEzE;QACA3I,UAAU,CAAC,YAAY;UACnB,IAAIygB,kBAAkB,IAAI,CAACO,UAAU,EACjC5Q,QAAQ,CAACgY,YAAY,EAAExD,wBAAwB,CAAC;QACxD,CAAC,EAAE,GAAG,CAAC;QAEP,OAAOtL,KAAK;MAChB;MAEA,IAAIxG,OAAO,CAAC6nC,KAAK,CAACL,SAAS,CAAC16B,mBAAmB,EAAEnY,OAAO,EAAEoY,UAAU,CAAC,CAAC,EAAE;QACpErN,SAAS,CAACoN,mBAAmB,EAAEtG,KAAK,CAAC;MACzC;MAEA,OAAOA,KAAK;IAChB;;IAEA;AACZ;AACA;AACA;AACA;AACA;AACA;IACYxG,OAAO,GAAGpY,MAAM,CAACC,UAAU,CAAC,GAAG,UAAUigD,oBAAoB,EAAEnzC,OAAO,EAAEoY,UAAU,EAAE;MAChF,IAAIvgB,SAAS,CAACjE,OAAO,CAACG,CAAC,CAAC,KAAK,CAAC,EAC1B,OAAO,IAAI;MAEf,IAAI8G,GAAG,GAAG,EAAE;MACZ,IAAIu4C,cAAc,GAAG90C,SAAS,CAAC8B,aAAa,CAACJ,OAAO,CAAC;MACrD,IAAIuY,IAAI;MACR,IAAI/iB,MAAM;;MAEV;MACA,IAAI,CAAC29C,oBAAoB,EACrB,OAAOC,cAAc,IAAI,CAACpzC,OAAO,GAAGxK,MAAM,GAAGqF,GAAG;;MAEpD;AAChB;AACA;AACA;AACA;AACA;AACA;MACgBs4C,oBAAoB,GAAGA,oBAAoB,CAACv/C,OAAO,CAACG,CAAC,CAAC,IAAIjB,SAAS,GAAGqgD,oBAAoB,GAAG,CAACA,oBAAoB,CAAC,CAAC,CAAC,IAAIA,oBAAoB,CAAC;MAC9I1hC,4BAA4B,EAAE;MAE9B,IAAI0hC,oBAAoB,CAACv/C,OAAO,CAACG,CAAC,CAAC,GAAG,CAAC,EAAE;QACrC,IAAIq/C,cAAc,EAAE;UAChB90C,SAAS,CAACwC,IAAI,CAACqyC,oBAAoB,EAAE,UAAUr/C,CAAC,EAAE+B,CAAC,EAAE;YACjD0iB,IAAI,GAAG1iB,CAAC;YACR,IAAI0iB,IAAI,KAAKzlB,SAAS,EAClB+H,GAAG,CAAC6I,IAAI,CAACwU,yBAAyB,CAACK,IAAI,EAAEvY,OAAO,EAAEoY,UAAU,EAAE9M,eAAe,EAAEC,sBAAsB,CAAC,CAAC;UAC/G,CAAC,CAAC;QACN,CAAC,MACI;UACDjN,SAAS,CAACwC,IAAI,CAACqyC,oBAAoB,EAAE,UAAUr/C,CAAC,EAAE+B,CAAC,EAAE;YACjD0iB,IAAI,GAAGxN,SAAS,CAAClV,CAAC,CAAC;YACnB,IAAKmK,OAAO,KAAK,GAAG,IAAIqL,OAAO,CAAC6nC,KAAK,CAAC36B,IAAI,CAAC,IAAMxhB,aAAa,CAACmE,IAAI,CAAC8E,OAAO,CAAC,IAAI7M,KAAK,CAACE,CAAC,IAAI2M,OAAO,CAACnK,CAAC,EAAE0iB,IAAI,CAAE,EACxG1d,GAAG,CAAC6I,IAAI,CAAC6U,IAAI,CAAC,CAAC,KACd,IAAIvY,OAAO,KAAKlN,SAAS,EAC1B+H,GAAG,CAAC6I,IAAI,CAAC6U,IAAI,CAAC;UACtB,CAAC,CAAC;QACN;QACA/iB,MAAM,GAAGqF,GAAG,CAACjH,OAAO,CAACG,CAAC,CAAC,KAAK,CAAC,GAAG8G,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;MAChD;MACA,OAAOrF,MAAM;IACjB,CAAC;;IAED;AACZ;AACA;AACA;IACY6V,OAAO,CAACwL,OAAO,GAAG,YAAY;MAC1BpF,4BAA4B,EAAE;MAC9B,IAAIoF,OAAO,GAAGvY,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE0L,eAAe,CAAC;MACzD,OAAOuL,OAAO,CAAC,MAAM,CAAC;MACtB,OAAOA,OAAO;IAClB,CAAC;;IAED;AACZ;AACA;AACA;IACYxL,OAAO,CAACuG,cAAc,GAAG,UAAUyhC,iBAAiB,EAAE;MAClD5hC,4BAA4B,EAAE;MAC9B,IAAI6hC,kBAAkB,GAAGhoC,eAAe,CAACsG,cAAc;MACvD,IAAIyhC,iBAAiB,KAAKvgD,SAAS,EAC/B,OAAOwL,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE0zC,kBAAkB,CAAC;;MAEzD;MACAhoC,eAAe,CAACsG,cAAc,GAAGtT,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE0zC,kBAAkB,EAAE7nC,eAAe,CAAC4D,SAAS,CAACgkC,iBAAiB,EAAE5nC,eAAe,CAAC2D,SAAS,EAAE,IAAI,EAAEkkC,kBAAkB,CAAC,CAAC/hC,QAAQ,CAAC;IAC/L,CAAC;;IAED;AACZ;AACA;AACA;AACA;IACYlG,OAAO,CAAC6nC,KAAK,GAAG,UAAUK,UAAU,EAAE;MAClC,OAAOA,UAAU,YAAYloC,OAAO,IAAI,CAACkoC,UAAU,CAAChC,QAAQ,EAAE,CAACK,SAAS;IAC5E,CAAC;;IAED;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACYvmC,OAAO,CAAC8mC,SAAS,GAAG,UAAUqB,aAAa,EAAErB,SAAS,EAAEvgC,cAAc,EAAE;MACpE,IAAI6hC,iBAAiB,GAAG18C,aAAa,CAACmE,IAAI,CAACs4C,aAAa,CAAC,IAAIrgD,KAAK,CAACI,CAAC;MACpE,IAAI4X,MAAM,GAAGtT,SAAS,CAACjE,OAAO,CAACG,CAAC,CAAC;MACjC,IAAID,CAAC,GAAG,CAAC;MACT,IAAIqX,MAAM,GAAG,CAAC,IAAI,CAACsoC,iBAAiB,EAAE;QAClC;QACA,OAAOn1C,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE;UAAE7J,MAAM,EAAEyV,kBAAkB,CAAC5X,OAAO,CAACG,CAAC;QAAE,CAAC,EAAEyX,kBAAkB,CAAC;MAChG,CAAC,MACI,IAAIioC,iBAAiB,EAAE;QACxB,IAAI18C,aAAa,CAACmE,IAAI,CAACi3C,SAAS,CAAC,IAAIh/C,KAAK,CAACE,CAAC,EAAE;UAC1C;UACAmY,kBAAkB,CAAC9H,IAAI,CAAC;YACpBnO,IAAI,EAAEi+C,aAAa;YACnBhB,gBAAgB,EAAEL,SAAS;YAC3BvgC,cAAc,EAAEA;UACpB,CAAC,CAAC;QACN,CAAC,MACI;UACD,OAAO9d,CAAC,GAAG0X,kBAAkB,CAAC5X,OAAO,CAACG,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;YAC3C,IAAI0X,kBAAkB,CAAC1X,CAAC,CAAC,CAACyB,IAAI,KAAKi+C,aAAa,EAAE;cAC9C,IAAIroC,MAAM,GAAG,CAAC,EACVK,kBAAkB,CAAC7I,MAAM,CAAC7O,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cAAA,KAEjC,OAAOwK,SAAS,CAACsB,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE4L,kBAAkB,CAAC1X,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE;UACJ;QACJ;MACJ;IACJ,CAAC;;IAED,OAAOuX,OAAO;EAClB,CAAC,EAAG;EAEJ,IAAI7P,MAAM,IAAIA,MAAM,CAACk4C,EAAE,EAAE;IACrB;AACZ;AACA;AACA;AACA;AACA;IACYl4C,MAAM,CAACk4C,EAAE,CAACC,iBAAiB,GAAG,UAAU3zC,OAAO,EAAEoY,UAAU,EAAE;MACzD,IAAIw7B,SAAS,GAAG,IAAI;MACpB,IAAIp4C,MAAM,CAAC4E,aAAa,CAACJ,OAAO,CAAC,EAAE;QAC/BxE,MAAM,CAACsF,IAAI,CAAC8yC,SAAS,EAAE,YAAY;UAAExoC,MAAM,CAAC,IAAI,EAAEpL,OAAO,EAAEoY,UAAU,CAAC;QAAE,CAAC,CAAC;QAC1E,OAAOw7B,SAAS;MACpB,CAAC,MAEG,OAAOxoC,MAAM,CAACwoC,SAAS,EAAE5zC,OAAO,CAAC;IACzC,CAAC;EACL;EACA,OAAOoL,MAAM;AACjB,CAAC,CACJ"},"metadata":{},"sourceType":"script"}